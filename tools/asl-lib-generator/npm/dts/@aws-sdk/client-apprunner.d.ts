// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-apprunner' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AppRunnerClient } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { AssociateCustomDomainCommandInput, AssociateCustomDomainCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/AssociateCustomDomainCommand";
    import { CreateAutoScalingConfigurationCommandInput, CreateAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateAutoScalingConfigurationCommand";
    import { CreateConnectionCommandInput, CreateConnectionCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateConnectionCommand";
    import { CreateObservabilityConfigurationCommandInput, CreateObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateObservabilityConfigurationCommand";
    import { CreateServiceCommandInput, CreateServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateServiceCommand";
    import { CreateVpcConnectorCommandInput, CreateVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateVpcConnectorCommand";
    import { DeleteAutoScalingConfigurationCommandInput, DeleteAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteAutoScalingConfigurationCommand";
    import { DeleteConnectionCommandInput, DeleteConnectionCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteConnectionCommand";
    import { DeleteObservabilityConfigurationCommandInput, DeleteObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteObservabilityConfigurationCommand";
    import { DeleteServiceCommandInput, DeleteServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteServiceCommand";
    import { DeleteVpcConnectorCommandInput, DeleteVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteVpcConnectorCommand";
    import { DescribeAutoScalingConfigurationCommandInput, DescribeAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeAutoScalingConfigurationCommand";
    import { DescribeCustomDomainsCommandInput, DescribeCustomDomainsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeCustomDomainsCommand";
    import { DescribeObservabilityConfigurationCommandInput, DescribeObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeObservabilityConfigurationCommand";
    import { DescribeServiceCommandInput, DescribeServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeServiceCommand";
    import { DescribeVpcConnectorCommandInput, DescribeVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeVpcConnectorCommand";
    import { DisassociateCustomDomainCommandInput, DisassociateCustomDomainCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DisassociateCustomDomainCommand";
    import { ListAutoScalingConfigurationsCommandInput, ListAutoScalingConfigurationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListAutoScalingConfigurationsCommand";
    import { ListConnectionsCommandInput, ListConnectionsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListConnectionsCommand";
    import { ListObservabilityConfigurationsCommandInput, ListObservabilityConfigurationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListObservabilityConfigurationsCommand";
    import { ListOperationsCommandInput, ListOperationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListOperationsCommand";
    import { ListServicesCommandInput, ListServicesCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListServicesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListTagsForResourceCommand";
    import { ListVpcConnectorsCommandInput, ListVpcConnectorsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListVpcConnectorsCommand";
    import { PauseServiceCommandInput, PauseServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/PauseServiceCommand";
    import { ResumeServiceCommandInput, ResumeServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ResumeServiceCommand";
    import { StartDeploymentCommandInput, StartDeploymentCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/StartDeploymentCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UntagResourceCommand";
    import { UpdateServiceCommandInput, UpdateServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UpdateServiceCommand";
    /**
        * <fullname>App Runner</fullname>
        *
        *
        *
        *          <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code
        *       to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to
        *       provision and configure Amazon Web Services resources.</p>
        *          <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations,
        *       high performance, scalability, and security.</p>
        *          <p>For more information about App Runner, see the <a href="https://docs.aws.amazon.com/apprunner/latest/dg/">App Runner Developer Guide</a>.
        *       For release information, see the <a href="https://docs.aws.amazon.com/apprunner/latest/relnotes/">App Runner Release Notes</a>.</p>
        *          <p>
        *        To install the Software Development Kits (SDKs), Integrated
        *       Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href="http://aws.amazon.com/tools/">Tools for
        *         Amazon Web Services</a>.</p>
        *          <p>
        *             <b>Endpoints</b>
        *          </p>
        *          <p>For a list of Region-specific endpoints that App Runner supports, see <a href="https://docs.aws.amazon.com/general/latest/gr/apprunner.html">App Runner
        *         endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
        */
    export class AppRunner extends AppRunnerClient {
            /**
                * <p>Associate your own domain name with the App Runner subdomain URL of your App Runner service.</p>
                *          <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record
                *       that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or
                *       more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks
                *       domain validity in a certificate stored in <a href="https://docs.aws.amazon.com/acm/latest/userguide">AWS Certificate Manager (ACM)</a>.</p>
                */
            associateCustomDomain(args: AssociateCustomDomainCommandInput, options?: __HttpHandlerOptions): Promise<AssociateCustomDomainCommandOutput>;
            associateCustomDomain(args: AssociateCustomDomainCommandInput, cb: (err: any, data?: AssociateCustomDomainCommandOutput) => void): void;
            associateCustomDomain(args: AssociateCustomDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateCustomDomainCommandOutput) => void): void;
            /**
                * <p>Create an App Runner automatic scaling configuration resource. App Runner requires this resource when you create or update App Runner services and you require
                *       non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p>
                *          <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>AutoScalingConfigurationName</code>. The call
                *       returns incremental <code>AutoScalingConfigurationRevision</code> values. When you create a service and configure an auto scaling configuration resource,
                *       the service uses the latest active revision of the auto scaling configuration by default. You can optionally configure the service to use a specific
                *       revision.</p>
                *          <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is
                *       a higher minimal cost.</p>
                *          <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>
                */
            createAutoScalingConfiguration(args: CreateAutoScalingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateAutoScalingConfigurationCommandOutput>;
            createAutoScalingConfiguration(args: CreateAutoScalingConfigurationCommandInput, cb: (err: any, data?: CreateAutoScalingConfigurationCommandOutput) => void): void;
            createAutoScalingConfiguration(args: CreateAutoScalingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAutoScalingConfigurationCommandOutput) => void): void;
            /**
                * <p>Create an App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from
                *       certain third-party providers. You can share a connection across multiple services.</p>
                *          <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you
                *       can use the connection.</p>
                */
            createConnection(args: CreateConnectionCommandInput, options?: __HttpHandlerOptions): Promise<CreateConnectionCommandOutput>;
            createConnection(args: CreateConnectionCommandInput, cb: (err: any, data?: CreateConnectionCommandOutput) => void): void;
            createConnection(args: CreateConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateConnectionCommandOutput) => void): void;
            /**
                * <p>Create an App Runner observability configuration resource. App Runner requires this resource when you create or update App Runner services and you want to enable
                *       non-default observability features. You can share an observability configuration across multiple services.</p>
                *          <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>ObservabilityConfigurationName</code>. The
                *       call returns incremental <code>ObservabilityConfigurationRevision</code> values. When you create a service and configure an observability configuration
                *       resource, the service uses the latest active revision of the observability configuration by default. You can optionally configure the service to use a
                *       specific revision.</p>
                *          <p>The observability configuration resource is designed to configure multiple features (currently one feature, tracing). This action takes optional
                *       parameters that describe the configuration of these features (currently one parameter, <code>TraceConfiguration</code>). If you don't specify a feature
                *       parameter, App Runner doesn't enable the feature.</p>
                */
            createObservabilityConfiguration(args: CreateObservabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateObservabilityConfigurationCommandOutput>;
            createObservabilityConfiguration(args: CreateObservabilityConfigurationCommandInput, cb: (err: any, data?: CreateObservabilityConfigurationCommandOutput) => void): void;
            createObservabilityConfiguration(args: CreateObservabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateObservabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Create an App Runner service. After the service is created, the action also automatically starts a deployment.</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a> call to track the operation's progress.</p>
                */
            createService(args: CreateServiceCommandInput, options?: __HttpHandlerOptions): Promise<CreateServiceCommandOutput>;
            createService(args: CreateServiceCommandInput, cb: (err: any, data?: CreateServiceCommandOutput) => void): void;
            createService(args: CreateServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateServiceCommandOutput) => void): void;
            /**
                * <p>Create an App Runner VPC connector resource. App Runner requires this resource when you want to associate your App Runner service to a custom Amazon Virtual Private Cloud
                *         (Amazon VPC).</p>
                */
            createVpcConnector(args: CreateVpcConnectorCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcConnectorCommandOutput>;
            createVpcConnector(args: CreateVpcConnectorCommandInput, cb: (err: any, data?: CreateVpcConnectorCommandOutput) => void): void;
            createVpcConnector(args: CreateVpcConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcConnectorCommandOutput) => void): void;
            /**
                * <p>Delete an App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a
                *       configuration that's used by one or more App Runner services.</p>
                */
            deleteAutoScalingConfiguration(args: DeleteAutoScalingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAutoScalingConfigurationCommandOutput>;
            deleteAutoScalingConfiguration(args: DeleteAutoScalingConfigurationCommandInput, cb: (err: any, data?: DeleteAutoScalingConfigurationCommandOutput) => void): void;
            deleteAutoScalingConfiguration(args: DeleteAutoScalingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAutoScalingConfigurationCommandOutput) => void): void;
            /**
                * <p>Delete an App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the
                *         <code>DeleteConnection</code> action fails.</p>
                */
            deleteConnection(args: DeleteConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteConnectionCommandOutput>;
            deleteConnection(args: DeleteConnectionCommandInput, cb: (err: any, data?: DeleteConnectionCommandOutput) => void): void;
            deleteConnection(args: DeleteConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteConnectionCommandOutput) => void): void;
            /**
                * <p>Delete an App Runner observability configuration resource. You can delete a specific revision or the latest active revision. You can't delete a
                *       configuration that's used by one or more App Runner services.</p>
                */
            deleteObservabilityConfiguration(args: DeleteObservabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteObservabilityConfigurationCommandOutput>;
            deleteObservabilityConfiguration(args: DeleteObservabilityConfigurationCommandInput, cb: (err: any, data?: DeleteObservabilityConfigurationCommandOutput) => void): void;
            deleteObservabilityConfiguration(args: DeleteObservabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteObservabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Delete an App Runner service.</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
                *       call to track the operation's progress.</p>
                */
            deleteService(args: DeleteServiceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteServiceCommandOutput>;
            deleteService(args: DeleteServiceCommandInput, cb: (err: any, data?: DeleteServiceCommandOutput) => void): void;
            deleteService(args: DeleteServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteServiceCommandOutput) => void): void;
            /**
                * <p>Delete an App Runner VPC connector resource. You can't delete a
                *       connector that's used by one or more App Runner services.</p>
                */
            deleteVpcConnector(args: DeleteVpcConnectorCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcConnectorCommandOutput>;
            deleteVpcConnector(args: DeleteVpcConnectorCommandInput, cb: (err: any, data?: DeleteVpcConnectorCommandOutput) => void): void;
            deleteVpcConnector(args: DeleteVpcConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcConnectorCommandOutput) => void): void;
            /**
                * <p>Return a full description of an App Runner automatic scaling configuration resource.</p>
                */
            describeAutoScalingConfiguration(args: DescribeAutoScalingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAutoScalingConfigurationCommandOutput>;
            describeAutoScalingConfiguration(args: DescribeAutoScalingConfigurationCommandInput, cb: (err: any, data?: DescribeAutoScalingConfigurationCommandOutput) => void): void;
            describeAutoScalingConfiguration(args: DescribeAutoScalingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAutoScalingConfigurationCommandOutput) => void): void;
            /**
                * <p>Return a description of custom domain names that are associated with an App Runner service.</p>
                */
            describeCustomDomains(args: DescribeCustomDomainsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCustomDomainsCommandOutput>;
            describeCustomDomains(args: DescribeCustomDomainsCommandInput, cb: (err: any, data?: DescribeCustomDomainsCommandOutput) => void): void;
            describeCustomDomains(args: DescribeCustomDomainsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCustomDomainsCommandOutput) => void): void;
            /**
                * <p>Return a full description of an App Runner observability configuration resource.</p>
                */
            describeObservabilityConfiguration(args: DescribeObservabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeObservabilityConfigurationCommandOutput>;
            describeObservabilityConfiguration(args: DescribeObservabilityConfigurationCommandInput, cb: (err: any, data?: DescribeObservabilityConfigurationCommandOutput) => void): void;
            describeObservabilityConfiguration(args: DescribeObservabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeObservabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Return a full description of an App Runner service.</p>
                */
            describeService(args: DescribeServiceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeServiceCommandOutput>;
            describeService(args: DescribeServiceCommandInput, cb: (err: any, data?: DescribeServiceCommandOutput) => void): void;
            describeService(args: DescribeServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeServiceCommandOutput) => void): void;
            /**
                * <p>Return a description of an App Runner VPC connector resource.</p>
                */
            describeVpcConnector(args: DescribeVpcConnectorCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcConnectorCommandOutput>;
            describeVpcConnector(args: DescribeVpcConnectorCommandInput, cb: (err: any, data?: DescribeVpcConnectorCommandOutput) => void): void;
            describeVpcConnector(args: DescribeVpcConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcConnectorCommandOutput) => void): void;
            /**
                * <p>Disassociate a custom domain name from an App Runner service.</p>
                *          <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href="https://docs.aws.amazon.com/acm/latest/userguide">AWS
                *         Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for
                *       30 days after a domain is disassociated from your service.</p>
                */
            disassociateCustomDomain(args: DisassociateCustomDomainCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateCustomDomainCommandOutput>;
            disassociateCustomDomain(args: DisassociateCustomDomainCommandInput, cb: (err: any, data?: DisassociateCustomDomainCommandOutput) => void): void;
            disassociateCustomDomain(args: DisassociateCustomDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateCustomDomainCommandOutput) => void): void;
            /**
                * <p>Returns a list of active App Runner automatic scaling configurations in your Amazon Web Services account. You can query the revisions for a specific
                *       configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested
                *       name.</p>
                *          <p>To retrieve a full description of a particular configuration revision, call  and provide one of
                *       the ARNs returned by <code>ListAutoScalingConfigurations</code>.</p>
                */
            listAutoScalingConfigurations(args: ListAutoScalingConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListAutoScalingConfigurationsCommandOutput>;
            listAutoScalingConfigurations(args: ListAutoScalingConfigurationsCommandInput, cb: (err: any, data?: ListAutoScalingConfigurationsCommandOutput) => void): void;
            listAutoScalingConfigurations(args: ListAutoScalingConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAutoScalingConfigurationsCommandOutput) => void): void;
            /**
                * <p>Returns a list of App Runner connections that are associated with your Amazon Web Services account.</p>
                */
            listConnections(args: ListConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<ListConnectionsCommandOutput>;
            listConnections(args: ListConnectionsCommandInput, cb: (err: any, data?: ListConnectionsCommandOutput) => void): void;
            listConnections(args: ListConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListConnectionsCommandOutput) => void): void;
            /**
                * <p>Returns a list of active App Runner observability configurations in your Amazon Web Services account. You can query the revisions for a specific
                *       configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested
                *       name.</p>
                *          <p>To retrieve a full description of a particular configuration revision, call  and provide one
                *       of the ARNs returned by <code>ListObservabilityConfigurations</code>.</p>
                */
            listObservabilityConfigurations(args: ListObservabilityConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListObservabilityConfigurationsCommandOutput>;
            listObservabilityConfigurations(args: ListObservabilityConfigurationsCommandInput, cb: (err: any, data?: ListObservabilityConfigurationsCommandOutput) => void): void;
            listObservabilityConfigurations(args: ListObservabilityConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListObservabilityConfigurationsCommandOutput) => void): void;
            /**
                * <p>Return a list of operations that occurred on an App Runner service.</p>
                *          <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the
                *       last started operation.</p>
                */
            listOperations(args: ListOperationsCommandInput, options?: __HttpHandlerOptions): Promise<ListOperationsCommandOutput>;
            listOperations(args: ListOperationsCommandInput, cb: (err: any, data?: ListOperationsCommandOutput) => void): void;
            listOperations(args: ListOperationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOperationsCommandOutput) => void): void;
            /**
                * <p>Returns a list of running App Runner services in your Amazon Web Services account.</p>
                */
            listServices(args: ListServicesCommandInput, options?: __HttpHandlerOptions): Promise<ListServicesCommandOutput>;
            listServices(args: ListServicesCommandInput, cb: (err: any, data?: ListServicesCommandOutput) => void): void;
            listServices(args: ListServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServicesCommandOutput) => void): void;
            /**
                * <p>List tags that are associated with for an App Runner resource. The response contains a list of tag key-value pairs.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Returns a list of App Runner VPC connectors in your Amazon Web Services account.</p>
                */
            listVpcConnectors(args: ListVpcConnectorsCommandInput, options?: __HttpHandlerOptions): Promise<ListVpcConnectorsCommandOutput>;
            listVpcConnectors(args: ListVpcConnectorsCommandInput, cb: (err: any, data?: ListVpcConnectorsCommandOutput) => void): void;
            listVpcConnectors(args: ListVpcConnectorsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListVpcConnectorsCommandOutput) => void): void;
            /**
                * <p>Pause an active App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is
                *       removed).</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
                *       call to track the operation's progress.</p>
                */
            pauseService(args: PauseServiceCommandInput, options?: __HttpHandlerOptions): Promise<PauseServiceCommandOutput>;
            pauseService(args: PauseServiceCommandInput, cb: (err: any, data?: PauseServiceCommandOutput) => void): void;
            pauseService(args: PauseServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PauseServiceCommandOutput) => void): void;
            /**
                * <p>Resume an active App Runner service. App Runner provisions compute capacity for the service.</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
                *       call to track the operation's progress.</p>
                */
            resumeService(args: ResumeServiceCommandInput, options?: __HttpHandlerOptions): Promise<ResumeServiceCommandOutput>;
            resumeService(args: ResumeServiceCommandInput, cb: (err: any, data?: ResumeServiceCommandOutput) => void): void;
            resumeService(args: ResumeServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResumeServiceCommandOutput) => void): void;
            /**
                * <p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner
                *       service.</p>
                *          <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker
                *       image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
                *       call to track the operation's progress.</p>
                */
            startDeployment(args: StartDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<StartDeploymentCommandOutput>;
            startDeployment(args: StartDeploymentCommandInput, cb: (err: any, data?: StartDeploymentCommandOutput) => void): void;
            startDeployment(args: StartDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartDeploymentCommandOutput) => void): void;
            /**
                * <p>Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Remove tags from an App Runner resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Update an App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto
                *       scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service.
                *       These can be set only when you create the service.</p>
                *          <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p>
                *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
                *       call to track the operation's progress.</p>
                */
            updateService(args: UpdateServiceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceCommandOutput>;
            updateService(args: UpdateServiceCommandInput, cb: (err: any, data?: UpdateServiceCommandOutput) => void): void;
            updateService(args: UpdateServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateCustomDomainCommandInput, AssociateCustomDomainCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/AssociateCustomDomainCommand";
    import { CreateAutoScalingConfigurationCommandInput, CreateAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateAutoScalingConfigurationCommand";
    import { CreateConnectionCommandInput, CreateConnectionCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateConnectionCommand";
    import { CreateObservabilityConfigurationCommandInput, CreateObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateObservabilityConfigurationCommand";
    import { CreateServiceCommandInput, CreateServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateServiceCommand";
    import { CreateVpcConnectorCommandInput, CreateVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateVpcConnectorCommand";
    import { DeleteAutoScalingConfigurationCommandInput, DeleteAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteAutoScalingConfigurationCommand";
    import { DeleteConnectionCommandInput, DeleteConnectionCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteConnectionCommand";
    import { DeleteObservabilityConfigurationCommandInput, DeleteObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteObservabilityConfigurationCommand";
    import { DeleteServiceCommandInput, DeleteServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteServiceCommand";
    import { DeleteVpcConnectorCommandInput, DeleteVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteVpcConnectorCommand";
    import { DescribeAutoScalingConfigurationCommandInput, DescribeAutoScalingConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeAutoScalingConfigurationCommand";
    import { DescribeCustomDomainsCommandInput, DescribeCustomDomainsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeCustomDomainsCommand";
    import { DescribeObservabilityConfigurationCommandInput, DescribeObservabilityConfigurationCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeObservabilityConfigurationCommand";
    import { DescribeServiceCommandInput, DescribeServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeServiceCommand";
    import { DescribeVpcConnectorCommandInput, DescribeVpcConnectorCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeVpcConnectorCommand";
    import { DisassociateCustomDomainCommandInput, DisassociateCustomDomainCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DisassociateCustomDomainCommand";
    import { ListAutoScalingConfigurationsCommandInput, ListAutoScalingConfigurationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListAutoScalingConfigurationsCommand";
    import { ListConnectionsCommandInput, ListConnectionsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListConnectionsCommand";
    import { ListObservabilityConfigurationsCommandInput, ListObservabilityConfigurationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListObservabilityConfigurationsCommand";
    import { ListOperationsCommandInput, ListOperationsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListOperationsCommand";
    import { ListServicesCommandInput, ListServicesCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListServicesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListTagsForResourceCommand";
    import { ListVpcConnectorsCommandInput, ListVpcConnectorsCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListVpcConnectorsCommand";
    import { PauseServiceCommandInput, PauseServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/PauseServiceCommand";
    import { ResumeServiceCommandInput, ResumeServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ResumeServiceCommand";
    import { StartDeploymentCommandInput, StartDeploymentCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/StartDeploymentCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UntagResourceCommand";
    import { UpdateServiceCommandInput, UpdateServiceCommandOutput } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UpdateServiceCommand";
    export type ServiceInputTypes = AssociateCustomDomainCommandInput | CreateAutoScalingConfigurationCommandInput | CreateConnectionCommandInput | CreateObservabilityConfigurationCommandInput | CreateServiceCommandInput | CreateVpcConnectorCommandInput | DeleteAutoScalingConfigurationCommandInput | DeleteConnectionCommandInput | DeleteObservabilityConfigurationCommandInput | DeleteServiceCommandInput | DeleteVpcConnectorCommandInput | DescribeAutoScalingConfigurationCommandInput | DescribeCustomDomainsCommandInput | DescribeObservabilityConfigurationCommandInput | DescribeServiceCommandInput | DescribeVpcConnectorCommandInput | DisassociateCustomDomainCommandInput | ListAutoScalingConfigurationsCommandInput | ListConnectionsCommandInput | ListObservabilityConfigurationsCommandInput | ListOperationsCommandInput | ListServicesCommandInput | ListTagsForResourceCommandInput | ListVpcConnectorsCommandInput | PauseServiceCommandInput | ResumeServiceCommandInput | StartDeploymentCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateServiceCommandInput;
    export type ServiceOutputTypes = AssociateCustomDomainCommandOutput | CreateAutoScalingConfigurationCommandOutput | CreateConnectionCommandOutput | CreateObservabilityConfigurationCommandOutput | CreateServiceCommandOutput | CreateVpcConnectorCommandOutput | DeleteAutoScalingConfigurationCommandOutput | DeleteConnectionCommandOutput | DeleteObservabilityConfigurationCommandOutput | DeleteServiceCommandOutput | DeleteVpcConnectorCommandOutput | DescribeAutoScalingConfigurationCommandOutput | DescribeCustomDomainsCommandOutput | DescribeObservabilityConfigurationCommandOutput | DescribeServiceCommandOutput | DescribeVpcConnectorCommandOutput | DisassociateCustomDomainCommandOutput | ListAutoScalingConfigurationsCommandOutput | ListConnectionsCommandOutput | ListObservabilityConfigurationsCommandOutput | ListOperationsCommandOutput | ListServicesCommandOutput | ListTagsForResourceCommandOutput | ListVpcConnectorsCommandOutput | PauseServiceCommandOutput | ResumeServiceCommandOutput | StartDeploymentCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateServiceCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type AppRunnerClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of AppRunnerClient class constructor that set the region, credentials and other options.
        */
    export interface AppRunnerClientConfig extends AppRunnerClientConfigType {
    }
    type AppRunnerClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of AppRunnerClient class. This is resolved and normalized from the {@link AppRunnerClientConfig | constructor configuration interface}.
        */
    export interface AppRunnerClientResolvedConfig extends AppRunnerClientResolvedConfigType {
    }
    /**
        * <fullname>App Runner</fullname>
        *
        *
        *
        *          <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code
        *       to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to
        *       provision and configure Amazon Web Services resources.</p>
        *          <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations,
        *       high performance, scalability, and security.</p>
        *          <p>For more information about App Runner, see the <a href="https://docs.aws.amazon.com/apprunner/latest/dg/">App Runner Developer Guide</a>.
        *       For release information, see the <a href="https://docs.aws.amazon.com/apprunner/latest/relnotes/">App Runner Release Notes</a>.</p>
        *          <p>
        *        To install the Software Development Kits (SDKs), Integrated
        *       Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href="http://aws.amazon.com/tools/">Tools for
        *         Amazon Web Services</a>.</p>
        *          <p>
        *             <b>Endpoints</b>
        *          </p>
        *          <p>For a list of Region-specific endpoints that App Runner supports, see <a href="https://docs.aws.amazon.com/general/latest/gr/apprunner.html">App Runner
        *         endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
        */
    export class AppRunnerClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AppRunnerClientResolvedConfig> {
            /**
                * The resolved configuration of AppRunnerClient class. This is resolved and normalized from the {@link AppRunnerClientConfig | constructor configuration interface}.
                */
            readonly config: AppRunnerClientResolvedConfig;
            constructor(configuration: AppRunnerClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/AssociateCustomDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { AssociateCustomDomainRequest, AssociateCustomDomainResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface AssociateCustomDomainCommandInput extends AssociateCustomDomainRequest {
    }
    export interface AssociateCustomDomainCommandOutput extends AssociateCustomDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Associate your own domain name with the App Runner subdomain URL of your App Runner service.</p>
        *          <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record
        *       that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or
        *       more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks
        *       domain validity in a certificate stored in <a href="https://docs.aws.amazon.com/acm/latest/userguide">AWS Certificate Manager (ACM)</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, AssociateCustomDomainCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, AssociateCustomDomainCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new AssociateCustomDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateCustomDomainCommandInput} for command's `input` shape.
        * @see {@link AssociateCustomDomainCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class AssociateCustomDomainCommand extends $Command<AssociateCustomDomainCommandInput, AssociateCustomDomainCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: AssociateCustomDomainCommandInput;
            constructor(input: AssociateCustomDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateCustomDomainCommandInput, AssociateCustomDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateAutoScalingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { CreateAutoScalingConfigurationRequest, CreateAutoScalingConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface CreateAutoScalingConfigurationCommandInput extends CreateAutoScalingConfigurationRequest {
    }
    export interface CreateAutoScalingConfigurationCommandOutput extends CreateAutoScalingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Create an App Runner automatic scaling configuration resource. App Runner requires this resource when you create or update App Runner services and you require
        *       non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p>
        *          <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>AutoScalingConfigurationName</code>. The call
        *       returns incremental <code>AutoScalingConfigurationRevision</code> values. When you create a service and configure an auto scaling configuration resource,
        *       the service uses the latest active revision of the auto scaling configuration by default. You can optionally configure the service to use a specific
        *       revision.</p>
        *          <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is
        *       a higher minimal cost.</p>
        *          <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, CreateAutoScalingConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, CreateAutoScalingConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new CreateAutoScalingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAutoScalingConfigurationCommandInput} for command's `input` shape.
        * @see {@link CreateAutoScalingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class CreateAutoScalingConfigurationCommand extends $Command<CreateAutoScalingConfigurationCommandInput, CreateAutoScalingConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: CreateAutoScalingConfigurationCommandInput;
            constructor(input: CreateAutoScalingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAutoScalingConfigurationCommandInput, CreateAutoScalingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { CreateConnectionRequest, CreateConnectionResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface CreateConnectionCommandInput extends CreateConnectionRequest {
    }
    export interface CreateConnectionCommandOutput extends CreateConnectionResponse, __MetadataBearer {
    }
    /**
        * <p>Create an App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from
        *       certain third-party providers. You can share a connection across multiple services.</p>
        *          <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you
        *       can use the connection.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, CreateConnectionCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, CreateConnectionCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new CreateConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateConnectionCommandInput} for command's `input` shape.
        * @see {@link CreateConnectionCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class CreateConnectionCommand extends $Command<CreateConnectionCommandInput, CreateConnectionCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: CreateConnectionCommandInput;
            constructor(input: CreateConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateConnectionCommandInput, CreateConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateObservabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { CreateObservabilityConfigurationRequest, CreateObservabilityConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface CreateObservabilityConfigurationCommandInput extends CreateObservabilityConfigurationRequest {
    }
    export interface CreateObservabilityConfigurationCommandOutput extends CreateObservabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Create an App Runner observability configuration resource. App Runner requires this resource when you create or update App Runner services and you want to enable
        *       non-default observability features. You can share an observability configuration across multiple services.</p>
        *          <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>ObservabilityConfigurationName</code>. The
        *       call returns incremental <code>ObservabilityConfigurationRevision</code> values. When you create a service and configure an observability configuration
        *       resource, the service uses the latest active revision of the observability configuration by default. You can optionally configure the service to use a
        *       specific revision.</p>
        *          <p>The observability configuration resource is designed to configure multiple features (currently one feature, tracing). This action takes optional
        *       parameters that describe the configuration of these features (currently one parameter, <code>TraceConfiguration</code>). If you don't specify a feature
        *       parameter, App Runner doesn't enable the feature.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, CreateObservabilityConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, CreateObservabilityConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new CreateObservabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateObservabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link CreateObservabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class CreateObservabilityConfigurationCommand extends $Command<CreateObservabilityConfigurationCommandInput, CreateObservabilityConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: CreateObservabilityConfigurationCommandInput;
            constructor(input: CreateObservabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateObservabilityConfigurationCommandInput, CreateObservabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { CreateServiceRequest, CreateServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface CreateServiceCommandInput extends CreateServiceRequest {
    }
    export interface CreateServiceCommandOutput extends CreateServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Create an App Runner service. After the service is created, the action also automatically starts a deployment.</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a> call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, CreateServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, CreateServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new CreateServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateServiceCommandInput} for command's `input` shape.
        * @see {@link CreateServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class CreateServiceCommand extends $Command<CreateServiceCommandInput, CreateServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: CreateServiceCommandInput;
            constructor(input: CreateServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateServiceCommandInput, CreateServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/CreateVpcConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { CreateVpcConnectorRequest, CreateVpcConnectorResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface CreateVpcConnectorCommandInput extends CreateVpcConnectorRequest {
    }
    export interface CreateVpcConnectorCommandOutput extends CreateVpcConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Create an App Runner VPC connector resource. App Runner requires this resource when you want to associate your App Runner service to a custom Amazon Virtual Private Cloud
        *         (Amazon VPC).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, CreateVpcConnectorCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, CreateVpcConnectorCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new CreateVpcConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateVpcConnectorCommandInput} for command's `input` shape.
        * @see {@link CreateVpcConnectorCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class CreateVpcConnectorCommand extends $Command<CreateVpcConnectorCommandInput, CreateVpcConnectorCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: CreateVpcConnectorCommandInput;
            constructor(input: CreateVpcConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVpcConnectorCommandInput, CreateVpcConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteAutoScalingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DeleteAutoScalingConfigurationRequest, DeleteAutoScalingConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DeleteAutoScalingConfigurationCommandInput extends DeleteAutoScalingConfigurationRequest {
    }
    export interface DeleteAutoScalingConfigurationCommandOutput extends DeleteAutoScalingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a
        *       configuration that's used by one or more App Runner services.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DeleteAutoScalingConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DeleteAutoScalingConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DeleteAutoScalingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAutoScalingConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteAutoScalingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DeleteAutoScalingConfigurationCommand extends $Command<DeleteAutoScalingConfigurationCommandInput, DeleteAutoScalingConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DeleteAutoScalingConfigurationCommandInput;
            constructor(input: DeleteAutoScalingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAutoScalingConfigurationCommandInput, DeleteAutoScalingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DeleteConnectionRequest, DeleteConnectionResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DeleteConnectionCommandInput extends DeleteConnectionRequest {
    }
    export interface DeleteConnectionCommandOutput extends DeleteConnectionResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the
        *         <code>DeleteConnection</code> action fails.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DeleteConnectionCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DeleteConnectionCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DeleteConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteConnectionCommandInput} for command's `input` shape.
        * @see {@link DeleteConnectionCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DeleteConnectionCommand extends $Command<DeleteConnectionCommandInput, DeleteConnectionCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DeleteConnectionCommandInput;
            constructor(input: DeleteConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteConnectionCommandInput, DeleteConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteObservabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DeleteObservabilityConfigurationRequest, DeleteObservabilityConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DeleteObservabilityConfigurationCommandInput extends DeleteObservabilityConfigurationRequest {
    }
    export interface DeleteObservabilityConfigurationCommandOutput extends DeleteObservabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an App Runner observability configuration resource. You can delete a specific revision or the latest active revision. You can't delete a
        *       configuration that's used by one or more App Runner services.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DeleteObservabilityConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DeleteObservabilityConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DeleteObservabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteObservabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteObservabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DeleteObservabilityConfigurationCommand extends $Command<DeleteObservabilityConfigurationCommandInput, DeleteObservabilityConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DeleteObservabilityConfigurationCommandInput;
            constructor(input: DeleteObservabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteObservabilityConfigurationCommandInput, DeleteObservabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DeleteServiceRequest, DeleteServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DeleteServiceCommandInput extends DeleteServiceRequest {
    }
    export interface DeleteServiceCommandOutput extends DeleteServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an App Runner service.</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
        *       call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DeleteServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DeleteServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DeleteServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteServiceCommandInput} for command's `input` shape.
        * @see {@link DeleteServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DeleteServiceCommand extends $Command<DeleteServiceCommandInput, DeleteServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DeleteServiceCommandInput;
            constructor(input: DeleteServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteServiceCommandInput, DeleteServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DeleteVpcConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DeleteVpcConnectorRequest, DeleteVpcConnectorResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DeleteVpcConnectorCommandInput extends DeleteVpcConnectorRequest {
    }
    export interface DeleteVpcConnectorCommandOutput extends DeleteVpcConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an App Runner VPC connector resource. You can't delete a
        *       connector that's used by one or more App Runner services.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DeleteVpcConnectorCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DeleteVpcConnectorCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DeleteVpcConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVpcConnectorCommandInput} for command's `input` shape.
        * @see {@link DeleteVpcConnectorCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DeleteVpcConnectorCommand extends $Command<DeleteVpcConnectorCommandInput, DeleteVpcConnectorCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DeleteVpcConnectorCommandInput;
            constructor(input: DeleteVpcConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVpcConnectorCommandInput, DeleteVpcConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeAutoScalingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DescribeAutoScalingConfigurationRequest, DescribeAutoScalingConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DescribeAutoScalingConfigurationCommandInput extends DescribeAutoScalingConfigurationRequest {
    }
    export interface DescribeAutoScalingConfigurationCommandOutput extends DescribeAutoScalingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Return a full description of an App Runner automatic scaling configuration resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DescribeAutoScalingConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DescribeAutoScalingConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DescribeAutoScalingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAutoScalingConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeAutoScalingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DescribeAutoScalingConfigurationCommand extends $Command<DescribeAutoScalingConfigurationCommandInput, DescribeAutoScalingConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DescribeAutoScalingConfigurationCommandInput;
            constructor(input: DescribeAutoScalingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAutoScalingConfigurationCommandInput, DescribeAutoScalingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeCustomDomainsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DescribeCustomDomainsRequest, DescribeCustomDomainsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DescribeCustomDomainsCommandInput extends DescribeCustomDomainsRequest {
    }
    export interface DescribeCustomDomainsCommandOutput extends DescribeCustomDomainsResponse, __MetadataBearer {
    }
    /**
        * <p>Return a description of custom domain names that are associated with an App Runner service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DescribeCustomDomainsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DescribeCustomDomainsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DescribeCustomDomainsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCustomDomainsCommandInput} for command's `input` shape.
        * @see {@link DescribeCustomDomainsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DescribeCustomDomainsCommand extends $Command<DescribeCustomDomainsCommandInput, DescribeCustomDomainsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DescribeCustomDomainsCommandInput;
            constructor(input: DescribeCustomDomainsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCustomDomainsCommandInput, DescribeCustomDomainsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeObservabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DescribeObservabilityConfigurationRequest, DescribeObservabilityConfigurationResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DescribeObservabilityConfigurationCommandInput extends DescribeObservabilityConfigurationRequest {
    }
    export interface DescribeObservabilityConfigurationCommandOutput extends DescribeObservabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Return a full description of an App Runner observability configuration resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DescribeObservabilityConfigurationCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DescribeObservabilityConfigurationCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DescribeObservabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeObservabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeObservabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DescribeObservabilityConfigurationCommand extends $Command<DescribeObservabilityConfigurationCommandInput, DescribeObservabilityConfigurationCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DescribeObservabilityConfigurationCommandInput;
            constructor(input: DescribeObservabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeObservabilityConfigurationCommandInput, DescribeObservabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DescribeServiceRequest, DescribeServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DescribeServiceCommandInput extends DescribeServiceRequest {
    }
    export interface DescribeServiceCommandOutput extends DescribeServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Return a full description of an App Runner service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DescribeServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DescribeServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DescribeServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeServiceCommandInput} for command's `input` shape.
        * @see {@link DescribeServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DescribeServiceCommand extends $Command<DescribeServiceCommandInput, DescribeServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DescribeServiceCommandInput;
            constructor(input: DescribeServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeServiceCommandInput, DescribeServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DescribeVpcConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DescribeVpcConnectorRequest, DescribeVpcConnectorResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DescribeVpcConnectorCommandInput extends DescribeVpcConnectorRequest {
    }
    export interface DescribeVpcConnectorCommandOutput extends DescribeVpcConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Return a description of an App Runner VPC connector resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DescribeVpcConnectorCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DescribeVpcConnectorCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DescribeVpcConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeVpcConnectorCommandInput} for command's `input` shape.
        * @see {@link DescribeVpcConnectorCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DescribeVpcConnectorCommand extends $Command<DescribeVpcConnectorCommandInput, DescribeVpcConnectorCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DescribeVpcConnectorCommandInput;
            constructor(input: DescribeVpcConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeVpcConnectorCommandInput, DescribeVpcConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/DisassociateCustomDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { DisassociateCustomDomainRequest, DisassociateCustomDomainResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface DisassociateCustomDomainCommandInput extends DisassociateCustomDomainRequest {
    }
    export interface DisassociateCustomDomainCommandOutput extends DisassociateCustomDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociate a custom domain name from an App Runner service.</p>
        *          <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href="https://docs.aws.amazon.com/acm/latest/userguide">AWS
        *         Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for
        *       30 days after a domain is disassociated from your service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, DisassociateCustomDomainCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, DisassociateCustomDomainCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new DisassociateCustomDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateCustomDomainCommandInput} for command's `input` shape.
        * @see {@link DisassociateCustomDomainCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class DisassociateCustomDomainCommand extends $Command<DisassociateCustomDomainCommandInput, DisassociateCustomDomainCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: DisassociateCustomDomainCommandInput;
            constructor(input: DisassociateCustomDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateCustomDomainCommandInput, DisassociateCustomDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListAutoScalingConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListAutoScalingConfigurationsRequest, ListAutoScalingConfigurationsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListAutoScalingConfigurationsCommandInput extends ListAutoScalingConfigurationsRequest {
    }
    export interface ListAutoScalingConfigurationsCommandOutput extends ListAutoScalingConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of active App Runner automatic scaling configurations in your Amazon Web Services account. You can query the revisions for a specific
        *       configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested
        *       name.</p>
        *          <p>To retrieve a full description of a particular configuration revision, call  and provide one of
        *       the ARNs returned by <code>ListAutoScalingConfigurations</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListAutoScalingConfigurationsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListAutoScalingConfigurationsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListAutoScalingConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAutoScalingConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListAutoScalingConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListAutoScalingConfigurationsCommand extends $Command<ListAutoScalingConfigurationsCommandInput, ListAutoScalingConfigurationsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListAutoScalingConfigurationsCommandInput;
            constructor(input: ListAutoScalingConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAutoScalingConfigurationsCommandInput, ListAutoScalingConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListConnectionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListConnectionsRequest, ListConnectionsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListConnectionsCommandInput extends ListConnectionsRequest {
    }
    export interface ListConnectionsCommandOutput extends ListConnectionsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of App Runner connections that are associated with your Amazon Web Services account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListConnectionsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListConnectionsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListConnectionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListConnectionsCommandInput} for command's `input` shape.
        * @see {@link ListConnectionsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListConnectionsCommand extends $Command<ListConnectionsCommandInput, ListConnectionsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListConnectionsCommandInput;
            constructor(input: ListConnectionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListConnectionsCommandInput, ListConnectionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListObservabilityConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListObservabilityConfigurationsRequest, ListObservabilityConfigurationsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListObservabilityConfigurationsCommandInput extends ListObservabilityConfigurationsRequest {
    }
    export interface ListObservabilityConfigurationsCommandOutput extends ListObservabilityConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of active App Runner observability configurations in your Amazon Web Services account. You can query the revisions for a specific
        *       configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested
        *       name.</p>
        *          <p>To retrieve a full description of a particular configuration revision, call  and provide one
        *       of the ARNs returned by <code>ListObservabilityConfigurations</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListObservabilityConfigurationsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListObservabilityConfigurationsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListObservabilityConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListObservabilityConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListObservabilityConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListObservabilityConfigurationsCommand extends $Command<ListObservabilityConfigurationsCommandInput, ListObservabilityConfigurationsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListObservabilityConfigurationsCommandInput;
            constructor(input: ListObservabilityConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListObservabilityConfigurationsCommandInput, ListObservabilityConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListOperationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListOperationsRequest, ListOperationsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListOperationsCommandInput extends ListOperationsRequest {
    }
    export interface ListOperationsCommandOutput extends ListOperationsResponse, __MetadataBearer {
    }
    /**
        * <p>Return a list of operations that occurred on an App Runner service.</p>
        *          <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the
        *       last started operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListOperationsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListOperationsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListOperationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOperationsCommandInput} for command's `input` shape.
        * @see {@link ListOperationsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListOperationsCommand extends $Command<ListOperationsCommandInput, ListOperationsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListOperationsCommandInput;
            constructor(input: ListOperationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOperationsCommandInput, ListOperationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListServicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListServicesRequest, ListServicesResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListServicesCommandInput extends ListServicesRequest {
    }
    export interface ListServicesCommandOutput extends ListServicesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of running App Runner services in your Amazon Web Services account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListServicesCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListServicesCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListServicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServicesCommandInput} for command's `input` shape.
        * @see {@link ListServicesCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListServicesCommand extends $Command<ListServicesCommandInput, ListServicesCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListServicesCommandInput;
            constructor(input: ListServicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServicesCommandInput, ListServicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>List tags that are associated with for an App Runner resource. The response contains a list of tag key-value pairs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListTagsForResourceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListTagsForResourceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ListVpcConnectorsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ListVpcConnectorsRequest, ListVpcConnectorsResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ListVpcConnectorsCommandInput extends ListVpcConnectorsRequest {
    }
    export interface ListVpcConnectorsCommandOutput extends ListVpcConnectorsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of App Runner VPC connectors in your Amazon Web Services account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ListVpcConnectorsCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ListVpcConnectorsCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ListVpcConnectorsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListVpcConnectorsCommandInput} for command's `input` shape.
        * @see {@link ListVpcConnectorsCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ListVpcConnectorsCommand extends $Command<ListVpcConnectorsCommandInput, ListVpcConnectorsCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ListVpcConnectorsCommandInput;
            constructor(input: ListVpcConnectorsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListVpcConnectorsCommandInput, ListVpcConnectorsCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/PauseServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { PauseServiceRequest, PauseServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface PauseServiceCommandInput extends PauseServiceRequest {
    }
    export interface PauseServiceCommandOutput extends PauseServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Pause an active App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is
        *       removed).</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
        *       call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, PauseServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, PauseServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new PauseServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PauseServiceCommandInput} for command's `input` shape.
        * @see {@link PauseServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class PauseServiceCommand extends $Command<PauseServiceCommandInput, PauseServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: PauseServiceCommandInput;
            constructor(input: PauseServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PauseServiceCommandInput, PauseServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/ResumeServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { ResumeServiceRequest, ResumeServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface ResumeServiceCommandInput extends ResumeServiceRequest {
    }
    export interface ResumeServiceCommandOutput extends ResumeServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Resume an active App Runner service. App Runner provisions compute capacity for the service.</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
        *       call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, ResumeServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, ResumeServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new ResumeServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResumeServiceCommandInput} for command's `input` shape.
        * @see {@link ResumeServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class ResumeServiceCommand extends $Command<ResumeServiceCommandInput, ResumeServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: ResumeServiceCommandInput;
            constructor(input: ResumeServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResumeServiceCommandInput, ResumeServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/StartDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { StartDeploymentRequest, StartDeploymentResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface StartDeploymentCommandInput extends StartDeploymentRequest {
    }
    export interface StartDeploymentCommandOutput extends StartDeploymentResponse, __MetadataBearer {
    }
    /**
        * <p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner
        *       service.</p>
        *          <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker
        *       image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
        *       call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, StartDeploymentCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, StartDeploymentCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new StartDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartDeploymentCommandInput} for command's `input` shape.
        * @see {@link StartDeploymentCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class StartDeploymentCommand extends $Command<StartDeploymentCommandInput, StartDeploymentCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: StartDeploymentCommandInput;
            constructor(input: StartDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartDeploymentCommandInput, StartDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, TagResourceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, TagResourceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Remove tags from an App Runner resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, UntagResourceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, UntagResourceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/commands/UpdateServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AppRunnerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/AppRunnerClient";
    import { UpdateServiceRequest, UpdateServiceResponse } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0";
    export interface UpdateServiceCommandInput extends UpdateServiceRequest {
    }
    export interface UpdateServiceCommandOutput extends UpdateServiceResponse, __MetadataBearer {
    }
    /**
        * <p>Update an App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto
        *       scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service.
        *       These can be set only when you create the service.</p>
        *          <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p>
        *          <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a>
        *       call to track the operation's progress.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AppRunnerClient, UpdateServiceCommand } from "@aws-sdk/client-apprunner"; // ES Modules import
        * // const { AppRunnerClient, UpdateServiceCommand } = require("@aws-sdk/client-apprunner"); // CommonJS import
        * const client = new AppRunnerClient(config);
        * const command = new UpdateServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceCommandOutput} for command's `response` shape.
        * @see {@link AppRunnerClientResolvedConfig | config} for AppRunnerClient's `config` shape.
        *
        */
    export class UpdateServiceCommand extends $Command<UpdateServiceCommandInput, UpdateServiceCommandOutput, AppRunnerClientResolvedConfig> {
            readonly input: UpdateServiceCommandInput;
            constructor(input: UpdateServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppRunnerClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceCommandInput, UpdateServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { AppRunnerServiceException as __BaseException } from "@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/AppRunnerServiceException";
    export interface AssociateCustomDomainRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to associate a custom domain name with.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A custom domain endpoint to associate. Specify a root domain (for example, <code>example.com</code>), a subdomain (for example,
                *         <code>login.example.com</code> or <code>admin.login.example.com</code>), or a wildcard (for example, <code>*.example.com</code>).</p>
                */
            DomainName: string | undefined;
            /**
                * <p>Set to <code>true</code> to associate the subdomain <code>www.<i>DomainName</i>
                *             </code> with the App Runner service in addition to the base
                *       domain.</p>
                *          <p>Default: <code>true</code>
                *          </p>
                */
            EnableWWWSubdomain?: boolean;
    }
    export namespace AssociateCustomDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateCustomDomainRequest) => any;
    }
    export enum CertificateValidationRecordStatus {
            FAILED = "FAILED",
            PENDING_VALIDATION = "PENDING_VALIDATION",
            SUCCESS = "SUCCESS"
    }
    /**
        * <p>Describes a certificate CNAME record to add to your DNS. For more information, see <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_AssociateCustomDomain.html">AssociateCustomDomain</a>.</p>
        */
    export interface CertificateValidationRecord {
            /**
                * <p>The certificate CNAME record name.</p>
                */
            Name?: string;
            /**
                * <p>The record type, always <code>CNAME</code>.</p>
                */
            Type?: string;
            /**
                * <p>The certificate CNAME record value.</p>
                */
            Value?: string;
            /**
                * <p>The current state of the certificate CNAME record validation. It should change to <code>SUCCESS</code> after App Runner completes validation with your
                *       DNS.</p>
                */
            Status?: CertificateValidationRecordStatus | string;
    }
    export namespace CertificateValidationRecord {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CertificateValidationRecord) => any;
    }
    export enum CustomDomainAssociationStatus {
            ACTIVE = "ACTIVE",
            BINDING_CERTIFICATE = "BINDING_CERTIFICATE",
            CREATE_FAILED = "CREATE_FAILED",
            CREATING = "CREATING",
            DELETE_FAILED = "DELETE_FAILED",
            DELETING = "DELETING",
            PENDING_CERTIFICATE_DNS_VALIDATION = "PENDING_CERTIFICATE_DNS_VALIDATION"
    }
    /**
        * <p>Describes a custom domain that's associated with an App Runner service.</p>
        */
    export interface CustomDomain {
            /**
                * <p>An associated custom domain endpoint. It can be a root domain (for example, <code>example.com</code>), a subdomain (for example,
                *         <code>login.example.com</code> or <code>admin.login.example.com</code>), or a wildcard (for example, <code>*.example.com</code>).</p>
                */
            DomainName: string | undefined;
            /**
                * <p>When <code>true</code>, the subdomain <code>www.<i>DomainName</i>
                *             </code> is associated with the App Runner service in addition to the base
                *       domain.</p>
                */
            EnableWWWSubdomain: boolean | undefined;
            /**
                * <p>A list of certificate CNAME records that's used for this domain name.</p>
                */
            CertificateValidationRecords?: CertificateValidationRecord[];
            /**
                * <p>The current state of the domain name association.</p>
                */
            Status: CustomDomainAssociationStatus | string | undefined;
    }
    export namespace CustomDomain {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CustomDomain) => any;
    }
    export interface AssociateCustomDomainResponse {
            /**
                * <p>The App Runner subdomain of the App Runner service. The custom domain name is mapped to this target name.</p>
                */
            DNSTarget: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service with which a custom domain name is associated.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A description of the domain name that's being associated.</p>
                */
            CustomDomain: CustomDomain | undefined;
    }
    export namespace AssociateCustomDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateCustomDomainResponse) => any;
    }
    /**
        * <p>An unexpected service exception occurred.</p>
        */
    export class InternalServiceErrorException extends __BaseException {
            readonly name: "InternalServiceErrorException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>);
    }
    /**
        * <p>One or more input parameters aren't valid. Refer to the API action's document page, correct the input parameters, and try the action again.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>You can't perform this action when the resource is in its current state.</p>
        */
    export class InvalidStateException extends __BaseException {
            readonly name: "InvalidStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidStateException, __BaseException>);
    }
    /**
        * <p>Describes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.</p>
        */
    export interface Tag {
            /**
                * <p>The key of the tag.</p>
                */
            Key?: string;
            /**
                * <p>The value of the tag.</p>
                */
            Value?: string;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateAutoScalingConfigurationRequest {
            /**
                * <p>A name for the auto scaling configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number <code>1</code> of this
                *       name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p>
                *          <note>
                *             <p>The name <code>DefaultConfiguration</code> is reserved (it's the configuration that App Runner uses if you don't provide a custome one). You can't use it
                *         to create a new auto scaling configuration, and you can't create a revision of it.</p>
                *             <p>When you want to use your own auto scaling configuration for your App Runner service, <i>create a configuration with a different name</i>,
                *         and then provide it when you create or update your service.</p>
                *          </note>
                */
            AutoScalingConfigurationName: string | undefined;
            /**
                * <p>The maximum number of concurrent requests that you want an instance to process. If the number of concurrent requests exceeds this limit, App Runner scales
                *       up your service.</p>
                *          <p>Default: <code>100</code>
                *          </p>
                */
            MaxConcurrency?: number;
            /**
                * <p>The minimum number of instances that App Runner provisions for your service. The service always has at least <code>MinSize</code> provisioned instances.
                *       Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to
                *       be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.</p>
                *          <p>App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.</p>
                *          <p>Default: <code>1</code>
                *          </p>
                */
            MinSize?: number;
            /**
                * <p>The maximum number of instances that your service scales up to. At most <code>MaxSize</code> instances actively serve traffic for your service.</p>
                *          <p>Default: <code>25</code>
                *          </p>
                */
            MaxSize?: number;
            /**
                * <p>A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateAutoScalingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAutoScalingConfigurationRequest) => any;
    }
    export enum AutoScalingConfigurationStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    /**
        * <p>Describes an App Runner automatic scaling configuration resource.</p>
        *          <p>A higher <code>MinSize</code> increases the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher
        *       minimal cost.</p>
        *          <p>A lower <code>MaxSize</code> controls your cost. The tradeoff is lower responsiveness during peak demand.</p>
        *          <p>Multiple revisions of a configuration might have the same <code>AutoScalingConfigurationName</code> and different
        *         <code>AutoScalingConfigurationRevision</code> values.</p>
        */
    export interface AutoScalingConfiguration {
            /**
                * <p>The Amazon Resource Name (ARN) of this auto scaling configuration.</p>
                */
            AutoScalingConfigurationArn?: string;
            /**
                * <p>The customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.</p>
                */
            AutoScalingConfigurationName?: string;
            /**
                * <p>The revision of this auto scaling configuration. It's unique among all the active configurations (<code>"Status": "ACTIVE"</code>) that share the same
                *         <code>AutoScalingConfigurationName</code>.</p>
                */
            AutoScalingConfigurationRevision?: number;
            /**
                * <p>It's set to <code>true</code> for the configuration with the highest <code>Revision</code> among all configurations that share the same
                *         <code>AutoScalingConfigurationName</code>. It's set to <code>false</code> otherwise.</p>
                */
            Latest?: boolean;
            /**
                * <p>The current state of the auto scaling configuration. If the status of a configuration revision is <code>INACTIVE</code>, it was deleted and can't be
                *       used. Inactive configuration revisions are permanently removed some time after they are deleted.</p>
                */
            Status?: AutoScalingConfigurationStatus | string;
            /**
                * <p>The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service
                *       up.</p>
                */
            MaxConcurrency?: number;
            /**
                * <p>The minimum number of instances that App Runner provisions for a service. The service always has at least <code>MinSize</code> provisioned instances. Some
                *       of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be
                *       quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.</p>
                *          <p>App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.</p>
                */
            MinSize?: number;
            /**
                * <p>The maximum number of instances that a service scales up to. At most <code>MaxSize</code> instances actively serve traffic for your service.</p>
                */
            MaxSize?: number;
            /**
                * <p>The time when the auto scaling configuration was created. It's in Unix time stamp format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The time when the auto scaling configuration was deleted. It's in Unix time stamp format.</p>
                */
            DeletedAt?: Date;
    }
    export namespace AutoScalingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AutoScalingConfiguration) => any;
    }
    export interface CreateAutoScalingConfigurationResponse {
            /**
                * <p>A description of the App Runner auto scaling configuration that's created by this request.</p>
                */
            AutoScalingConfiguration: AutoScalingConfiguration | undefined;
    }
    export namespace CreateAutoScalingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAutoScalingConfigurationResponse) => any;
    }
    /**
        * <p>App Runner can't create this resource. You've reached your account quota for this resource type.</p>
        *          <p>For App Runner per-resource quotas, see <a href="https://docs.aws.amazon.com/general/latest/gr/apprunner.html">App Runner endpoints and quotas</a> in the
        *         <i>Amazon Web Services General Reference</i>.</p>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    export enum ProviderType {
            GITHUB = "GITHUB"
    }
    export interface CreateConnectionRequest {
            /**
                * <p>A name for the new connection. It must be unique across all App Runner connections for the Amazon Web Services account in the Amazon Web Services Region.</p>
                */
            ConnectionName: string | undefined;
            /**
                * <p>The source repository provider.</p>
                */
            ProviderType: ProviderType | string | undefined;
            /**
                * <p>A list of metadata items that you can associate with your connection resource. A tag is a key-value pair.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateConnectionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConnectionRequest) => any;
    }
    export enum ConnectionStatus {
            AVAILABLE = "AVAILABLE",
            DELETED = "DELETED",
            ERROR = "ERROR",
            PENDING_HANDSHAKE = "PENDING_HANDSHAKE"
    }
    /**
        * <p>Describes an App Runner connection resource.</p>
        */
    export interface Connection {
            /**
                * <p>The customer-provided connection name.</p>
                */
            ConnectionName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of this connection.</p>
                */
            ConnectionArn?: string;
            /**
                * <p>The source repository provider.</p>
                */
            ProviderType?: ProviderType | string;
            /**
                * <p>The current state of the App Runner connection. When the state is <code>AVAILABLE</code>, you can use the connection to create an App Runner service.</p>
                */
            Status?: ConnectionStatus | string;
            /**
                * <p>The App Runner connection creation time, expressed as a Unix time stamp.</p>
                */
            CreatedAt?: Date;
    }
    export namespace Connection {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Connection) => any;
    }
    export interface CreateConnectionResponse {
            /**
                * <p>A description of the App Runner connection that's created by this request.</p>
                */
            Connection: Connection | undefined;
    }
    export namespace CreateConnectionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConnectionResponse) => any;
    }
    export enum TracingVendor {
            AWSXRAY = "AWSXRAY"
    }
    /**
        * <p>Describes the configuration of the tracing feature within an App Runner observability configuration.</p>
        */
    export interface TraceConfiguration {
            /**
                * <p>The implementation provider chosen for tracing App Runner services.</p>
                */
            Vendor: TracingVendor | string | undefined;
    }
    export namespace TraceConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TraceConfiguration) => any;
    }
    export interface CreateObservabilityConfigurationRequest {
            /**
                * <p>A name for the observability configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number
                *         <code>1</code> of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p>
                *          <note>
                *             <p>The name <code>DefaultConfiguration</code> is reserved. You can't use it to create a new observability configuration, and you can't create a
                *         revision of it.</p>
                *             <p>When you want to use your own observability configuration for your App Runner service, <i>create a configuration with a different name</i>,
                *         and then provide it when you create or update your service.</p>
                *          </note>
                */
            ObservabilityConfigurationName: string | undefined;
            /**
                * <p>The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.</p>
                */
            TraceConfiguration?: TraceConfiguration;
            /**
                * <p>A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateObservabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateObservabilityConfigurationRequest) => any;
    }
    export enum ObservabilityConfigurationStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    /**
        * <p>Describes an App Runner observability configuration resource. Multiple revisions of a configuration have the same
        *         <code>ObservabilityConfigurationName</code> and different <code>ObservabilityConfigurationRevision</code> values.</p>
        *          <p>The resource is designed to configure multiple features (currently one feature, tracing). This type contains optional members that describe the
        *       configuration of these features (currently one member, <code>TraceConfiguration</code>). If a feature member isn't specified, the feature isn't
        *       enabled.</p>
        */
    export interface ObservabilityConfiguration {
            /**
                * <p>The Amazon Resource Name (ARN) of this observability configuration.</p>
                */
            ObservabilityConfigurationArn?: string;
            /**
                * <p>The customer-provided observability configuration name. It can be used in multiple revisions of a configuration.</p>
                */
            ObservabilityConfigurationName?: string;
            /**
                * <p>The configuration of the tracing feature within this observability configuration. If not specified, tracing isn't enabled.</p>
                */
            TraceConfiguration?: TraceConfiguration;
            /**
                * <p>The revision of this observability configuration. It's unique among all the active configurations (<code>"Status": "ACTIVE"</code>) that share the
                *       same <code>ObservabilityConfigurationName</code>.</p>
                */
            ObservabilityConfigurationRevision?: number;
            /**
                * <p>It's set to <code>true</code> for the configuration with the highest <code>Revision</code> among all configurations that share the same
                *         <code>ObservabilityConfigurationName</code>. It's set to <code>false</code> otherwise.</p>
                */
            Latest?: boolean;
            /**
                * <p>The current state of the observability configuration. If the status of a configuration revision is <code>INACTIVE</code>, it was deleted and can't be
                *       used. Inactive configuration revisions are permanently removed some time after they are deleted.</p>
                */
            Status?: ObservabilityConfigurationStatus | string;
            /**
                * <p>The time when the observability configuration was created. It's in Unix time stamp format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The time when the observability configuration was deleted. It's in Unix time stamp format.</p>
                */
            DeletedAt?: Date;
    }
    export namespace ObservabilityConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObservabilityConfiguration) => any;
    }
    export interface CreateObservabilityConfigurationResponse {
            /**
                * <p>A description of the App Runner observability configuration that's created by this request.</p>
                */
            ObservabilityConfiguration: ObservabilityConfiguration | undefined;
    }
    export namespace CreateObservabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateObservabilityConfigurationResponse) => any;
    }
    /**
        * <p>Describes a custom encryption key that App Runner uses to encrypt copies of the source repository and service logs.</p>
        */
    export interface EncryptionConfiguration {
            /**
                * <p>The ARN of the KMS key that's used for encryption.</p>
                */
            KmsKey: string | undefined;
    }
    export namespace EncryptionConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EncryptionConfiguration) => any;
    }
    export enum HealthCheckProtocol {
            HTTP = "HTTP",
            TCP = "TCP"
    }
    /**
        * <p>Describes the settings for the health check that App Runner performs to monitor the health of a service.</p>
        */
    export interface HealthCheckConfiguration {
            /**
                * <p>The IP protocol that App Runner uses to perform health checks for your service.</p>
                *          <p>If you set <code>Protocol</code> to <code>HTTP</code>, App Runner sends health check requests to the HTTP path specified by <code>Path</code>.</p>
                *          <p>Default: <code>TCP</code>
                *          </p>
                */
            Protocol?: HealthCheckProtocol | string;
            /**
                * <p>The URL that health check requests are sent to.</p>
                *          <p>
                *             <code>Path</code> is only applicable when you set <code>Protocol</code> to <code>HTTP</code>.</p>
                *          <p>Default: <code>"/"</code>
                *          </p>
                */
            Path?: string;
            /**
                * <p>The time interval, in seconds, between health checks.</p>
                *          <p>Default: <code>5</code>
                *          </p>
                */
            Interval?: number;
            /**
                * <p>The time, in seconds, to wait for a health check response before deciding it failed.</p>
                *          <p>Default: <code>2</code>
                *          </p>
                */
            Timeout?: number;
            /**
                * <p>The number of consecutive checks that must succeed before App Runner decides that the service is healthy.</p>
                *          <p>Default: <code>1</code>
                *          </p>
                */
            HealthyThreshold?: number;
            /**
                * <p>The number of consecutive checks that must fail before App Runner decides that the service is unhealthy.</p>
                *          <p>Default: <code>5</code>
                *          </p>
                */
            UnhealthyThreshold?: number;
    }
    export namespace HealthCheckConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HealthCheckConfiguration) => any;
    }
    /**
        * <p>Describes the runtime configuration of an App Runner service instance (scaling unit).</p>
        */
    export interface InstanceConfiguration {
            /**
                * <p>The number of CPU units reserved for each instance of your App Runner service.</p>
                *          <p>Default: <code>1 vCPU</code>
                *          </p>
                */
            Cpu?: string;
            /**
                * <p>The amount of memory, in MB or GB, reserved for each instance of your App Runner service.</p>
                *          <p>Default: <code>2 GB</code>
                *          </p>
                */
            Memory?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls
                *       any Amazon Web Services APIs.</p>
                */
            InstanceRoleArn?: string;
    }
    export namespace InstanceConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InstanceConfiguration) => any;
    }
    export enum EgressType {
            DEFAULT = "DEFAULT",
            VPC = "VPC"
    }
    /**
        * <p>Describes configuration settings related to outbound network traffic of an App Runner service.</p>
        */
    export interface EgressConfiguration {
            /**
                * <p>The type of egress configuration.</p>
                *          <p>Set to <code>DEFAULT</code> for access to resources hosted on public networks.</p>
                *          <p>Set to <code>VPC</code> to associate your service to a custom VPC specified by <code>VpcConnectorArn</code>.</p>
                */
            EgressType?: EgressType | string;
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when <code>EgressType =
                *         VPC</code>.</p>
                */
            VpcConnectorArn?: string;
    }
    export namespace EgressConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EgressConfiguration) => any;
    }
    /**
        * <p>Describes configuration settings related to network traffic of an App Runner service. Consists of embedded objects for each configurable network
        *       feature.</p>
        */
    export interface NetworkConfiguration {
            /**
                * <p>Network configuration settings for outbound message traffic.</p>
                */
            EgressConfiguration?: EgressConfiguration;
    }
    export namespace NetworkConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NetworkConfiguration) => any;
    }
    /**
        * <p>Describes the observability configuration of an App Runner service. These are additional observability features, like tracing, that you choose to
        *       enable. They're configured in a separate resource that you associate with your service.</p>
        */
    export interface ServiceObservabilityConfiguration {
            /**
                * <p>When <code>true</code>, an observability configuration resource is associated with the service, and an <code>ObservabilityConfigurationArn</code> is
                *       specified.</p>
                */
            ObservabilityEnabled: boolean | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the observability configuration that is associated with the service. Specified only when
                *         <code>ObservabilityEnabled</code> is <code>true</code>.</p>
                *          <p>Specify an ARN with a name and a revision number to associate that revision. For example:
                *           <code>arn:aws:apprunner:us-east-1:123456789012:observabilityconfiguration/xray-tracing/3</code>
                *          </p>
                *          <p>Specify just the name to associate the latest revision. For example:
                *         <code>arn:aws:apprunner:us-east-1:123456789012:observabilityconfiguration/xray-tracing</code>
                *          </p>
                */
            ObservabilityConfigurationArn?: string;
    }
    export namespace ServiceObservabilityConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceObservabilityConfiguration) => any;
    }
    /**
        * <p>Describes resources needed to authenticate access to some source repositories. The specific resource depends on the repository provider.</p>
        */
    export interface AuthenticationConfiguration {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It's required for GitHub code
                *       repositories.</p>
                */
            ConnectionArn?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It's required for ECR image repositories
                *       (but not for ECR Public repositories).</p>
                */
            AccessRoleArn?: string;
    }
    export namespace AuthenticationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthenticationConfiguration) => any;
    }
    export enum Runtime {
            CORRETTO_11 = "CORRETTO_11",
            CORRETTO_8 = "CORRETTO_8",
            NODEJS_12 = "NODEJS_12",
            NODEJS_14 = "NODEJS_14",
            PYTHON_3 = "PYTHON_3"
    }
    /**
        * <p>Describes the basic configuration needed for building and running an App Runner service. This type doesn't support the full set of possible
        *       configuration options. Fur full configuration capabilities, use a <code>apprunner.yaml</code> file in the source code repository.</p>
        */
    export interface CodeConfigurationValues {
            /**
                * <p>A runtime environment type for building and running an App Runner service.
                *        It represents a
                *       programming language runtime.</p>
                */
            Runtime: Runtime | string | undefined;
            /**
                * <p>The command App Runner runs to build your application.</p>
                */
            BuildCommand?: string;
            /**
                * <p>The command App Runner runs to start your application.</p>
                */
            StartCommand?: string;
            /**
                * <p>The port that your application listens to in the container.</p>
                *          <p>Default: <code>8080</code>
                *          </p>
                */
            Port?: string;
            /**
                * <p>The environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of
                *         <code>AWSAPPRUNNER</code> are reserved for system use and aren't valid.</p>
                */
            RuntimeEnvironmentVariables?: Record<string, string>;
    }
    export namespace CodeConfigurationValues {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeConfigurationValues) => any;
    }
    export enum ConfigurationSource {
            API = "API",
            REPOSITORY = "REPOSITORY"
    }
    /**
        * <p>Describes the configuration that App Runner uses to build and run an App Runner service from a source code repository.</p>
        */
    export interface CodeConfiguration {
            /**
                * <p>The source of the App Runner configuration. Values are interpreted as follows:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>REPOSITORY</code> – App Runner reads configuration values from the <code>apprunner.yaml</code> file in the source code repository and
                *           ignores <code>CodeConfigurationValues</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>API</code> – App Runner uses configuration values provided in <code>CodeConfigurationValues</code> and ignores the
                *             <code>apprunner.yaml</code> file in the source code repository.</p>
                *             </li>
                *          </ul>
                */
            ConfigurationSource: ConfigurationSource | string | undefined;
            /**
                * <p>The basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a
                *         <code>apprunner.yaml</code> file in the source code repository (or ignoring the file if it exists).</p>
                */
            CodeConfigurationValues?: CodeConfigurationValues;
    }
    export namespace CodeConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeConfiguration) => any;
    }
    export enum SourceCodeVersionType {
            BRANCH = "BRANCH"
    }
    /**
        * <p>Identifies a version of code that App Runner refers to within a source code repository.</p>
        */
    export interface SourceCodeVersion {
            /**
                * <p>The type of version identifier.</p>
                *          <p>For a git-based repository, branches represent versions.</p>
                */
            Type: SourceCodeVersionType | string | undefined;
            /**
                * <p>A source code version.</p>
                *          <p>For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.</p>
                */
            Value: string | undefined;
    }
    export namespace SourceCodeVersion {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SourceCodeVersion) => any;
    }
    /**
        * <p>Describes a source code repository.</p>
        */
    export interface CodeRepository {
            /**
                * <p>The location of the repository that contains the source code.</p>
                */
            RepositoryUrl: string | undefined;
            /**
                * <p>The version that should be used within the source code repository.</p>
                */
            SourceCodeVersion: SourceCodeVersion | undefined;
            /**
                * <p>Configuration for building and running the service from a source code repository.</p>
                *          <note>
                *             <p>
                *                <code>CodeConfiguration</code> is required only for <code>CreateService</code> request.</p>
                *          </note>
                */
            CodeConfiguration?: CodeConfiguration;
    }
    export namespace CodeRepository {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeRepository) => any;
    }
    /**
        * <p>Describes the configuration that App Runner uses to run an App Runner service using an image pulled from a source image repository.</p>
        */
    export interface ImageConfiguration {
            /**
                * <p>Environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of <code>AWSAPPRUNNER</code>
                *       are reserved for system use and aren't valid.</p>
                */
            RuntimeEnvironmentVariables?: Record<string, string>;
            /**
                * <p>An optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start
                *       command.</p>
                */
            StartCommand?: string;
            /**
                * <p>The port that your application listens to in the container.</p>
                *          <p>Default: <code>8080</code>
                *          </p>
                */
            Port?: string;
    }
    export namespace ImageConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImageConfiguration) => any;
    }
    export enum ImageRepositoryType {
            ECR = "ECR",
            ECR_PUBLIC = "ECR_PUBLIC"
    }
    /**
        * <p>Describes a source image repository.</p>
        */
    export interface ImageRepository {
            /**
                * <p>The identifier of an image.</p>
                *          <p>For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling an image</a> in the <i>Amazon ECR User Guide</i>.</p>
                */
            ImageIdentifier: string | undefined;
            /**
                * <p>Configuration for running the identified image.</p>
                */
            ImageConfiguration?: ImageConfiguration;
            /**
                * <p>The type of the image repository. This reflects the repository provider and whether the repository is private or public.</p>
                */
            ImageRepositoryType: ImageRepositoryType | string | undefined;
    }
    export namespace ImageRepository {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImageRepository) => any;
    }
    /**
        * <p>Describes the source deployed to an App Runner service. It can be a code or an image repository.</p>
        */
    export interface SourceConfiguration {
            /**
                * <p>The description of a source code repository.</p>
                *          <p>You must provide either this member or <code>ImageRepository</code> (but not both).</p>
                */
            CodeRepository?: CodeRepository;
            /**
                * <p>The description of a source image
                *       repository.</p>
                *          <p>You must provide either this member or <code>CodeRepository</code> (but not both).</p>
                */
            ImageRepository?: ImageRepository;
            /**
                * <p>If <code>true</code>, continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source
                *       code commit or new image version) starts a deployment.</p>
                *          <p>Default: App Runner sets to <code>false</code> for a source image that uses an ECR Public repository or an ECR repository that's in an Amazon Web Services account other than the one that the service is in. App Runner sets to <code>true</code> in all other cases (which currently include a source code
                *       repository or a source image using a same-account ECR repository).</p>
                */
            AutoDeploymentsEnabled?: boolean;
            /**
                * <p>Describes the resources that are needed to authenticate access to some source repositories.</p>
                */
            AuthenticationConfiguration?: AuthenticationConfiguration;
    }
    export namespace SourceConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SourceConfiguration) => any;
    }
    export interface CreateServiceRequest {
            /**
                * <p>A name for the App Runner service. It must be unique across all the running App Runner services in your Amazon Web Services account in the Amazon Web Services Region.</p>
                */
            ServiceName: string | undefined;
            /**
                * <p>The source to deploy to the App Runner service. It can be a code or an image repository.</p>
                */
            SourceConfiguration: SourceConfiguration | undefined;
            /**
                * <p>The runtime configuration of instances (scaling units) of your service.</p>
                */
            InstanceConfiguration?: InstanceConfiguration;
            /**
                * <p>An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.</p>
                */
            Tags?: Tag[];
            /**
                * <p>An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default,
                *       App Runner uses an Amazon Web Services managed key.</p>
                */
            EncryptionConfiguration?: EncryptionConfiguration;
            /**
                * <p>The settings for the health check that App Runner performs to monitor the health of the App Runner service.</p>
                */
            HealthCheckConfiguration?: HealthCheckConfiguration;
            /**
                * <p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner
                *       associates the latest revision of a default auto scaling configuration.</p>
                *          <p>Specify an ARN with a name and a revision number to associate that revision. For example:
                *           <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability/3</code>
                *          </p>
                *          <p>Specify just the name to associate the latest revision. For example:
                *         <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability</code>
                *          </p>
                */
            AutoScalingConfigurationArn?: string;
            /**
                * <p>Configuration settings related to network traffic of the web application that the App Runner service runs.</p>
                */
            NetworkConfiguration?: NetworkConfiguration;
            /**
                * <p>The observability configuration of your service.</p>
                */
            ObservabilityConfiguration?: ServiceObservabilityConfiguration;
    }
    export namespace CreateServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceRequest) => any;
    }
    /**
        * <p>Provides summary information about an App Runner automatic scaling configuration resource.</p>
        *          <p>This type contains limited information about an auto scaling configuration. It includes only identification information, without configuration
        *       details. It's returned by the <a>ListAutoScalingConfigurations</a> action. Complete configuration information is returned by the <a>CreateAutoScalingConfiguration</a>, <a>DescribeAutoScalingConfiguration</a>, and <a>DeleteAutoScalingConfiguration</a>
        *       actions using the <a>AutoScalingConfiguration</a> type.</p>
        */
    export interface AutoScalingConfigurationSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of this auto scaling configuration.</p>
                */
            AutoScalingConfigurationArn?: string;
            /**
                * <p>The customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.</p>
                */
            AutoScalingConfigurationName?: string;
            /**
                * <p>The revision of this auto scaling configuration. It's unique among all the active configurations (<code>"Status": "ACTIVE"</code>) with the same
                *         <code>AutoScalingConfigurationName</code>.</p>
                */
            AutoScalingConfigurationRevision?: number;
    }
    export namespace AutoScalingConfigurationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AutoScalingConfigurationSummary) => any;
    }
    export enum ServiceStatus {
            CREATE_FAILED = "CREATE_FAILED",
            DELETED = "DELETED",
            DELETE_FAILED = "DELETE_FAILED",
            OPERATION_IN_PROGRESS = "OPERATION_IN_PROGRESS",
            PAUSED = "PAUSED",
            RUNNING = "RUNNING"
    }
    /**
        * <p>Describes an App Runner service. It can describe a service in any state, including deleted services.</p>
        *          <p>This type contains the full information about a service, including configuration details. It's returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>, <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>, and <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a> actions. A subset of this
        *       information is returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a> action using the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html">ServiceSummary</a> type.</p>
        */
    export interface Service {
            /**
                * <p>The customer-provided service name.</p>
                */
            ServiceName: string | undefined;
            /**
                * <p>An ID that App Runner generated for this service. It's unique within the Amazon Web Services Region.</p>
                */
            ServiceId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of this service.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</p>
                */
            ServiceUrl: string | undefined;
            /**
                * <p>The time when the App Runner service was created. It's in the Unix time stamp format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>The time when the App Runner service was last updated at. It's in the Unix time stamp format.</p>
                */
            UpdatedAt: Date | undefined;
            /**
                * <p>The time when the App Runner service was deleted. It's in the Unix time stamp format.</p>
                */
            DeletedAt?: Date;
            /**
                * <p>The current state of the App Runner service. These particular values mean the following.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CREATE_FAILED</code> – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any
                *           parameters that need to be fixed, and retry the call to create the service.</p>
                *                <p>The failed service isn't usable, and still counts towards your service quota. When you're done analyzing the failure, delete the service.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DELETE_FAILED</code> – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure
                *           that all related resources are removed.</p>
                *             </li>
                *          </ul>
                */
            Status: ServiceStatus | string | undefined;
            /**
                * <p>The source deployed to the App Runner service. It can be a code or an image repository.</p>
                */
            SourceConfiguration: SourceConfiguration | undefined;
            /**
                * <p>The runtime configuration of instances (scaling units) of this service.</p>
                */
            InstanceConfiguration: InstanceConfiguration | undefined;
            /**
                * <p>The encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be
                *       either a customer-provided encryption key or an Amazon Web Services managed key.</p>
                */
            EncryptionConfiguration?: EncryptionConfiguration;
            /**
                * <p>The settings for the health check that App Runner performs to monitor the health of this service.</p>
                */
            HealthCheckConfiguration?: HealthCheckConfiguration;
            /**
                * <p>Summary information for the App Runner automatic scaling configuration resource that's associated with this service.</p>
                */
            AutoScalingConfigurationSummary: AutoScalingConfigurationSummary | undefined;
            /**
                * <p>Configuration settings related to network traffic of the web application that this service runs.</p>
                */
            NetworkConfiguration: NetworkConfiguration | undefined;
            /**
                * <p>The observability configuration of this service.</p>
                */
            ObservabilityConfiguration?: ServiceObservabilityConfiguration;
    }
    export namespace Service {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Service) => any;
    }
    export interface CreateServiceResponse {
            /**
                * <p>A description of the App Runner service that's created by this request.</p>
                */
            Service: Service | undefined;
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a> call to track the operation's progress.</p>
                */
            OperationId: string | undefined;
    }
    export namespace CreateServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceResponse) => any;
    }
    export interface CreateVpcConnectorRequest {
            /**
                * <p>A name for the VPC connector.</p>
                */
            VpcConnectorName: string | undefined;
            /**
                * <p>A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single
                *         Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.</p>
                *          <note>
                *             <p>
                *         App Runner currently only provides support for IPv4.
                *       </p>
                *          </note>
                */
            Subnets: string[] | undefined;
            /**
                * <p>A list of IDs of security groups that App Runner should use for access to Amazon Web Services resources under the specified subnets. If not specified, App Runner uses the
                *       default security group of the Amazon VPC. The default security group allows all outbound traffic.</p>
                */
            SecurityGroups?: string[];
            /**
                * <p>A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateVpcConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVpcConnectorRequest) => any;
    }
    export enum VpcConnectorStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    /**
        * <p>Describes an App Runner VPC connector resource. A VPC connector describes the Amazon Virtual Private Cloud (Amazon VPC) that an App Runner service is
        *       associated with, and the subnets and security group that are used.</p>
        *          <p>Multiple revisions of a connector might have the same <code>Name</code> and different <code>Revision</code> values.</p>
        *          <note>
        *             <p>At this time, App Runner supports only one revision per name.</p>
        *          </note>
        */
    export interface VpcConnector {
            /**
                * <p>The customer-provided VPC connector name.</p>
                */
            VpcConnectorName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of this VPC connector.</p>
                */
            VpcConnectorArn?: string;
            /**
                * <p>The revision of this VPC connector. It's unique among all the active connectors (<code>"Status": "ACTIVE"</code>) that share the same
                *       <code>Name</code>.</p>
                *          <note>
                *             <p>At this time, App Runner supports only one revision per name.</p>
                *          </note>
                */
            VpcConnectorRevision?: number;
            /**
                * <p>A list of IDs of subnets that App Runner uses for your service. All IDs are of subnets of a single Amazon VPC.</p>
                */
            Subnets?: string[];
            /**
                * <p>A list of IDs of security groups that App Runner uses for access to Amazon Web Services resources under the specified subnets. If not specified, App Runner uses the default
                *       security group of the Amazon VPC. The default security group allows all outbound traffic.</p>
                */
            SecurityGroups?: string[];
            /**
                * <p>The current state of the VPC connector. If the status of a connector revision is <code>INACTIVE</code>, it was deleted and can't be
                *       used. Inactive connector revisions are permanently removed some time after they are deleted.</p>
                */
            Status?: VpcConnectorStatus | string;
            /**
                * <p>The time when the VPC connector was created. It's in Unix time stamp format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The time when the VPC connector was deleted. It's in Unix time stamp format.</p>
                */
            DeletedAt?: Date;
    }
    export namespace VpcConnector {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VpcConnector) => any;
    }
    export interface CreateVpcConnectorResponse {
            /**
                * <p>A description of the App Runner VPC connector that's created by this request.</p>
                */
            VpcConnector: VpcConnector | undefined;
    }
    export namespace CreateVpcConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVpcConnectorResponse) => any;
    }
    export interface DeleteAutoScalingConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to delete.</p>
                *          <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i>
                *             </code> or
                *           <code>.../<i>name</i>/<i>revision</i>
                *             </code>. If a revision isn't specified, the latest active revision is deleted.</p>
                */
            AutoScalingConfigurationArn: string | undefined;
    }
    export namespace DeleteAutoScalingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAutoScalingConfigurationRequest) => any;
    }
    export interface DeleteAutoScalingConfigurationResponse {
            /**
                * <p>A description of the App Runner auto scaling configuration that this request just deleted.</p>
                */
            AutoScalingConfiguration: AutoScalingConfiguration | undefined;
    }
    export namespace DeleteAutoScalingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAutoScalingConfigurationResponse) => any;
    }
    /**
        * <p>A resource doesn't exist for the specified Amazon Resource Name (ARN) in your Amazon Web Services account.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface DeleteConnectionRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner connection that you want to delete.</p>
                */
            ConnectionArn: string | undefined;
    }
    export namespace DeleteConnectionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConnectionRequest) => any;
    }
    export interface DeleteConnectionResponse {
            /**
                * <p>A description of the App Runner connection that this request just deleted.</p>
                */
            Connection?: Connection;
    }
    export namespace DeleteConnectionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConnectionResponse) => any;
    }
    export interface DeleteObservabilityConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner observability configuration that you want to delete.</p>
                *          <p>The ARN can be a full observability configuration ARN, or a partial ARN ending with either <code>.../<i>name</i>
                *             </code> or
                *           <code>.../<i>name</i>/<i>revision</i>
                *             </code>. If a revision isn't specified, the latest active revision is deleted.</p>
                */
            ObservabilityConfigurationArn: string | undefined;
    }
    export namespace DeleteObservabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteObservabilityConfigurationRequest) => any;
    }
    export interface DeleteObservabilityConfigurationResponse {
            /**
                * <p>A description of the App Runner observability configuration that this request just deleted.</p>
                */
            ObservabilityConfiguration: ObservabilityConfiguration | undefined;
    }
    export namespace DeleteObservabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteObservabilityConfigurationResponse) => any;
    }
    export interface DeleteServiceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to delete.</p>
                */
            ServiceArn: string | undefined;
    }
    export namespace DeleteServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceRequest) => any;
    }
    export interface DeleteServiceResponse {
            /**
                * <p>A description of the App Runner service that this request just deleted.</p>
                */
            Service: Service | undefined;
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a>ListOperations</a> call to track
                *       the operation's progress.</p>
                */
            OperationId: string | undefined;
    }
    export namespace DeleteServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceResponse) => any;
    }
    export interface DeleteVpcConnectorRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to delete.</p>
                *          <p>The ARN must be a full VPC connector ARN.</p>
                */
            VpcConnectorArn: string | undefined;
    }
    export namespace DeleteVpcConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVpcConnectorRequest) => any;
    }
    export interface DeleteVpcConnectorResponse {
            /**
                * <p>A description of the App Runner VPC connector that this request just deleted.</p>
                */
            VpcConnector: VpcConnector | undefined;
    }
    export namespace DeleteVpcConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVpcConnectorResponse) => any;
    }
    export interface DescribeAutoScalingConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want a description for.</p>
                *          <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i>
                *             </code> or
                *           <code>.../<i>name</i>/<i>revision</i>
                *             </code>. If a revision isn't specified, the latest active revision is
                *       described.</p>
                */
            AutoScalingConfigurationArn: string | undefined;
    }
    export namespace DescribeAutoScalingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAutoScalingConfigurationRequest) => any;
    }
    export interface DescribeAutoScalingConfigurationResponse {
            /**
                * <p>A full description of the App Runner auto scaling configuration that you specified in this request.</p>
                */
            AutoScalingConfiguration: AutoScalingConfiguration | undefined;
    }
    export namespace DescribeAutoScalingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAutoScalingConfigurationResponse) => any;
    }
    export interface DescribeCustomDomainsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want associated custom domain names to be described for.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones that are specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results that each response (result page) can include. It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
    }
    export namespace DescribeCustomDomainsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCustomDomainsRequest) => any;
    }
    export interface DescribeCustomDomainsResponse {
            /**
                * <p>The App Runner subdomain of the App Runner service. The associated custom domain names are mapped to this target name.</p>
                */
            DNSTarget: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service whose associated custom domain names you want to describe.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A list of descriptions of custom domain names that are associated with the service. In a paginated request, the request returns up to
                *         <code>MaxResults</code> records per call.</p>
                */
            CustomDomains: CustomDomain[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace DescribeCustomDomainsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCustomDomainsResponse) => any;
    }
    export interface DescribeObservabilityConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner observability configuration that you want a description for.</p>
                *          <p>The ARN can be a full observability configuration ARN, or a partial ARN ending with either <code>.../<i>name</i>
                *             </code> or
                *           <code>.../<i>name</i>/<i>revision</i>
                *             </code>. If a revision isn't specified, the latest active revision is
                *       described.</p>
                */
            ObservabilityConfigurationArn: string | undefined;
    }
    export namespace DescribeObservabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeObservabilityConfigurationRequest) => any;
    }
    export interface DescribeObservabilityConfigurationResponse {
            /**
                * <p>A full description of the App Runner observability configuration that you specified in this request.</p>
                */
            ObservabilityConfiguration: ObservabilityConfiguration | undefined;
    }
    export namespace DescribeObservabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeObservabilityConfigurationResponse) => any;
    }
    export interface DescribeServiceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want a description for.</p>
                */
            ServiceArn: string | undefined;
    }
    export namespace DescribeServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceRequest) => any;
    }
    export interface DescribeServiceResponse {
            /**
                * <p>A full description of the App Runner service that you specified in this request.</p>
                */
            Service: Service | undefined;
    }
    export namespace DescribeServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceResponse) => any;
    }
    export interface DescribeVpcConnectorRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want a description for.</p>
                *          <p>The ARN must be a full VPC connector ARN.</p>
                */
            VpcConnectorArn: string | undefined;
    }
    export namespace DescribeVpcConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVpcConnectorRequest) => any;
    }
    export interface DescribeVpcConnectorResponse {
            /**
                * <p>A description of the App Runner VPC connector that you specified in this request.</p>
                */
            VpcConnector: VpcConnector | undefined;
    }
    export namespace DescribeVpcConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVpcConnectorResponse) => any;
    }
    export interface DisassociateCustomDomainRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to disassociate a custom domain name from.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>The domain name that you want to disassociate from the App Runner service.</p>
                */
            DomainName: string | undefined;
    }
    export namespace DisassociateCustomDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateCustomDomainRequest) => any;
    }
    export interface DisassociateCustomDomainResponse {
            /**
                * <p>The App Runner subdomain of the App Runner service. The disassociated custom domain name was mapped to this target name.</p>
                */
            DNSTarget: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that a custom domain name is disassociated from.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A description of the domain name that's being disassociated.</p>
                */
            CustomDomain: CustomDomain | undefined;
    }
    export namespace DisassociateCustomDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateCustomDomainResponse) => any;
    }
    export interface ListAutoScalingConfigurationsRequest {
            /**
                * <p>The name of the App Runner auto scaling configuration that you want to list. If specified, App Runner lists revisions that share this name. If not specified, App Runner
                *       returns revisions of all active configurations.</p>
                */
            AutoScalingConfigurationName?: string;
            /**
                * <p>Set to <code>true</code> to list only the latest revision for each requested configuration name.</p>
                *          <p>Set to <code>false</code> to list all revisions for each requested configuration name.</p>
                *          <p>Default: <code>true</code>
                *          </p>
                */
            LatestOnly?: boolean;
            /**
                * <p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
            /**
                * <p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones that are specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
    }
    export namespace ListAutoScalingConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAutoScalingConfigurationsRequest) => any;
    }
    export interface ListAutoScalingConfigurationsResponse {
            /**
                * <p>A list of summary information records for auto scaling configurations. In a paginated request, the request returns up to <code>MaxResults</code>
                *       records for each call.</p>
                */
            AutoScalingConfigurationSummaryList: AutoScalingConfigurationSummary[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListAutoScalingConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAutoScalingConfigurationsResponse) => any;
    }
    export interface ListConnectionsRequest {
            /**
                * <p>If specified, only this connection is returned. If not specified, the result isn't filtered by name.</p>
                */
            ConnectionName?: string;
            /**
                * <p>The maximum number of results to include in each response (result page). Used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
            /**
                * <p>A token from a previous result page. Used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
    }
    export namespace ListConnectionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConnectionsRequest) => any;
    }
    /**
        * <p>Provides summary information about an App Runner connection resource.</p>
        */
    export interface ConnectionSummary {
            /**
                * <p>The customer-provided connection name.</p>
                */
            ConnectionName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of this connection.</p>
                */
            ConnectionArn?: string;
            /**
                * <p>The source repository provider.</p>
                */
            ProviderType?: ProviderType | string;
            /**
                * <p>The current state of the App Runner connection. When the state is <code>AVAILABLE</code>, you can use the connection to create an App Runner service.</p>
                */
            Status?: ConnectionStatus | string;
            /**
                * <p>The App Runner connection creation time, expressed as a Unix time stamp.</p>
                */
            CreatedAt?: Date;
    }
    export namespace ConnectionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConnectionSummary) => any;
    }
    export interface ListConnectionsResponse {
            /**
                * <p>A list of summary information records for connections. In a paginated request, the request returns up to <code>MaxResults</code> records for each
                *       call.</p>
                */
            ConnectionSummaryList: ConnectionSummary[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. Returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListConnectionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConnectionsResponse) => any;
    }
    export interface ListObservabilityConfigurationsRequest {
            /**
                * <p>The name of the App Runner observability configuration that you want to list. If specified, App Runner lists revisions that share this name. If not specified,
                *       App Runner returns revisions of all active configurations.</p>
                */
            ObservabilityConfigurationName?: string;
            /**
                * <p>Set to <code>true</code> to list only the latest revision for each requested configuration name.</p>
                *          <p>Set to <code>false</code> to list all revisions for each requested configuration name.</p>
                *          <p>Default: <code>true</code>
                *          </p>
                */
            LatestOnly?: boolean;
            /**
                * <p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
            /**
                * <p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones that are specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
    }
    export namespace ListObservabilityConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListObservabilityConfigurationsRequest) => any;
    }
    /**
        * <p>Provides summary information about an App Runner observability configuration resource.</p>
        *          <p>This type contains limited information about an observability configuration. It includes only identification information, without configuration
        *       details. It's returned by the <a>ListObservabilityConfigurations</a> action. Complete configuration information is returned by the <a>CreateObservabilityConfiguration</a>, <a>DescribeObservabilityConfiguration</a>, and <a>DeleteObservabilityConfiguration</a>
        *       actions using the <a>ObservabilityConfiguration</a> type.</p>
        */
    export interface ObservabilityConfigurationSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of this observability configuration.</p>
                */
            ObservabilityConfigurationArn?: string;
            /**
                * <p>The customer-provided observability configuration name. It can be used in multiple revisions of a configuration.</p>
                */
            ObservabilityConfigurationName?: string;
            /**
                * <p>The revision of this observability configuration. It's unique among all the active configurations (<code>"Status": "ACTIVE"</code>) that share the
                *       same <code>ObservabilityConfigurationName</code>.</p>
                */
            ObservabilityConfigurationRevision?: number;
    }
    export namespace ObservabilityConfigurationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObservabilityConfigurationSummary) => any;
    }
    export interface ListObservabilityConfigurationsResponse {
            /**
                * <p>A list of summary information records for observability configurations. In a paginated request, the request returns up to <code>MaxResults</code>
                *       records for each call.</p>
                */
            ObservabilityConfigurationSummaryList: ObservabilityConfigurationSummary[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListObservabilityConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListObservabilityConfigurationsResponse) => any;
    }
    export interface ListOperationsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want a list of operations for.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
    }
    export namespace ListOperationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOperationsRequest) => any;
    }
    export enum OperationStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            PENDING = "PENDING",
            ROLLBACK_FAILED = "ROLLBACK_FAILED",
            ROLLBACK_IN_PROGRESS = "ROLLBACK_IN_PROGRESS",
            ROLLBACK_SUCCEEDED = "ROLLBACK_SUCCEEDED",
            SUCCEEDED = "SUCCEEDED"
    }
    export enum OperationType {
            CREATE_SERVICE = "CREATE_SERVICE",
            DELETE_SERVICE = "DELETE_SERVICE",
            PAUSE_SERVICE = "PAUSE_SERVICE",
            RESUME_SERVICE = "RESUME_SERVICE",
            START_DEPLOYMENT = "START_DEPLOYMENT"
    }
    /**
        * <p>Provides summary information for an operation that occurred on an App Runner service.</p>
        */
    export interface OperationSummary {
            /**
                * <p>A unique ID of this operation. It's unique in the scope of the App Runner service.</p>
                */
            Id?: string;
            /**
                * <p>The type of operation. It indicates a specific action that occured.</p>
                */
            Type?: OperationType | string;
            /**
                * <p>The current state of the operation.</p>
                */
            Status?: OperationStatus | string;
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that the operation acted on (for example, an App Runner service).</p>
                */
            TargetArn?: string;
            /**
                * <p>The time when the operation started. It's in the Unix time stamp format.</p>
                */
            StartedAt?: Date;
            /**
                * <p>The time when the operation ended. It's in the Unix time stamp format.</p>
                */
            EndedAt?: Date;
            /**
                * <p>The time when the operation was last updated. It's in the Unix time stamp format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace OperationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OperationSummary) => any;
    }
    export interface ListOperationsResponse {
            /**
                * <p>A list of operation summary information records. In a paginated request, the request returns up to <code>MaxResults</code> records for each
                *       call.</p>
                */
            OperationSummaryList?: OperationSummary[];
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListOperationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOperationsResponse) => any;
    }
    export interface ListServicesRequest {
            /**
                * <p>A token from a previous result page. Used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
    }
    export namespace ListServicesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicesRequest) => any;
    }
    /**
        * <p>Provides summary information for an App Runner service.</p>
        *          <p>This type contains limited information about a service. It doesn't include configuration details. It's returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a> action. Complete service information is returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>, <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>, and <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a> actions using the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_Service.html">Service</a> type.</p>
        */
    export interface ServiceSummary {
            /**
                * <p>The customer-provided service name.</p>
                */
            ServiceName?: string;
            /**
                * <p>An ID that App Runner generated for this service. It's unique within the Amazon Web Services Region.</p>
                */
            ServiceId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of this service.</p>
                */
            ServiceArn?: string;
            /**
                * <p>A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</p>
                */
            ServiceUrl?: string;
            /**
                * <p>The time when the App Runner service was created. It's in the Unix time stamp format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The time when the App Runner service was last updated. It's in theUnix time stamp format.</p>
                */
            UpdatedAt?: Date;
            /**
                * <p>The current state of the App Runner service. These particular values mean the following.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CREATE_FAILED</code> – The service failed to create. Read the failure events and logs, change any parameters that need to be fixed,
                *           and retry the call to create the service.</p>
                *                <p>The failed service isn't usable, and still counts towards your service quota. When you're done analyzing the failure, delete the service.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DELETE_FAILED</code> – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure
                *           that all related resources are removed.</p>
                *             </li>
                *          </ul>
                */
            Status?: ServiceStatus | string;
    }
    export namespace ServiceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceSummary) => any;
    }
    export interface ListServicesResponse {
            /**
                * <p>A list of service summary information records. In a paginated request, the request returns up to <code>MaxResults</code> records for each call.</p>
                */
            ServiceSummaryList: ServiceSummary[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListServicesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that a tag list is requested for.</p>
                *          <p>It must be the ARN of an App Runner resource.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>A list of the tag key-value pairs that are associated with the resource.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListVpcConnectorsRequest {
            /**
                * <p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>
                *          <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p>
                */
            MaxResults?: number;
            /**
                * <p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be
                *       identical to the ones that are specified in the initial request.</p>
                *          <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p>
                */
            NextToken?: string;
    }
    export namespace ListVpcConnectorsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVpcConnectorsRequest) => any;
    }
    export interface ListVpcConnectorsResponse {
            /**
                * <p>A list of information records for VPC connectors. In a paginated request, the request returns up to <code>MaxResults</code> records for each
                *       call.</p>
                */
            VpcConnectors: VpcConnector[] | undefined;
            /**
                * <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
                */
            NextToken?: string;
    }
    export namespace ListVpcConnectorsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVpcConnectorsResponse) => any;
    }
    export interface PauseServiceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to pause.</p>
                */
            ServiceArn: string | undefined;
    }
    export namespace PauseServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PauseServiceRequest) => any;
    }
    export interface PauseServiceResponse {
            /**
                * <p>A description of the App Runner service that this request just paused.</p>
                */
            Service: Service | undefined;
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a>ListOperations</a> call to track
                *       the operation's progress.</p>
                */
            OperationId?: string;
    }
    export namespace PauseServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PauseServiceResponse) => any;
    }
    export interface ResumeServiceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to resume.</p>
                */
            ServiceArn: string | undefined;
    }
    export namespace ResumeServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResumeServiceRequest) => any;
    }
    export interface ResumeServiceResponse {
            /**
                * <p>A description of the App Runner service that this request just resumed.</p>
                */
            Service: Service | undefined;
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a>ListOperations</a> call to track
                *       the operation's progress.</p>
                */
            OperationId?: string;
    }
    export namespace ResumeServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResumeServiceResponse) => any;
    }
    export interface StartDeploymentRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to manually deploy to.</p>
                */
            ServiceArn: string | undefined;
    }
    export namespace StartDeploymentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDeploymentRequest) => any;
    }
    export interface StartDeploymentResponse {
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a>ListOperations</a> call to track
                *       the operation's progress.</p>
                */
            OperationId: string | undefined;
    }
    export namespace StartDeploymentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDeploymentResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that you want to update tags for.</p>
                *          <p>It must be the ARN of an App Runner resource.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>A list of tag key-value pairs to add or update. If a key is new to the resource, the tag is added with the provided value. If a key is already
                *       associated with the resource, the value of the tag is updated.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that you want to remove tags from.</p>
                *          <p>It must be the ARN of an App Runner resource.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>A list of tag keys that you want to remove.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateServiceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the App Runner service that you want to update.</p>
                */
            ServiceArn: string | undefined;
            /**
                * <p>The source configuration to apply to the App Runner service.</p>
                *          <p>You can change the configuration of the code or image repository that the service uses. However, you can't switch from code to image or the other way
                *       around. This means that you must provide the same structure member of <code>SourceConfiguration</code> that you originally included when you created the
                *       service. Specifically, you can include either <code>CodeRepository</code> or <code>ImageRepository</code>. To update the source configuration, set the
                *       values to members of the structure that you include.</p>
                */
            SourceConfiguration?: SourceConfiguration;
            /**
                * <p>The runtime configuration to apply to instances (scaling units) of your service.</p>
                */
            InstanceConfiguration?: InstanceConfiguration;
            /**
                * <p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with the App Runner service.</p>
                */
            AutoScalingConfigurationArn?: string;
            /**
                * <p>The settings for the health check that App Runner performs to monitor the health of the App Runner service.</p>
                */
            HealthCheckConfiguration?: HealthCheckConfiguration;
            /**
                * <p>Configuration settings related to network traffic of the web application that the App Runner service runs.</p>
                */
            NetworkConfiguration?: NetworkConfiguration;
            /**
                * <p>The observability configuration of your service.</p>
                */
            ObservabilityConfiguration?: ServiceObservabilityConfiguration;
    }
    export namespace UpdateServiceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceRequest) => any;
    }
    export interface UpdateServiceResponse {
            /**
                * <p>A description of the App Runner service updated by this request. All configuration values in the returned <code>Service</code> structure reflect
                *       configuration changes that are being applied by this request.</p>
                */
            Service: Service | undefined;
            /**
                * <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a>ListOperations</a> call to track
                *       the operation's progress.</p>
                */
            OperationId: string | undefined;
    }
    export namespace UpdateServiceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceResponse) => any;
    }
}

declare module '@aws-sdk/client-apprunner/node_modules/@aws-sdk/client-apprunner/dist-types/models/AppRunnerServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from AppRunner service.
        */
    export class AppRunnerServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

