// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-personalize-runtime' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { GetPersonalizedRankingCommandInput, GetPersonalizedRankingCommandOutput } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetPersonalizedRankingCommand";
    import { GetRecommendationsCommandInput, GetRecommendationsCommandOutput } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetRecommendationsCommand";
    import { PersonalizeRuntimeClient } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/PersonalizeRuntimeClient";
    /**
        * <p></p>
        */
    export class PersonalizeRuntime extends PersonalizeRuntimeClient {
            /**
                * <p>Re-ranks a list of recommended items for the given user. The first item in the list is
                *       deemed the most likely item to be of interest to the user.</p>
                *          <note>
                *             <p>The solution backing the campaign must have been created using a recipe of type
                *         PERSONALIZED_RANKING.</p>
                *          </note>
                */
            getPersonalizedRanking(args: GetPersonalizedRankingCommandInput, options?: __HttpHandlerOptions): Promise<GetPersonalizedRankingCommandOutput>;
            getPersonalizedRanking(args: GetPersonalizedRankingCommandInput, cb: (err: any, data?: GetPersonalizedRankingCommandOutput) => void): void;
            getPersonalizedRanking(args: GetPersonalizedRankingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPersonalizedRankingCommandOutput) => void): void;
            /**
                * <p>Returns a list of recommended items. For campaigns, the campaign's Amazon Resource Name (ARN) is required and the required user and item input depends on the recipe type used to
                *       create the solution backing the campaign as follows:</p>
                *          <ul>
                *             <li>
                *                <p>USER_PERSONALIZATION - <code>userId</code> required, <code>itemId</code> not used</p>
                *             </li>
                *             <li>
                *                <p>RELATED_ITEMS - <code>itemId</code> required, <code>userId</code> not used</p>
                *             </li>
                *          </ul>
                *          <note>
                *             <p>Campaigns that are backed by a solution created using a recipe of type
                *         PERSONALIZED_RANKING use the  API.</p>
                *          </note>
                *          <p>
                *       For recommenders, the recommender's ARN is required and the required item and user input depends on the use case (domain-based recipe) backing the recommender.
                *       For information on use case requirements see <a href="https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html">Choosing recommender use cases</a>.
                *     </p>
                */
            getRecommendations(args: GetRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<GetRecommendationsCommandOutput>;
            getRecommendations(args: GetRecommendationsCommandInput, cb: (err: any, data?: GetRecommendationsCommandOutput) => void): void;
            getRecommendations(args: GetRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRecommendationsCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetPersonalizedRankingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetPersonalizedRankingRequest, GetPersonalizedRankingResponse } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/models/models_0";
    import { PersonalizeRuntimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/PersonalizeRuntimeClient";
    export interface GetPersonalizedRankingCommandInput extends GetPersonalizedRankingRequest {
    }
    export interface GetPersonalizedRankingCommandOutput extends GetPersonalizedRankingResponse, __MetadataBearer {
    }
    /**
        * <p>Re-ranks a list of recommended items for the given user. The first item in the list is
        *       deemed the most likely item to be of interest to the user.</p>
        *          <note>
        *             <p>The solution backing the campaign must have been created using a recipe of type
        *         PERSONALIZED_RANKING.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { PersonalizeRuntimeClient, GetPersonalizedRankingCommand } from "@aws-sdk/client-personalize-runtime"; // ES Modules import
        * // const { PersonalizeRuntimeClient, GetPersonalizedRankingCommand } = require("@aws-sdk/client-personalize-runtime"); // CommonJS import
        * const client = new PersonalizeRuntimeClient(config);
        * const command = new GetPersonalizedRankingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPersonalizedRankingCommandInput} for command's `input` shape.
        * @see {@link GetPersonalizedRankingCommandOutput} for command's `response` shape.
        * @see {@link PersonalizeRuntimeClientResolvedConfig | config} for PersonalizeRuntimeClient's `config` shape.
        *
        */
    export class GetPersonalizedRankingCommand extends $Command<GetPersonalizedRankingCommandInput, GetPersonalizedRankingCommandOutput, PersonalizeRuntimeClientResolvedConfig> {
            readonly input: GetPersonalizedRankingCommandInput;
            constructor(input: GetPersonalizedRankingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PersonalizeRuntimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPersonalizedRankingCommandInput, GetPersonalizedRankingCommandOutput>;
    }
}

declare module '@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetRecommendationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRecommendationsRequest, GetRecommendationsResponse } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/models/models_0";
    import { PersonalizeRuntimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/PersonalizeRuntimeClient";
    export interface GetRecommendationsCommandInput extends GetRecommendationsRequest {
    }
    export interface GetRecommendationsCommandOutput extends GetRecommendationsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of recommended items. For campaigns, the campaign's Amazon Resource Name (ARN) is required and the required user and item input depends on the recipe type used to
        *       create the solution backing the campaign as follows:</p>
        *          <ul>
        *             <li>
        *                <p>USER_PERSONALIZATION - <code>userId</code> required, <code>itemId</code> not used</p>
        *             </li>
        *             <li>
        *                <p>RELATED_ITEMS - <code>itemId</code> required, <code>userId</code> not used</p>
        *             </li>
        *          </ul>
        *          <note>
        *             <p>Campaigns that are backed by a solution created using a recipe of type
        *         PERSONALIZED_RANKING use the  API.</p>
        *          </note>
        *          <p>
        *       For recommenders, the recommender's ARN is required and the required item and user input depends on the use case (domain-based recipe) backing the recommender.
        *       For information on use case requirements see <a href="https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html">Choosing recommender use cases</a>.
        *     </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { PersonalizeRuntimeClient, GetRecommendationsCommand } from "@aws-sdk/client-personalize-runtime"; // ES Modules import
        * // const { PersonalizeRuntimeClient, GetRecommendationsCommand } = require("@aws-sdk/client-personalize-runtime"); // CommonJS import
        * const client = new PersonalizeRuntimeClient(config);
        * const command = new GetRecommendationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRecommendationsCommandInput} for command's `input` shape.
        * @see {@link GetRecommendationsCommandOutput} for command's `response` shape.
        * @see {@link PersonalizeRuntimeClientResolvedConfig | config} for PersonalizeRuntimeClient's `config` shape.
        *
        */
    export class GetRecommendationsCommand extends $Command<GetRecommendationsCommandInput, GetRecommendationsCommandOutput, PersonalizeRuntimeClientResolvedConfig> {
            readonly input: GetRecommendationsCommandInput;
            constructor(input: GetRecommendationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PersonalizeRuntimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRecommendationsCommandInput, GetRecommendationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/PersonalizeRuntimeClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { GetPersonalizedRankingCommandInput, GetPersonalizedRankingCommandOutput } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetPersonalizedRankingCommand";
    import { GetRecommendationsCommandInput, GetRecommendationsCommandOutput } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/commands/GetRecommendationsCommand";
    export type ServiceInputTypes = GetPersonalizedRankingCommandInput | GetRecommendationsCommandInput;
    export type ServiceOutputTypes = GetPersonalizedRankingCommandOutput | GetRecommendationsCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type PersonalizeRuntimeClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of PersonalizeRuntimeClient class constructor that set the region, credentials and other options.
        */
    export interface PersonalizeRuntimeClientConfig extends PersonalizeRuntimeClientConfigType {
    }
    type PersonalizeRuntimeClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of PersonalizeRuntimeClient class. This is resolved and normalized from the {@link PersonalizeRuntimeClientConfig | constructor configuration interface}.
        */
    export interface PersonalizeRuntimeClientResolvedConfig extends PersonalizeRuntimeClientResolvedConfigType {
    }
    /**
        * <p></p>
        */
    export class PersonalizeRuntimeClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, PersonalizeRuntimeClientResolvedConfig> {
            /**
                * The resolved configuration of PersonalizeRuntimeClient class. This is resolved and normalized from the {@link PersonalizeRuntimeClientConfig | constructor configuration interface}.
                */
            readonly config: PersonalizeRuntimeClientResolvedConfig;
            constructor(configuration: PersonalizeRuntimeClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { PersonalizeRuntimeServiceException as __BaseException } from "@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/models/PersonalizeRuntimeServiceException";
    export interface GetPersonalizedRankingRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the campaign to use for generating the personalized
                *       ranking.</p>
                */
            campaignArn: string | undefined;
            /**
                * <p>A list of items (by <code>itemId</code>) to rank. If an item was not included in the training dataset,
                *       the item is appended to the end of the reranked list. The maximum is 500.</p>
                */
            inputList: string[] | undefined;
            /**
                * <p>The user for which you want the campaign to provide a personalized ranking.</p>
                */
            userId: string | undefined;
            /**
                * <p>The contextual metadata to use when getting recommendations. Contextual metadata includes
                *       any interaction information that might be relevant when getting a user's recommendations, such
                *       as the user's current location or device type.</p>
                */
            context?: Record<string, string>;
            /**
                * <p>The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user.
                *       For more information, see
                *       <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>
                */
            filterArn?: string;
            /**
                * <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case)
                *       as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma.
                *     </p>
                *          <p>For filter expressions that use an <code>INCLUDE</code> element to include items,
                *       you must provide values for all parameters that are defined in the expression. For
                *       filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you
                *       can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of
                *       the expression to filter recommendations.</p>
                *          <p>For more information, see
                *       <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>
                */
            filterValues?: Record<string, string>;
    }
    export namespace GetPersonalizedRankingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPersonalizedRankingRequest) => any;
    }
    /**
        * <p>An object that identifies an item.</p>
        *          <p>The  and  APIs return a list of
        *       <code>PredictedItem</code>s.</p>
        */
    export interface PredictedItem {
            /**
                * <p>The recommended item ID.</p>
                */
            itemId?: string;
            /**
                * <p>A numeric representation of the model's certainty that the item will be the next user
                *       selection. For more information on scoring logic, see <a>how-scores-work</a>.</p>
                */
            score?: number;
    }
    export namespace PredictedItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PredictedItem) => any;
    }
    export interface GetPersonalizedRankingResponse {
            /**
                * <p>A list of items in order of most likely interest to the user. The maximum is 500.</p>
                */
            personalizedRanking?: PredictedItem[];
            /**
                * <p>The ID of the recommendation.</p>
                */
            recommendationId?: string;
    }
    export namespace GetPersonalizedRankingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPersonalizedRankingResponse) => any;
    }
    /**
        * <p>Provide a valid value for the field or parameter.</p>
        */
    export class InvalidInputException extends __BaseException {
            readonly name: "InvalidInputException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidInputException, __BaseException>);
    }
    /**
        * <p>The specified resource does not exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface GetRecommendationsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.</p>
                */
            campaignArn?: string;
            /**
                * <p>The item ID to provide recommendations for.</p>
                *          <p>Required for <code>RELATED_ITEMS</code> recipe type.</p>
                */
            itemId?: string;
            /**
                * <p>The user ID to provide recommendations for.</p>
                *          <p>Required for <code>USER_PERSONALIZATION</code> recipe type.</p>
                */
            userId?: string;
            /**
                * <p>The number of results to return. The default is 25. The maximum is 500.</p>
                */
            numResults?: number;
            /**
                * <p>The contextual metadata to use when getting recommendations. Contextual metadata includes
                *       any interaction information that might be relevant when getting a user's recommendations, such
                *       as the user's current location or device type.</p>
                */
            context?: Record<string, string>;
            /**
                * <p>The ARN of the filter to apply to the returned recommendations. For more information, see
                *       <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>
                *          <p>When using this parameter, be sure the filter resource is <code>ACTIVE</code>.</p>
                */
            filterArn?: string;
            /**
                * <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case)
                *       as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma.
                *     </p>
                *          <p>For filter expressions that use an <code>INCLUDE</code> element to include items,
                *     you must provide values for all parameters that are defined in the expression. For
                *     filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you
                *       can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of
                *     the expression to filter recommendations.</p>
                *          <p>For more information, see
                *       <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>
                */
            filterValues?: Record<string, string>;
            /**
                * <p>The Amazon Resource Name (ARN) of the recommender to use to get recommendations. Provide a recommender ARN if you
                *     created a Domain dataset group with a recommender for a domain use case.</p>
                */
            recommenderArn?: string;
    }
    export namespace GetRecommendationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRecommendationsRequest) => any;
    }
    export interface GetRecommendationsResponse {
            /**
                * <p>A list of recommendations sorted in descending order by prediction score. There can be a
                *       maximum of 500 items in the list.</p>
                */
            itemList?: PredictedItem[];
            /**
                * <p>The ID of the recommendation.</p>
                */
            recommendationId?: string;
    }
    export namespace GetRecommendationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRecommendationsResponse) => any;
    }
}

declare module '@aws-sdk/client-personalize-runtime/node_modules/@aws-sdk/client-personalize-runtime/dist-types/models/PersonalizeRuntimeServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from PersonalizeRuntime service.
        */
    export class PersonalizeRuntimeServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

