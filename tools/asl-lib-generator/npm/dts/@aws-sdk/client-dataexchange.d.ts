// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-dataexchange' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CancelJobCommandInput, CancelJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CancelJobCommand";
    import { CreateDataSetCommandInput, CreateDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateDataSetCommand";
    import { CreateEventActionCommandInput, CreateEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateEventActionCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateJobCommand";
    import { CreateRevisionCommandInput, CreateRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateRevisionCommand";
    import { DeleteAssetCommandInput, DeleteAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteAssetCommand";
    import { DeleteDataSetCommandInput, DeleteDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteDataSetCommand";
    import { DeleteEventActionCommandInput, DeleteEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteEventActionCommand";
    import { DeleteRevisionCommandInput, DeleteRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteRevisionCommand";
    import { GetAssetCommandInput, GetAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetAssetCommand";
    import { GetDataSetCommandInput, GetDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetDataSetCommand";
    import { GetEventActionCommandInput, GetEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetEventActionCommand";
    import { GetJobCommandInput, GetJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetJobCommand";
    import { GetRevisionCommandInput, GetRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetRevisionCommand";
    import { ListDataSetRevisionsCommandInput, ListDataSetRevisionsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetRevisionsCommand";
    import { ListDataSetsCommandInput, ListDataSetsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetsCommand";
    import { ListEventActionsCommandInput, ListEventActionsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListEventActionsCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListJobsCommand";
    import { ListRevisionAssetsCommandInput, ListRevisionAssetsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListRevisionAssetsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListTagsForResourceCommand";
    import { RevokeRevisionCommandInput, RevokeRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/RevokeRevisionCommand";
    import { SendApiAssetCommandInput, SendApiAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/SendApiAssetCommand";
    import { StartJobCommandInput, StartJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/StartJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UntagResourceCommand";
    import { UpdateAssetCommandInput, UpdateAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateAssetCommand";
    import { UpdateDataSetCommandInput, UpdateDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateDataSetCommand";
    import { UpdateEventActionCommandInput, UpdateEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateEventActionCommand";
    import { UpdateRevisionCommandInput, UpdateRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateRevisionCommand";
    import { DataExchangeClient } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    /**
        * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p><p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIS to download or copy your entitled data sets to Amazon S3 for use across a variety of AWS analytics and machine learning services.</p><p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the AWS Data Exchange User Guide.</p><p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set.  A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
        */
    export class DataExchange extends DataExchangeClient {
            /**
                * <p>This operation cancels a job. Jobs can be cancelled only when they are in the WAITING state.</p>
                */
            cancelJob(args: CancelJobCommandInput, options?: __HttpHandlerOptions): Promise<CancelJobCommandOutput>;
            cancelJob(args: CancelJobCommandInput, cb: (err: any, data?: CancelJobCommandOutput) => void): void;
            cancelJob(args: CancelJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelJobCommandOutput) => void): void;
            /**
                * <p>This operation creates a data set.</p>
                */
            createDataSet(args: CreateDataSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateDataSetCommandOutput>;
            createDataSet(args: CreateDataSetCommandInput, cb: (err: any, data?: CreateDataSetCommandOutput) => void): void;
            createDataSet(args: CreateDataSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDataSetCommandOutput) => void): void;
            /**
                * <p>This operation creates an event action.</p>
                */
            createEventAction(args: CreateEventActionCommandInput, options?: __HttpHandlerOptions): Promise<CreateEventActionCommandOutput>;
            createEventAction(args: CreateEventActionCommandInput, cb: (err: any, data?: CreateEventActionCommandOutput) => void): void;
            createEventAction(args: CreateEventActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEventActionCommandOutput) => void): void;
            /**
                * <p>This operation creates a job.</p>
                */
            createJob(args: CreateJobCommandInput, options?: __HttpHandlerOptions): Promise<CreateJobCommandOutput>;
            createJob(args: CreateJobCommandInput, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            createJob(args: CreateJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            /**
                * <p>This operation creates a revision for a data set.</p>
                */
            createRevision(args: CreateRevisionCommandInput, options?: __HttpHandlerOptions): Promise<CreateRevisionCommandOutput>;
            createRevision(args: CreateRevisionCommandInput, cb: (err: any, data?: CreateRevisionCommandOutput) => void): void;
            createRevision(args: CreateRevisionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRevisionCommandOutput) => void): void;
            /**
                * <p>This operation deletes an asset.</p>
                */
            deleteAsset(args: DeleteAssetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssetCommandOutput>;
            deleteAsset(args: DeleteAssetCommandInput, cb: (err: any, data?: DeleteAssetCommandOutput) => void): void;
            deleteAsset(args: DeleteAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssetCommandOutput) => void): void;
            /**
                * <p>This operation deletes a data set.</p>
                */
            deleteDataSet(args: DeleteDataSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDataSetCommandOutput>;
            deleteDataSet(args: DeleteDataSetCommandInput, cb: (err: any, data?: DeleteDataSetCommandOutput) => void): void;
            deleteDataSet(args: DeleteDataSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDataSetCommandOutput) => void): void;
            /**
                * <p>This operation deletes the event action.</p>
                */
            deleteEventAction(args: DeleteEventActionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEventActionCommandOutput>;
            deleteEventAction(args: DeleteEventActionCommandInput, cb: (err: any, data?: DeleteEventActionCommandOutput) => void): void;
            deleteEventAction(args: DeleteEventActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEventActionCommandOutput) => void): void;
            /**
                * <p>This operation deletes a revision.</p>
                */
            deleteRevision(args: DeleteRevisionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRevisionCommandOutput>;
            deleteRevision(args: DeleteRevisionCommandInput, cb: (err: any, data?: DeleteRevisionCommandOutput) => void): void;
            deleteRevision(args: DeleteRevisionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRevisionCommandOutput) => void): void;
            /**
                * <p>This operation returns information about an asset.</p>
                */
            getAsset(args: GetAssetCommandInput, options?: __HttpHandlerOptions): Promise<GetAssetCommandOutput>;
            getAsset(args: GetAssetCommandInput, cb: (err: any, data?: GetAssetCommandOutput) => void): void;
            getAsset(args: GetAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssetCommandOutput) => void): void;
            /**
                * <p>This operation returns information about a data set.</p>
                */
            getDataSet(args: GetDataSetCommandInput, options?: __HttpHandlerOptions): Promise<GetDataSetCommandOutput>;
            getDataSet(args: GetDataSetCommandInput, cb: (err: any, data?: GetDataSetCommandOutput) => void): void;
            getDataSet(args: GetDataSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDataSetCommandOutput) => void): void;
            /**
                * <p>This operation retrieves information about an event action.</p>
                */
            getEventAction(args: GetEventActionCommandInput, options?: __HttpHandlerOptions): Promise<GetEventActionCommandOutput>;
            getEventAction(args: GetEventActionCommandInput, cb: (err: any, data?: GetEventActionCommandOutput) => void): void;
            getEventAction(args: GetEventActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEventActionCommandOutput) => void): void;
            /**
                * <p>This operation returns information about a job.</p>
                */
            getJob(args: GetJobCommandInput, options?: __HttpHandlerOptions): Promise<GetJobCommandOutput>;
            getJob(args: GetJobCommandInput, cb: (err: any, data?: GetJobCommandOutput) => void): void;
            getJob(args: GetJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetJobCommandOutput) => void): void;
            /**
                * <p>This operation returns information about a revision.</p>
                */
            getRevision(args: GetRevisionCommandInput, options?: __HttpHandlerOptions): Promise<GetRevisionCommandOutput>;
            getRevision(args: GetRevisionCommandInput, cb: (err: any, data?: GetRevisionCommandOutput) => void): void;
            getRevision(args: GetRevisionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRevisionCommandOutput) => void): void;
            /**
                * <p>This operation lists a data set's revisions sorted by CreatedAt in descending order.</p>
                */
            listDataSetRevisions(args: ListDataSetRevisionsCommandInput, options?: __HttpHandlerOptions): Promise<ListDataSetRevisionsCommandOutput>;
            listDataSetRevisions(args: ListDataSetRevisionsCommandInput, cb: (err: any, data?: ListDataSetRevisionsCommandOutput) => void): void;
            listDataSetRevisions(args: ListDataSetRevisionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDataSetRevisionsCommandOutput) => void): void;
            /**
                * <p>This operation lists your data sets. When listing by origin OWNED, results are sorted by CreatedAt in descending order. When listing by origin ENTITLED, there is no order and the maxResults parameter is ignored.</p>
                */
            listDataSets(args: ListDataSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListDataSetsCommandOutput>;
            listDataSets(args: ListDataSetsCommandInput, cb: (err: any, data?: ListDataSetsCommandOutput) => void): void;
            listDataSets(args: ListDataSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDataSetsCommandOutput) => void): void;
            /**
                * <p>This operation lists your event actions.</p>
                */
            listEventActions(args: ListEventActionsCommandInput, options?: __HttpHandlerOptions): Promise<ListEventActionsCommandOutput>;
            listEventActions(args: ListEventActionsCommandInput, cb: (err: any, data?: ListEventActionsCommandOutput) => void): void;
            listEventActions(args: ListEventActionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEventActionsCommandOutput) => void): void;
            /**
                * <p>This operation lists your jobs sorted by CreatedAt in descending order.</p>
                */
            listJobs(args: ListJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListJobsCommandOutput>;
            listJobs(args: ListJobsCommandInput, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            listJobs(args: ListJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            /**
                * <p>This operation lists a revision's assets sorted alphabetically in descending order.</p>
                */
            listRevisionAssets(args: ListRevisionAssetsCommandInput, options?: __HttpHandlerOptions): Promise<ListRevisionAssetsCommandOutput>;
            listRevisionAssets(args: ListRevisionAssetsCommandInput, cb: (err: any, data?: ListRevisionAssetsCommandOutput) => void): void;
            listRevisionAssets(args: ListRevisionAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRevisionAssetsCommandOutput) => void): void;
            /**
                * <p>This operation lists the tags on the resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>This operation revokes subscribers' access to a revision.</p>
                */
            revokeRevision(args: RevokeRevisionCommandInput, options?: __HttpHandlerOptions): Promise<RevokeRevisionCommandOutput>;
            revokeRevision(args: RevokeRevisionCommandInput, cb: (err: any, data?: RevokeRevisionCommandOutput) => void): void;
            revokeRevision(args: RevokeRevisionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RevokeRevisionCommandOutput) => void): void;
            /**
                * <p>This operation invokes an API Gateway API asset. The request is proxied to the provider’s API Gateway API.</p>
                */
            sendApiAsset(args: SendApiAssetCommandInput, options?: __HttpHandlerOptions): Promise<SendApiAssetCommandOutput>;
            sendApiAsset(args: SendApiAssetCommandInput, cb: (err: any, data?: SendApiAssetCommandOutput) => void): void;
            sendApiAsset(args: SendApiAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendApiAssetCommandOutput) => void): void;
            /**
                * <p>This operation starts a job.</p>
                */
            startJob(args: StartJobCommandInput, options?: __HttpHandlerOptions): Promise<StartJobCommandOutput>;
            startJob(args: StartJobCommandInput, cb: (err: any, data?: StartJobCommandOutput) => void): void;
            startJob(args: StartJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartJobCommandOutput) => void): void;
            /**
                * <p>This operation tags a resource.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>This operation removes one or more tags from a resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>This operation updates an asset.</p>
                */
            updateAsset(args: UpdateAssetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAssetCommandOutput>;
            updateAsset(args: UpdateAssetCommandInput, cb: (err: any, data?: UpdateAssetCommandOutput) => void): void;
            updateAsset(args: UpdateAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAssetCommandOutput) => void): void;
            /**
                * <p>This operation updates a data set.</p>
                */
            updateDataSet(args: UpdateDataSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDataSetCommandOutput>;
            updateDataSet(args: UpdateDataSetCommandInput, cb: (err: any, data?: UpdateDataSetCommandOutput) => void): void;
            updateDataSet(args: UpdateDataSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDataSetCommandOutput) => void): void;
            /**
                * <p>This operation updates the event action.</p>
                */
            updateEventAction(args: UpdateEventActionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEventActionCommandOutput>;
            updateEventAction(args: UpdateEventActionCommandInput, cb: (err: any, data?: UpdateEventActionCommandOutput) => void): void;
            updateEventAction(args: UpdateEventActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEventActionCommandOutput) => void): void;
            /**
                * <p>This operation updates a revision.</p>
                */
            updateRevision(args: UpdateRevisionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRevisionCommandOutput>;
            updateRevision(args: UpdateRevisionCommandInput, cb: (err: any, data?: UpdateRevisionCommandOutput) => void): void;
            updateRevision(args: UpdateRevisionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRevisionCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CancelJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { CancelJobRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface CancelJobCommandInput extends CancelJobRequest {
    }
    export interface CancelJobCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation cancels a job. Jobs can be cancelled only when they are in the WAITING state.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, CancelJobCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, CancelJobCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new CancelJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelJobCommandInput} for command's `input` shape.
        * @see {@link CancelJobCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class CancelJobCommand extends $Command<CancelJobCommandInput, CancelJobCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: CancelJobCommandInput;
            constructor(input: CancelJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelJobCommandInput, CancelJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateDataSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { CreateDataSetRequest, CreateDataSetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface CreateDataSetCommandInput extends CreateDataSetRequest {
    }
    export interface CreateDataSetCommandOutput extends CreateDataSetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation creates a data set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, CreateDataSetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, CreateDataSetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new CreateDataSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDataSetCommandInput} for command's `input` shape.
        * @see {@link CreateDataSetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class CreateDataSetCommand extends $Command<CreateDataSetCommandInput, CreateDataSetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: CreateDataSetCommandInput;
            constructor(input: CreateDataSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDataSetCommandInput, CreateDataSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateEventActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { CreateEventActionRequest, CreateEventActionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface CreateEventActionCommandInput extends CreateEventActionRequest {
    }
    export interface CreateEventActionCommandOutput extends CreateEventActionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation creates an event action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, CreateEventActionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, CreateEventActionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new CreateEventActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEventActionCommandInput} for command's `input` shape.
        * @see {@link CreateEventActionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class CreateEventActionCommand extends $Command<CreateEventActionCommandInput, CreateEventActionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: CreateEventActionCommandInput;
            constructor(input: CreateEventActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEventActionCommandInput, CreateEventActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { CreateJobRequest, CreateJobResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface CreateJobCommandInput extends CreateJobRequest {
    }
    export interface CreateJobCommandOutput extends CreateJobResponse, __MetadataBearer {
    }
    /**
        * <p>This operation creates a job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, CreateJobCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, CreateJobCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new CreateJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateJobCommandInput} for command's `input` shape.
        * @see {@link CreateJobCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class CreateJobCommand extends $Command<CreateJobCommandInput, CreateJobCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: CreateJobCommandInput;
            constructor(input: CreateJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateJobCommandInput, CreateJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateRevisionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { CreateRevisionRequest, CreateRevisionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface CreateRevisionCommandInput extends CreateRevisionRequest {
    }
    export interface CreateRevisionCommandOutput extends CreateRevisionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation creates a revision for a data set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, CreateRevisionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, CreateRevisionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new CreateRevisionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRevisionCommandInput} for command's `input` shape.
        * @see {@link CreateRevisionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class CreateRevisionCommand extends $Command<CreateRevisionCommandInput, CreateRevisionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: CreateRevisionCommandInput;
            constructor(input: CreateRevisionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRevisionCommandInput, CreateRevisionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { DeleteAssetRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface DeleteAssetCommandInput extends DeleteAssetRequest {
    }
    export interface DeleteAssetCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes an asset.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, DeleteAssetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, DeleteAssetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new DeleteAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssetCommandInput} for command's `input` shape.
        * @see {@link DeleteAssetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class DeleteAssetCommand extends $Command<DeleteAssetCommandInput, DeleteAssetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: DeleteAssetCommandInput;
            constructor(input: DeleteAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssetCommandInput, DeleteAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteDataSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { DeleteDataSetRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface DeleteDataSetCommandInput extends DeleteDataSetRequest {
    }
    export interface DeleteDataSetCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes a data set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, DeleteDataSetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, DeleteDataSetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new DeleteDataSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDataSetCommandInput} for command's `input` shape.
        * @see {@link DeleteDataSetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class DeleteDataSetCommand extends $Command<DeleteDataSetCommandInput, DeleteDataSetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: DeleteDataSetCommandInput;
            constructor(input: DeleteDataSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDataSetCommandInput, DeleteDataSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteEventActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { DeleteEventActionRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface DeleteEventActionCommandInput extends DeleteEventActionRequest {
    }
    export interface DeleteEventActionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes the event action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, DeleteEventActionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, DeleteEventActionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new DeleteEventActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEventActionCommandInput} for command's `input` shape.
        * @see {@link DeleteEventActionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class DeleteEventActionCommand extends $Command<DeleteEventActionCommandInput, DeleteEventActionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: DeleteEventActionCommandInput;
            constructor(input: DeleteEventActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEventActionCommandInput, DeleteEventActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteRevisionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { DeleteRevisionRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface DeleteRevisionCommandInput extends DeleteRevisionRequest {
    }
    export interface DeleteRevisionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes a revision.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, DeleteRevisionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, DeleteRevisionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new DeleteRevisionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRevisionCommandInput} for command's `input` shape.
        * @see {@link DeleteRevisionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class DeleteRevisionCommand extends $Command<DeleteRevisionCommandInput, DeleteRevisionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: DeleteRevisionCommandInput;
            constructor(input: DeleteRevisionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRevisionCommandInput, DeleteRevisionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { GetAssetRequest, GetAssetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface GetAssetCommandInput extends GetAssetRequest {
    }
    export interface GetAssetCommandOutput extends GetAssetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about an asset.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, GetAssetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, GetAssetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new GetAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAssetCommandInput} for command's `input` shape.
        * @see {@link GetAssetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class GetAssetCommand extends $Command<GetAssetCommandInput, GetAssetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: GetAssetCommandInput;
            constructor(input: GetAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAssetCommandInput, GetAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetDataSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { GetDataSetRequest, GetDataSetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface GetDataSetCommandInput extends GetDataSetRequest {
    }
    export interface GetDataSetCommandOutput extends GetDataSetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about a data set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, GetDataSetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, GetDataSetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new GetDataSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDataSetCommandInput} for command's `input` shape.
        * @see {@link GetDataSetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class GetDataSetCommand extends $Command<GetDataSetCommandInput, GetDataSetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: GetDataSetCommandInput;
            constructor(input: GetDataSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDataSetCommandInput, GetDataSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetEventActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { GetEventActionRequest, GetEventActionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface GetEventActionCommandInput extends GetEventActionRequest {
    }
    export interface GetEventActionCommandOutput extends GetEventActionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation retrieves information about an event action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, GetEventActionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, GetEventActionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new GetEventActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEventActionCommandInput} for command's `input` shape.
        * @see {@link GetEventActionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class GetEventActionCommand extends $Command<GetEventActionCommandInput, GetEventActionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: GetEventActionCommandInput;
            constructor(input: GetEventActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEventActionCommandInput, GetEventActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { GetJobRequest, GetJobResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface GetJobCommandInput extends GetJobRequest {
    }
    export interface GetJobCommandOutput extends GetJobResponse, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about a job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, GetJobCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, GetJobCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new GetJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetJobCommandInput} for command's `input` shape.
        * @see {@link GetJobCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class GetJobCommand extends $Command<GetJobCommandInput, GetJobCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: GetJobCommandInput;
            constructor(input: GetJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetJobCommandInput, GetJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetRevisionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { GetRevisionRequest, GetRevisionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface GetRevisionCommandInput extends GetRevisionRequest {
    }
    export interface GetRevisionCommandOutput extends GetRevisionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about a revision.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, GetRevisionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, GetRevisionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new GetRevisionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRevisionCommandInput} for command's `input` shape.
        * @see {@link GetRevisionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class GetRevisionCommand extends $Command<GetRevisionCommandInput, GetRevisionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: GetRevisionCommandInput;
            constructor(input: GetRevisionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRevisionCommandInput, GetRevisionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetRevisionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListDataSetRevisionsRequest, ListDataSetRevisionsResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListDataSetRevisionsCommandInput extends ListDataSetRevisionsRequest {
    }
    export interface ListDataSetRevisionsCommandOutput extends ListDataSetRevisionsResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists a data set's revisions sorted by CreatedAt in descending order.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListDataSetRevisionsCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListDataSetRevisionsCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListDataSetRevisionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDataSetRevisionsCommandInput} for command's `input` shape.
        * @see {@link ListDataSetRevisionsCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListDataSetRevisionsCommand extends $Command<ListDataSetRevisionsCommandInput, ListDataSetRevisionsCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListDataSetRevisionsCommandInput;
            constructor(input: ListDataSetRevisionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDataSetRevisionsCommandInput, ListDataSetRevisionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListDataSetsRequest, ListDataSetsResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListDataSetsCommandInput extends ListDataSetsRequest {
    }
    export interface ListDataSetsCommandOutput extends ListDataSetsResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists your data sets. When listing by origin OWNED, results are sorted by CreatedAt in descending order. When listing by origin ENTITLED, there is no order and the maxResults parameter is ignored.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListDataSetsCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListDataSetsCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListDataSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDataSetsCommandInput} for command's `input` shape.
        * @see {@link ListDataSetsCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListDataSetsCommand extends $Command<ListDataSetsCommandInput, ListDataSetsCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListDataSetsCommandInput;
            constructor(input: ListDataSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDataSetsCommandInput, ListDataSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListEventActionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListEventActionsRequest, ListEventActionsResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListEventActionsCommandInput extends ListEventActionsRequest {
    }
    export interface ListEventActionsCommandOutput extends ListEventActionsResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists your event actions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListEventActionsCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListEventActionsCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListEventActionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEventActionsCommandInput} for command's `input` shape.
        * @see {@link ListEventActionsCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListEventActionsCommand extends $Command<ListEventActionsCommandInput, ListEventActionsCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListEventActionsCommandInput;
            constructor(input: ListEventActionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEventActionsCommandInput, ListEventActionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListJobsRequest, ListJobsResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListJobsCommandInput extends ListJobsRequest {
    }
    export interface ListJobsCommandOutput extends ListJobsResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists your jobs sorted by CreatedAt in descending order.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListJobsCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListJobsCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobsCommandInput} for command's `input` shape.
        * @see {@link ListJobsCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListJobsCommand extends $Command<ListJobsCommandInput, ListJobsCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListJobsCommandInput;
            constructor(input: ListJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobsCommandInput, ListJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListRevisionAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListRevisionAssetsRequest, ListRevisionAssetsResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListRevisionAssetsCommandInput extends ListRevisionAssetsRequest {
    }
    export interface ListRevisionAssetsCommandOutput extends ListRevisionAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists a revision's assets sorted alphabetically in descending order.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListRevisionAssetsCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListRevisionAssetsCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListRevisionAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRevisionAssetsCommandInput} for command's `input` shape.
        * @see {@link ListRevisionAssetsCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListRevisionAssetsCommand extends $Command<ListRevisionAssetsCommandInput, ListRevisionAssetsCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListRevisionAssetsCommandInput;
            constructor(input: ListRevisionAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRevisionAssetsCommandInput, ListRevisionAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>This operation lists the tags on the resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, ListTagsForResourceCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, ListTagsForResourceCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/RevokeRevisionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { RevokeRevisionRequest, RevokeRevisionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface RevokeRevisionCommandInput extends RevokeRevisionRequest {
    }
    export interface RevokeRevisionCommandOutput extends RevokeRevisionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation revokes subscribers' access to a revision.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, RevokeRevisionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, RevokeRevisionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new RevokeRevisionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RevokeRevisionCommandInput} for command's `input` shape.
        * @see {@link RevokeRevisionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class RevokeRevisionCommand extends $Command<RevokeRevisionCommandInput, RevokeRevisionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: RevokeRevisionCommandInput;
            constructor(input: RevokeRevisionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RevokeRevisionCommandInput, RevokeRevisionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/SendApiAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { SendApiAssetRequest, SendApiAssetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface SendApiAssetCommandInput extends SendApiAssetRequest {
    }
    export interface SendApiAssetCommandOutput extends SendApiAssetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation invokes an API Gateway API asset. The request is proxied to the provider’s API Gateway API.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, SendApiAssetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, SendApiAssetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new SendApiAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SendApiAssetCommandInput} for command's `input` shape.
        * @see {@link SendApiAssetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class SendApiAssetCommand extends $Command<SendApiAssetCommandInput, SendApiAssetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: SendApiAssetCommandInput;
            constructor(input: SendApiAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SendApiAssetCommandInput, SendApiAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/StartJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { StartJobRequest, StartJobResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface StartJobCommandInput extends StartJobRequest {
    }
    export interface StartJobCommandOutput extends StartJobResponse, __MetadataBearer {
    }
    /**
        * <p>This operation starts a job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, StartJobCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, StartJobCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new StartJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartJobCommandInput} for command's `input` shape.
        * @see {@link StartJobCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class StartJobCommand extends $Command<StartJobCommandInput, StartJobCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: StartJobCommandInput;
            constructor(input: StartJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartJobCommandInput, StartJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { TagResourceRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation tags a resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, TagResourceCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, TagResourceCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { UntagResourceRequest } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation removes one or more tags from a resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, UntagResourceCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, UntagResourceCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { UpdateAssetRequest, UpdateAssetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface UpdateAssetCommandInput extends UpdateAssetRequest {
    }
    export interface UpdateAssetCommandOutput extends UpdateAssetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation updates an asset.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, UpdateAssetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, UpdateAssetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new UpdateAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAssetCommandInput} for command's `input` shape.
        * @see {@link UpdateAssetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class UpdateAssetCommand extends $Command<UpdateAssetCommandInput, UpdateAssetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: UpdateAssetCommandInput;
            constructor(input: UpdateAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAssetCommandInput, UpdateAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateDataSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { UpdateDataSetRequest, UpdateDataSetResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface UpdateDataSetCommandInput extends UpdateDataSetRequest {
    }
    export interface UpdateDataSetCommandOutput extends UpdateDataSetResponse, __MetadataBearer {
    }
    /**
        * <p>This operation updates a data set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, UpdateDataSetCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, UpdateDataSetCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new UpdateDataSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDataSetCommandInput} for command's `input` shape.
        * @see {@link UpdateDataSetCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class UpdateDataSetCommand extends $Command<UpdateDataSetCommandInput, UpdateDataSetCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: UpdateDataSetCommandInput;
            constructor(input: UpdateDataSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDataSetCommandInput, UpdateDataSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateEventActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { UpdateEventActionRequest, UpdateEventActionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface UpdateEventActionCommandInput extends UpdateEventActionRequest {
    }
    export interface UpdateEventActionCommandOutput extends UpdateEventActionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation updates the event action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, UpdateEventActionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, UpdateEventActionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new UpdateEventActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEventActionCommandInput} for command's `input` shape.
        * @see {@link UpdateEventActionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class UpdateEventActionCommand extends $Command<UpdateEventActionCommandInput, UpdateEventActionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: UpdateEventActionCommandInput;
            constructor(input: UpdateEventActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEventActionCommandInput, UpdateEventActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateRevisionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient";
    import { UpdateRevisionRequest, UpdateRevisionResponse } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0";
    export interface UpdateRevisionCommandInput extends UpdateRevisionRequest {
    }
    export interface UpdateRevisionCommandOutput extends UpdateRevisionResponse, __MetadataBearer {
    }
    /**
        * <p>This operation updates a revision.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DataExchangeClient, UpdateRevisionCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
        * // const { DataExchangeClient, UpdateRevisionCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
        * const client = new DataExchangeClient(config);
        * const command = new UpdateRevisionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRevisionCommandInput} for command's `input` shape.
        * @see {@link UpdateRevisionCommandOutput} for command's `response` shape.
        * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
        *
        */
    export class UpdateRevisionCommand extends $Command<UpdateRevisionCommandInput, UpdateRevisionCommandOutput, DataExchangeClientResolvedConfig> {
            readonly input: UpdateRevisionCommandInput;
            constructor(input: UpdateRevisionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRevisionCommandInput, UpdateRevisionCommandOutput>;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/DataExchangeClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CancelJobCommandInput, CancelJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CancelJobCommand";
    import { CreateDataSetCommandInput, CreateDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateDataSetCommand";
    import { CreateEventActionCommandInput, CreateEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateEventActionCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateJobCommand";
    import { CreateRevisionCommandInput, CreateRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/CreateRevisionCommand";
    import { DeleteAssetCommandInput, DeleteAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteAssetCommand";
    import { DeleteDataSetCommandInput, DeleteDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteDataSetCommand";
    import { DeleteEventActionCommandInput, DeleteEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteEventActionCommand";
    import { DeleteRevisionCommandInput, DeleteRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/DeleteRevisionCommand";
    import { GetAssetCommandInput, GetAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetAssetCommand";
    import { GetDataSetCommandInput, GetDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetDataSetCommand";
    import { GetEventActionCommandInput, GetEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetEventActionCommand";
    import { GetJobCommandInput, GetJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetJobCommand";
    import { GetRevisionCommandInput, GetRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/GetRevisionCommand";
    import { ListDataSetRevisionsCommandInput, ListDataSetRevisionsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetRevisionsCommand";
    import { ListDataSetsCommandInput, ListDataSetsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListDataSetsCommand";
    import { ListEventActionsCommandInput, ListEventActionsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListEventActionsCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListJobsCommand";
    import { ListRevisionAssetsCommandInput, ListRevisionAssetsCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListRevisionAssetsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/ListTagsForResourceCommand";
    import { RevokeRevisionCommandInput, RevokeRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/RevokeRevisionCommand";
    import { SendApiAssetCommandInput, SendApiAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/SendApiAssetCommand";
    import { StartJobCommandInput, StartJobCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/StartJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UntagResourceCommand";
    import { UpdateAssetCommandInput, UpdateAssetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateAssetCommand";
    import { UpdateDataSetCommandInput, UpdateDataSetCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateDataSetCommand";
    import { UpdateEventActionCommandInput, UpdateEventActionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateEventActionCommand";
    import { UpdateRevisionCommandInput, UpdateRevisionCommandOutput } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/commands/UpdateRevisionCommand";
    export type ServiceInputTypes = CancelJobCommandInput | CreateDataSetCommandInput | CreateEventActionCommandInput | CreateJobCommandInput | CreateRevisionCommandInput | DeleteAssetCommandInput | DeleteDataSetCommandInput | DeleteEventActionCommandInput | DeleteRevisionCommandInput | GetAssetCommandInput | GetDataSetCommandInput | GetEventActionCommandInput | GetJobCommandInput | GetRevisionCommandInput | ListDataSetRevisionsCommandInput | ListDataSetsCommandInput | ListEventActionsCommandInput | ListJobsCommandInput | ListRevisionAssetsCommandInput | ListTagsForResourceCommandInput | RevokeRevisionCommandInput | SendApiAssetCommandInput | StartJobCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAssetCommandInput | UpdateDataSetCommandInput | UpdateEventActionCommandInput | UpdateRevisionCommandInput;
    export type ServiceOutputTypes = CancelJobCommandOutput | CreateDataSetCommandOutput | CreateEventActionCommandOutput | CreateJobCommandOutput | CreateRevisionCommandOutput | DeleteAssetCommandOutput | DeleteDataSetCommandOutput | DeleteEventActionCommandOutput | DeleteRevisionCommandOutput | GetAssetCommandOutput | GetDataSetCommandOutput | GetEventActionCommandOutput | GetJobCommandOutput | GetRevisionCommandOutput | ListDataSetRevisionsCommandOutput | ListDataSetsCommandOutput | ListEventActionsCommandOutput | ListJobsCommandOutput | ListRevisionAssetsCommandOutput | ListTagsForResourceCommandOutput | RevokeRevisionCommandOutput | SendApiAssetCommandOutput | StartJobCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAssetCommandOutput | UpdateDataSetCommandOutput | UpdateEventActionCommandOutput | UpdateRevisionCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type DataExchangeClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of DataExchangeClient class constructor that set the region, credentials and other options.
        */
    export interface DataExchangeClientConfig extends DataExchangeClientConfigType {
    }
    type DataExchangeClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of DataExchangeClient class. This is resolved and normalized from the {@link DataExchangeClientConfig | constructor configuration interface}.
        */
    export interface DataExchangeClientResolvedConfig extends DataExchangeClientResolvedConfigType {
    }
    /**
        * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p><p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIS to download or copy your entitled data sets to Amazon S3 for use across a variety of AWS analytics and machine learning services.</p><p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the AWS Data Exchange User Guide.</p><p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set.  A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
        */
    export class DataExchangeClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, DataExchangeClientResolvedConfig> {
            /**
                * The resolved configuration of DataExchangeClient class. This is resolved and normalized from the {@link DataExchangeClientConfig | constructor configuration interface}.
                */
            readonly config: DataExchangeClientResolvedConfig;
            constructor(configuration: DataExchangeClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { DataExchangeServiceException as __BaseException } from "@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/DataExchangeServiceException";
    /**
        * <p>Access to the resource is denied.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * <p>Access to the resource is denied.</p>
                */
            Message: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum ServerSideEncryptionTypes {
            AES256 = "AES256",
            aws_kms = "aws:kms"
    }
    /**
        * <p>Encryption configuration of the export job. Includes the encryption type in addition to the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption. type.</p>
        */
    export interface ExportServerSideEncryption {
            /**
                * <p>The Amazon Resource Name (ARN) of the AWS KMS key you want to use to encrypt the Amazon S3 objects. This parameter is required if you choose aws:kms as an encryption type.</p>
                */
            KmsKeyArn?: string;
            /**
                * <p>The type of server side encryption used for encrypting the objects in Amazon S3.</p>
                */
            Type: ServerSideEncryptionTypes | string | undefined;
    }
    export namespace ExportServerSideEncryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportServerSideEncryption) => any;
    }
    /**
        * <p>A revision destination is the Amazon S3 bucket folder destination to where the export will be sent.</p>
        */
    export interface AutoExportRevisionDestinationEntry {
            /**
                * <p>The S3 bucket that is the destination for the event action.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
                */
            KeyPattern?: string;
    }
    export namespace AutoExportRevisionDestinationEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AutoExportRevisionDestinationEntry) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface AutoExportRevisionToS3RequestDetails {
            /**
                * <p>Encryption configuration for the auto export job.</p>
                */
            Encryption?: ExportServerSideEncryption;
            /**
                * <p>A revision destination is the Amazon S3 bucket folder destination to where the export will be sent.</p>
                */
            RevisionDestination: AutoExportRevisionDestinationEntry | undefined;
    }
    export namespace AutoExportRevisionToS3RequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AutoExportRevisionToS3RequestDetails) => any;
    }
    /**
        * <p>What occurs after a certain event.</p>
        */
    export interface Action {
            /**
                * <p>Details for the export revision to Amazon S3 action.</p>
                */
            ExportRevisionToS3?: AutoExportRevisionToS3RequestDetails;
    }
    export namespace Action {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Action) => any;
    }
    export enum ProtocolType {
            REST = "REST"
    }
    /**
        * <p>The API Gateway API that is the asset.</p>
        */
    export interface ApiGatewayApiAsset {
            /**
                * <p>The API description of the API asset.</p>
                */
            ApiDescription?: string;
            /**
                * <p>The API endpoint of the API asset.</p>
                */
            ApiEndpoint?: string;
            /**
                * <p>The unique identifier of the API asset.</p>
                */
            ApiId?: string;
            /**
                * <p>The API key of the API asset.</p>
                */
            ApiKey?: string;
            /**
                * <p>The API name of the API asset.</p>
                */
            ApiName?: string;
            /**
                * <p>The download URL of the API specification of the API asset.</p>
                */
            ApiSpecificationDownloadUrl?: string;
            /**
                * <p>The date and time that the upload URL expires, in ISO 8601 format.</p>
                */
            ApiSpecificationDownloadUrlExpiresAt?: Date;
            /**
                * <p>The protocol type of the API asset.</p>
                */
            ProtocolType?: ProtocolType | string;
            /**
                * <p>The stage of the API asset.</p>
                */
            Stage?: string;
    }
    export namespace ApiGatewayApiAsset {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ApiGatewayApiAsset) => any;
    }
    /**
        * <p>The destination for the asset.</p>
        */
    export interface AssetDestinationEntry {
            /**
                * <p>The unique identifier for the asset.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The S3 bucket that is the destination for the asset.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>The name of the object in Amazon S3 for the asset.</p>
                */
            Key?: string;
    }
    export namespace AssetDestinationEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetDestinationEntry) => any;
    }
    /**
        * The Amazon Redshift datashare asset.
        */
    export interface RedshiftDataShareAsset {
            /**
                * The Amazon Resource Name (ARN) of the datashare asset.
                */
            Arn: string | undefined;
    }
    export namespace RedshiftDataShareAsset {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedshiftDataShareAsset) => any;
    }
    /**
        * <p>The S3 object that is the asset.</p>
        */
    export interface S3SnapshotAsset {
            /**
                * <p>The size of the S3 object that is the object.</p>
                */
            Size: number | undefined;
    }
    export namespace S3SnapshotAsset {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3SnapshotAsset) => any;
    }
    /**
        * <p>Information about the asset.</p>
        */
    export interface AssetDetails {
            /**
                * <p>The S3 object that is the asset.</p>
                */
            S3SnapshotAsset?: S3SnapshotAsset;
            /**
                * <p>The Amazon Redshift datashare that is the asset.</p>
                */
            RedshiftDataShareAsset?: RedshiftDataShareAsset;
            /**
                * <p>Information about the API Gateway API asset.</p>
                */
            ApiGatewayApiAsset?: ApiGatewayApiAsset;
    }
    export namespace AssetDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetDetails) => any;
    }
    export enum AssetType {
            API_GATEWAY_API = "API_GATEWAY_API",
            REDSHIFT_DATA_SHARE = "REDSHIFT_DATA_SHARE",
            S3_SNAPSHOT = "S3_SNAPSHOT"
    }
    /**
        * <p>An asset in AWS Data Exchange is a piece of data (S3 object) or a means of fulfilling data (Amazon Redshift datashare or Amazon API Gateway API). The asset can be a structured data file, an image file, or some other data file that can be stored as an S3 object, an Amazon API Gateway API, or an Amazon Redshift datashare. When you create an import job for your files, API Gateway APIs, or Amazon Redshift datashares, you create an asset in AWS Data Exchange.</p>
        */
    export interface AssetEntry {
            /**
                * <p>The ARN for the asset.</p>
                */
            Arn: string | undefined;
            /**
                * <p>Information about the asset.</p>
                */
            AssetDetails: AssetDetails | undefined;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType: AssetType | string | undefined;
            /**
                * <p>The date and time that the asset was created, in ISO 8601 format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>The unique identifier for the data set associated with this asset.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for the asset.</p>
                */
            Id: string | undefined;
            /**
                * <p>The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key. When importing from Amazon API Gateway API, the API name is used as the asset name. When importing from Amazon Redshift, the datashare name is used as the asset name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this asset.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the asset was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt: Date | undefined;
    }
    export namespace AssetEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetEntry) => any;
    }
    /**
        * <p>The source of the assets.</p>
        */
    export interface AssetSourceEntry {
            /**
                * <p>The S3 bucket that's part of the source of the asset.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>The name of the object in Amazon S3 for the asset.</p>
                */
            Key: string | undefined;
    }
    export namespace AssetSourceEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetSourceEntry) => any;
    }
    export interface CancelJobRequest {
            /**
                * <p>The unique identifier for a job.</p>
                */
            JobId: string | undefined;
    }
    export namespace CancelJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelJobRequest) => any;
    }
    export enum ResourceType {
            ASSET = "ASSET",
            DATA_SET = "DATA_SET",
            EVENT_ACTION = "EVENT_ACTION",
            JOB = "JOB",
            REVISION = "REVISION"
    }
    /**
        * <p>The request couldn't be completed because it conflicted with the current state of the resource.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * <p>The request couldn't be completed because it conflicted with the current state of the resource.</p>
                */
            Message: string | undefined;
            /**
                * <p>The unique identifier for the resource with the conflict.</p>
                */
            ResourceId?: string;
            /**
                * <p>The type of the resource with the conflict.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * An exception occurred with the service.
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            /**
                * The message identifying the service exception that occurred.
                */
            Message: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The resource couldn't be found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * <p>The resource couldn't be found.</p>
                */
            Message: string | undefined;
            /**
                * <p>The unique identifier for the resource that couldn't be found.</p>
                */
            ResourceId?: string;
            /**
                * <p>The type of resource that couldn't be found.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The limit on the number of requests per second was exceeded.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * <p>The limit on the number of requests per second was exceeded.</p>
                */
            Message: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    export enum ExceptionCause {
            InsufficientS3BucketPolicy = "InsufficientS3BucketPolicy",
            S3AccessDenied = "S3AccessDenied"
    }
    /**
        * <p>The request was invalid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * <p>The message that informs you about what was invalid about the request.</p>
                */
            Message: string | undefined;
            /**
                * <p>The message that informs you about what the exception was.</p>
                */
            ExceptionCause?: ExceptionCause | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export enum Code {
            ACCESS_DENIED_EXCEPTION = "ACCESS_DENIED_EXCEPTION",
            INTERNAL_SERVER_EXCEPTION = "INTERNAL_SERVER_EXCEPTION",
            MALWARE_DETECTED = "MALWARE_DETECTED",
            MALWARE_SCAN_ENCRYPTED_FILE = "MALWARE_SCAN_ENCRYPTED_FILE",
            RESOURCE_NOT_FOUND_EXCEPTION = "RESOURCE_NOT_FOUND_EXCEPTION",
            SERVICE_QUOTA_EXCEEDED_EXCEPTION = "SERVICE_QUOTA_EXCEEDED_EXCEPTION",
            VALIDATION_EXCEPTION = "VALIDATION_EXCEPTION"
    }
    /**
        * <p>The request body for CreateDataSet.</p>
        */
    export interface CreateDataSetRequest {
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType: AssetType | string | undefined;
            /**
                * <p>A description for the data set. This value can be up to 16,348 characters long.</p>
                */
            Description: string | undefined;
            /**
                * <p>The name of the data set.</p>
                */
            Name: string | undefined;
            /**
                * <p>A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateDataSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDataSetRequest) => any;
    }
    export enum Origin {
            ENTITLED = "ENTITLED",
            OWNED = "OWNED"
    }
    /**
        * <p>Information about the origin of the data set.</p>
        */
    export interface OriginDetails {
            /**
                * <p>The product ID of the origin of the data set.</p>
                */
            ProductId: string | undefined;
    }
    export namespace OriginDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OriginDetails) => any;
    }
    export interface CreateDataSetResponse {
            /**
                * <p>The ARN for the data set.</p>
                */
            Arn?: string;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType?: AssetType | string;
            /**
                * <p>The date and time that the data set was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The description for the data set.</p>
                */
            Description?: string;
            /**
                * <p>The unique identifier for the data set.</p>
                */
            Id?: string;
            /**
                * <p>The name of the data set.</p>
                */
            Name?: string;
            /**
                * <p>A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</p>
                */
            Origin?: Origin | string;
            /**
                * <p>If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.</p>
                */
            OriginDetails?: OriginDetails;
            /**
                * <p>The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.</p>
                */
            SourceId?: string;
            /**
                * <p>The tags for the data set.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The date and time that the data set was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace CreateDataSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDataSetResponse) => any;
    }
    export enum LimitName {
            Amazon_API_Gateway_API_assets_per_revision = "Amazon API Gateway API assets per revision",
            Amazon_Redshift_datashare_assets_per_import_job_from_Redshift = "Amazon Redshift datashare assets per import job from Redshift",
            Amazon_Redshift_datashare_assets_per_revision = "Amazon Redshift datashare assets per revision",
            Asset_per_export_job_from_Amazon_S3 = "Asset per export job from Amazon S3",
            Asset_size_in_GB = "Asset size in GB",
            Assets_per_import_job_from_Amazon_S3 = "Assets per import job from Amazon S3",
            Assets_per_revision = "Assets per revision",
            Auto_export_event_actions_per_data_set = "Auto export event actions per data set",
            Concurrent_in_progress_jobs_to_export_assets_to_Amazon_S3 = "Concurrent in progress jobs to export assets to Amazon S3",
            Concurrent_in_progress_jobs_to_export_assets_to_a_signed_URL = "Concurrent in progress jobs to export assets to a signed URL",
            Concurrent_in_progress_jobs_to_export_revisions_to_Amazon_S3 = "Concurrent in progress jobs to export revisions to Amazon S3",
            Concurrent_in_progress_jobs_to_import_assets_from_Amazon_Redshift_datashares = "Concurrent in progress jobs to import assets from Amazon Redshift datashares",
            Concurrent_in_progress_jobs_to_import_assets_from_Amazon_S3 = "Concurrent in progress jobs to import assets from Amazon S3",
            Concurrent_in_progress_jobs_to_import_assets_from_a_signed_URL = "Concurrent in progress jobs to import assets from a signed URL",
            Concurrent_in_progress_jobs_to_import_assets_from_an_API_Gateway_API = "Concurrent in progress jobs to import assets from an API Gateway API",
            Data_sets_per_account = "Data sets per account",
            Data_sets_per_product = "Data sets per product",
            Event_actions_per_account = "Event actions per account",
            Products_per_account = "Products per account",
            Revisions_per_Amazon_API_Gateway_API_data_set = "Revisions per Amazon API Gateway API data set",
            Revisions_per_Amazon_Redshift_datashare_data_set = "Revisions per Amazon Redshift datashare data set",
            Revisions_per_data_set = "Revisions per data set"
    }
    /**
        * <p>The request has exceeded the quotas imposed by the service.</p>
        */
    export class ServiceLimitExceededException extends __BaseException {
            readonly name: "ServiceLimitExceededException";
            readonly $fault: "client";
            /**
                * <p>The name of the quota that was exceeded.</p>
                */
            LimitName?: LimitName | string;
            /**
                * <p>The maximum value for the service-specific limit.</p>
                */
            LimitValue?: number;
            /**
                * <p>The request has exceeded the quotas imposed by the service.</p>
                */
            Message: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceLimitExceededException, __BaseException>);
    }
    /**
        * <p>Information about the published revision.</p>
        */
    export interface RevisionPublished {
            /**
                * <p>The data set ID of the published revision.</p>
                */
            DataSetId: string | undefined;
    }
    export namespace RevisionPublished {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevisionPublished) => any;
    }
    /**
        * <p>What occurs to start an action.</p>
        */
    export interface Event {
            /**
                * <p>What occurs to start the revision publish action.</p>
                */
            RevisionPublished?: RevisionPublished;
    }
    export namespace Event {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Event) => any;
    }
    /**
        * <p>The request body for CreateEventAction.</p>
        */
    export interface CreateEventActionRequest {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action: Action | undefined;
            /**
                * <p>What occurs to start an action.</p>
                */
            Event: Event | undefined;
    }
    export namespace CreateEventActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEventActionRequest) => any;
    }
    export interface CreateEventActionResponse {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action?: Action;
            /**
                * <p>The ARN for the event action.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the event action was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>What occurs to start an action.</p>
                */
            Event?: Event;
            /**
                * <p>The unique identifier for the event action.</p>
                */
            Id?: string;
            /**
                * <p>The date and time that the event action was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace CreateEventActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEventActionResponse) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface ExportAssetsToS3RequestDetails {
            /**
                * <p>The destination for the asset.</p>
                */
            AssetDestinations: AssetDestinationEntry[] | undefined;
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Encryption configuration for the export job.</p>
                */
            Encryption?: ExportServerSideEncryption;
            /**
                * <p>The unique identifier for the revision associated with this export request.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ExportAssetsToS3RequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportAssetsToS3RequestDetails) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface ExportAssetToSignedUrlRequestDetails {
            /**
                * <p>The unique identifier for the asset that is exported to a signed URL.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this export request.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ExportAssetToSignedUrlRequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportAssetToSignedUrlRequestDetails) => any;
    }
    /**
        * <p>The destination where the assets in the revision will be exported.</p>
        */
    export interface RevisionDestinationEntry {
            /**
                * <p>The S3 bucket that is the destination for the assets in the revision.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
                */
            KeyPattern?: string;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace RevisionDestinationEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevisionDestinationEntry) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface ExportRevisionsToS3RequestDetails {
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Encryption configuration for the export job.</p>
                */
            Encryption?: ExportServerSideEncryption;
            /**
                * <p>The destination for the revision.</p>
                */
            RevisionDestinations: RevisionDestinationEntry[] | undefined;
    }
    export namespace ExportRevisionsToS3RequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportRevisionsToS3RequestDetails) => any;
    }
    /**
        * <p>The request details.</p>
        */
    export interface ImportAssetFromApiGatewayApiRequestDetails {
            /**
                * <p>The API description. Markdown supported.</p>
                */
            ApiDescription?: string;
            /**
                * <p>The API Gateway API ID.</p>
                */
            ApiId: string | undefined;
            /**
                * <p>The API Gateway API key.</p>
                */
            ApiKey?: string;
            /**
                * <p>The API name.</p>
                */
            ApiName: string | undefined;
            /**
                * <p>The Base64-encoded MD5 hash of the OpenAPI 3.0 JSON API specification file. It is used to ensure the integrity of the file.</p>
                */
            ApiSpecificationMd5Hash: string | undefined;
            /**
                * <p>The data set ID.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The protocol type.</p>
                */
            ProtocolType: ProtocolType | string | undefined;
            /**
                * <p>The revision ID.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>The API stage.</p>
                */
            Stage: string | undefined;
    }
    export namespace ImportAssetFromApiGatewayApiRequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetFromApiGatewayApiRequestDetails) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface ImportAssetFromSignedUrlRequestDetails {
            /**
                * <p>The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name.</p>
                */
            AssetName: string | undefined;
            /**
                * <p>The unique identifier for the data set associated with this import job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location.</p>
                */
            Md5Hash: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this import request.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ImportAssetFromSignedUrlRequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetFromSignedUrlRequestDetails) => any;
    }
    /**
        * <p>The source of the Amazon Redshift datashare asset.</p>
        */
    export interface RedshiftDataShareAssetSourceEntry {
            /**
                * The Amazon Resource Name (ARN) of the datashare asset.
                */
            DataShareArn: string | undefined;
    }
    export namespace RedshiftDataShareAssetSourceEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedshiftDataShareAssetSourceEntry) => any;
    }
    /**
        * Details from an import from Amazon Redshift datashare request.
        */
    export interface ImportAssetsFromRedshiftDataSharesRequestDetails {
            /**
                * A list of Amazon Redshift datashare assets.
                */
            AssetSources: RedshiftDataShareAssetSourceEntry[] | undefined;
            /**
                * The unique identifier for the data set associated with this import job.
                */
            DataSetId: string | undefined;
            /**
                * The unique identifier for the revision associated with this import job.
                */
            RevisionId: string | undefined;
    }
    export namespace ImportAssetsFromRedshiftDataSharesRequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetsFromRedshiftDataSharesRequestDetails) => any;
    }
    /**
        * <p>Details of the operation to be performed by the job.</p>
        */
    export interface ImportAssetsFromS3RequestDetails {
            /**
                * <p>Is a list of S3 bucket and object key pairs.</p>
                */
            AssetSources: AssetSourceEntry[] | undefined;
            /**
                * <p>The unique identifier for the data set associated with this import job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this import request.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ImportAssetsFromS3RequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetsFromS3RequestDetails) => any;
    }
    /**
        * <p>The details for the request.</p>
        */
    export interface RequestDetails {
            /**
                * <p>Details about the export to signed URL request.</p>
                */
            ExportAssetToSignedUrl?: ExportAssetToSignedUrlRequestDetails;
            /**
                * <p>Details about the export to Amazon S3 request.</p>
                */
            ExportAssetsToS3?: ExportAssetsToS3RequestDetails;
            /**
                * <p>Details about the export to Amazon S3 request.</p>
                */
            ExportRevisionsToS3?: ExportRevisionsToS3RequestDetails;
            /**
                * <p>Details about the import from signed URL request.</p>
                */
            ImportAssetFromSignedUrl?: ImportAssetFromSignedUrlRequestDetails;
            /**
                * <p>Details about the import from Amazon S3 request.</p>
                */
            ImportAssetsFromS3?: ImportAssetsFromS3RequestDetails;
            /**
                * <p>Details from an import from Amazon Redshift datashare request.</p>
                */
            ImportAssetsFromRedshiftDataShares?: ImportAssetsFromRedshiftDataSharesRequestDetails;
            /**
                * <p>Information about the import asset from API Gateway API request.</p>
                */
            ImportAssetFromApiGatewayApi?: ImportAssetFromApiGatewayApiRequestDetails;
    }
    export namespace RequestDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RequestDetails) => any;
    }
    export enum Type {
            EXPORT_ASSETS_TO_S3 = "EXPORT_ASSETS_TO_S3",
            EXPORT_ASSET_TO_SIGNED_URL = "EXPORT_ASSET_TO_SIGNED_URL",
            EXPORT_REVISIONS_TO_S3 = "EXPORT_REVISIONS_TO_S3",
            IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES = "IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES",
            IMPORT_ASSETS_FROM_S3 = "IMPORT_ASSETS_FROM_S3",
            IMPORT_ASSET_FROM_API_GATEWAY_API = "IMPORT_ASSET_FROM_API_GATEWAY_API",
            IMPORT_ASSET_FROM_SIGNED_URL = "IMPORT_ASSET_FROM_SIGNED_URL"
    }
    /**
        * <p>The request body for CreateJob.</p>
        */
    export interface CreateJobRequest {
            /**
                * <p>The details for the CreateJob request.</p>
                */
            Details: RequestDetails | undefined;
            /**
                * <p>The type of job to be created.</p>
                */
            Type: Type | string | undefined;
    }
    export namespace CreateJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobRequest) => any;
    }
    /**
        * <p>Details about the export to Amazon S3 response.</p>
        */
    export interface ExportAssetsToS3ResponseDetails {
            /**
                * <p>The destination in Amazon S3 where the asset is exported.</p>
                */
            AssetDestinations: AssetDestinationEntry[] | undefined;
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Encryption configuration of the export job.</p>
                */
            Encryption?: ExportServerSideEncryption;
            /**
                * <p>The unique identifier for the revision associated with this export response.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ExportAssetsToS3ResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportAssetsToS3ResponseDetails) => any;
    }
    /**
        * <p>The details of the export to signed URL response.</p>
        */
    export interface ExportAssetToSignedUrlResponseDetails {
            /**
                * <p>The unique identifier for the asset associated with this export job.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this export response.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>The signed URL for the export request.</p>
                */
            SignedUrl?: string;
            /**
                * <p>The date and time that the signed URL expires, in ISO 8601 format.</p>
                */
            SignedUrlExpiresAt?: Date;
    }
    export namespace ExportAssetToSignedUrlResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportAssetToSignedUrlResponseDetails) => any;
    }
    /**
        * <p>Details about the export revisions to Amazon S3 response.</p>
        */
    export interface ExportRevisionsToS3ResponseDetails {
            /**
                * <p>The unique identifier for the data set associated with this export job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Encryption configuration of the export job.</p>
                */
            Encryption?: ExportServerSideEncryption;
            /**
                * <p>The destination in Amazon S3 where the revision is exported.</p>
                */
            RevisionDestinations: RevisionDestinationEntry[] | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the event action.</p>
                */
            EventActionArn?: string;
    }
    export namespace ExportRevisionsToS3ResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportRevisionsToS3ResponseDetails) => any;
    }
    /**
        * <p>The response details.</p>
        */
    export interface ImportAssetFromApiGatewayApiResponseDetails {
            /**
                * <p>The API description.</p>
                */
            ApiDescription?: string;
            /**
                * <p>The API ID.</p>
                */
            ApiId: string | undefined;
            /**
                * <p>The API key.</p>
                */
            ApiKey?: string;
            /**
                * <p>The API name.</p>
                */
            ApiName: string | undefined;
            /**
                * <p>The Base64-encoded Md5 hash for the API asset, used to ensure the integrity of the API at that location.</p>
                */
            ApiSpecificationMd5Hash: string | undefined;
            /**
                * <p>The upload URL of the API specification.</p>
                */
            ApiSpecificationUploadUrl: string | undefined;
            /**
                * <p>The date and time that the upload URL expires, in ISO 8601 format.</p>
                */
            ApiSpecificationUploadUrlExpiresAt: Date | undefined;
            /**
                * <p>The data set ID.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The protocol type.</p>
                */
            ProtocolType: ProtocolType | string | undefined;
            /**
                * <p>The revision ID.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>The API stage.</p>
                */
            Stage: string | undefined;
    }
    export namespace ImportAssetFromApiGatewayApiResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetFromApiGatewayApiResponseDetails) => any;
    }
    /**
        * <p>The details in the response for an import request, including the signed URL and other information.</p>
        */
    export interface ImportAssetFromSignedUrlResponseDetails {
            /**
                * <p>The name for the asset associated with this import job.</p>
                */
            AssetName: string | undefined;
            /**
                * <p>The unique identifier for the data set associated with this import job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location.</p>
                */
            Md5Hash?: string;
            /**
                * <p>The unique identifier for the revision associated with this import response.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>The signed URL.</p>
                */
            SignedUrl?: string;
            /**
                * <p>The time and date at which the signed URL expires, in ISO 8601 format.</p>
                */
            SignedUrlExpiresAt?: Date;
    }
    export namespace ImportAssetFromSignedUrlResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetFromSignedUrlResponseDetails) => any;
    }
    /**
        * Details from an import from Amazon Redshift datashare response.
        */
    export interface ImportAssetsFromRedshiftDataSharesResponseDetails {
            /**
                * A list of Amazon Redshift datashare asset sources.
                */
            AssetSources: RedshiftDataShareAssetSourceEntry[] | undefined;
            /**
                * The unique identifier for the data set associated with this import job.
                */
            DataSetId: string | undefined;
            /**
                * The unique identifier for the revision associated with this import job.
                */
            RevisionId: string | undefined;
    }
    export namespace ImportAssetsFromRedshiftDataSharesResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetsFromRedshiftDataSharesResponseDetails) => any;
    }
    /**
        * <p>Details from an import from Amazon S3 response.</p>
        */
    export interface ImportAssetsFromS3ResponseDetails {
            /**
                * <p>Is a list of Amazon S3 bucket and object key pairs.</p>
                */
            AssetSources: AssetSourceEntry[] | undefined;
            /**
                * <p>The unique identifier for the data set associated with this import job.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for the revision associated with this import response.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ImportAssetsFromS3ResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetsFromS3ResponseDetails) => any;
    }
    /**
        * <p>Details for the response.</p>
        */
    export interface ResponseDetails {
            /**
                * <p>Details for the export to signed URL response.</p>
                */
            ExportAssetToSignedUrl?: ExportAssetToSignedUrlResponseDetails;
            /**
                * <p>Details for the export to Amazon S3 response.</p>
                */
            ExportAssetsToS3?: ExportAssetsToS3ResponseDetails;
            /**
                * <p>Details for the export revisions to Amazon S3 response.</p>
                */
            ExportRevisionsToS3?: ExportRevisionsToS3ResponseDetails;
            /**
                * <p>Details for the import from signed URL response.</p>
                */
            ImportAssetFromSignedUrl?: ImportAssetFromSignedUrlResponseDetails;
            /**
                * <p>Details for the import from Amazon S3 response.</p>
                */
            ImportAssetsFromS3?: ImportAssetsFromS3ResponseDetails;
            /**
                * <p>Details from an import from Amazon Redshift datashare response.</p>
                */
            ImportAssetsFromRedshiftDataShares?: ImportAssetsFromRedshiftDataSharesResponseDetails;
            /**
                * <p>The response details.</p>
                */
            ImportAssetFromApiGatewayApi?: ImportAssetFromApiGatewayApiResponseDetails;
    }
    export namespace ResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResponseDetails) => any;
    }
    /**
        * <p>Information about the job error.</p>
        */
    export interface ImportAssetFromSignedUrlJobErrorDetails {
            /**
                * <p>Information about the job error.</p>
                */
            AssetName: string | undefined;
    }
    export namespace ImportAssetFromSignedUrlJobErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAssetFromSignedUrlJobErrorDetails) => any;
    }
    /**
        * <p>Information about the job error.</p>
        */
    export interface Details {
            /**
                * <p>Information about the job error.</p>
                */
            ImportAssetFromSignedUrlJobErrorDetails?: ImportAssetFromSignedUrlJobErrorDetails;
            /**
                * <p>Information about the job error.</p>
                */
            ImportAssetsFromS3JobErrorDetails?: AssetSourceEntry[];
    }
    export namespace Details {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Details) => any;
    }
    export enum JobErrorLimitName {
            Amazon_Redshift_datashare_assets_per_revision = "Amazon Redshift datashare assets per revision",
            Asset_size_in_GB = "Asset size in GB",
            Assets_per_revision = "Assets per revision"
    }
    export enum JobErrorResourceTypes {
            ASSET = "ASSET",
            DATA_SET = "DATA_SET",
            REVISION = "REVISION"
    }
    /**
        * An error that occurred with the job request.
        */
    export interface JobError {
            /**
                * The code for the job error.
                */
            Code: Code | string | undefined;
            /**
                * <p>The details about the job error.</p>
                */
            Details?: Details;
            /**
                * <p>The name of the limit that was reached.</p>
                */
            LimitName?: JobErrorLimitName | string;
            /**
                * The value of the exceeded limit.
                */
            LimitValue?: number;
            /**
                * The message related to the job error.
                */
            Message: string | undefined;
            /**
                * The unique identifier for the resource related to the error.
                */
            ResourceId?: string;
            /**
                * The type of resource related to the error.
                */
            ResourceType?: JobErrorResourceTypes | string;
    }
    export namespace JobError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobError) => any;
    }
    export enum State {
            CANCELLED = "CANCELLED",
            COMPLETED = "COMPLETED",
            ERROR = "ERROR",
            IN_PROGRESS = "IN_PROGRESS",
            TIMED_OUT = "TIMED_OUT",
            WAITING = "WAITING"
    }
    export interface CreateJobResponse {
            /**
                * <p>The ARN for the job.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the job was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>Details about the job.</p>
                */
            Details?: ResponseDetails;
            /**
                * <p>The errors associated with jobs.</p>
                */
            Errors?: JobError[];
            /**
                * <p>The unique identifier for the job.</p>
                */
            Id?: string;
            /**
                * <p>The state of the job.</p>
                */
            State?: State | string;
            /**
                * <p>The job type.</p>
                */
            Type?: Type | string;
            /**
                * <p>The date and time that the job was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace CreateJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobResponse) => any;
    }
    /**
        * <p>The request body for CreateRevision.</p>
        */
    export interface CreateRevisionRequest {
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateRevisionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRevisionRequest) => any;
    }
    export interface CreateRevisionResponse {
            /**
                * <p>The ARN for the revision.</p>
                */
            Arn?: string;
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The date and time that the revision was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this revision.</p>
                */
            DataSetId?: string;
            /**
                * <p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            Id?: string;
            /**
                * <p>The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.</p>
                */
            SourceId?: string;
            /**
                * <p>The tags for the revision.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The date and time that the revision was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment?: string;
            /**
                * <p>A status indicating that subscribers' access to the revision was revoked.</p>
                */
            Revoked?: boolean;
            /**
                * <p>The date and time that the revision was revoked, in ISO 8601 format.</p>
                */
            RevokedAt?: Date;
    }
    export namespace CreateRevisionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRevisionResponse) => any;
    }
    export interface DeleteAssetRequest {
            /**
                * <p>The unique identifier for an asset.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace DeleteAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssetRequest) => any;
    }
    export interface DeleteDataSetRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
    }
    export namespace DeleteDataSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDataSetRequest) => any;
    }
    export interface DeleteEventActionRequest {
            /**
                * <p>The unique identifier for the event action.</p>
                */
            EventActionId: string | undefined;
    }
    export namespace DeleteEventActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEventActionRequest) => any;
    }
    export interface DeleteRevisionRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace DeleteRevisionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRevisionRequest) => any;
    }
    export interface GetAssetRequest {
            /**
                * <p>The unique identifier for an asset.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace GetAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetRequest) => any;
    }
    export interface GetAssetResponse {
            /**
                * <p>The ARN for the asset.</p>
                */
            Arn?: string;
            /**
                * <p>Information about the asset.</p>
                */
            AssetDetails?: AssetDetails;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType?: AssetType | string;
            /**
                * <p>The date and time that the asset was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this asset.</p>
                */
            DataSetId?: string;
            /**
                * <p>The unique identifier for the asset.</p>
                */
            Id?: string;
            /**
                * <p>The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key. When importing from Amazon API Gateway API, the API name is used as the asset name. When importing from Amazon Redshift, the datashare name is used as the asset name.</p>
                */
            Name?: string;
            /**
                * <p>The unique identifier for the revision associated with this asset.</p>
                */
            RevisionId?: string;
            /**
                * <p>The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the asset was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace GetAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetResponse) => any;
    }
    export interface GetDataSetRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
    }
    export namespace GetDataSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDataSetRequest) => any;
    }
    export interface GetDataSetResponse {
            /**
                * <p>The ARN for the data set.</p>
                */
            Arn?: string;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType?: AssetType | string;
            /**
                * <p>The date and time that the data set was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The description for the data set.</p>
                */
            Description?: string;
            /**
                * <p>The unique identifier for the data set.</p>
                */
            Id?: string;
            /**
                * <p>The name of the data set.</p>
                */
            Name?: string;
            /**
                * <p>A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</p>
                */
            Origin?: Origin | string;
            /**
                * <p>If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.</p>
                */
            OriginDetails?: OriginDetails;
            /**
                * <p>The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.</p>
                */
            SourceId?: string;
            /**
                * <p>The tags for the data set.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The date and time that the data set was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace GetDataSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDataSetResponse) => any;
    }
    export interface GetEventActionRequest {
            /**
                * <p>The unique identifier for the event action.</p>
                */
            EventActionId: string | undefined;
    }
    export namespace GetEventActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEventActionRequest) => any;
    }
    export interface GetEventActionResponse {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action?: Action;
            /**
                * <p>The ARN for the event action.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the event action was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>What occurs to start an action.</p>
                */
            Event?: Event;
            /**
                * <p>The unique identifier for the event action.</p>
                */
            Id?: string;
            /**
                * <p>The date and time that the event action was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace GetEventActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEventActionResponse) => any;
    }
    export interface GetJobRequest {
            /**
                * <p>The unique identifier for a job.</p>
                */
            JobId: string | undefined;
    }
    export namespace GetJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobRequest) => any;
    }
    export interface GetJobResponse {
            /**
                * <p>The ARN for the job.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the job was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>Details about the job.</p>
                */
            Details?: ResponseDetails;
            /**
                * <p>The errors associated with jobs.</p>
                */
            Errors?: JobError[];
            /**
                * <p>The unique identifier for the job.</p>
                */
            Id?: string;
            /**
                * <p>The state of the job.</p>
                */
            State?: State | string;
            /**
                * <p>The job type.</p>
                */
            Type?: Type | string;
            /**
                * <p>The date and time that the job was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace GetJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobResponse) => any;
    }
    export interface GetRevisionRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace GetRevisionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRevisionRequest) => any;
    }
    export interface GetRevisionResponse {
            /**
                * <p>The ARN for the revision.</p>
                */
            Arn?: string;
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The date and time that the revision was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this revision.</p>
                */
            DataSetId?: string;
            /**
                * <p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            Id?: string;
            /**
                * <p>The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.</p>
                */
            SourceId?: string;
            /**
                * <p>The tags for the revision.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The date and time that the revision was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment?: string;
            /**
                * <p>A status indicating that subscribers' access to the revision was revoked.</p>
                */
            Revoked?: boolean;
            /**
                * <p>The date and time that the revision was revoked, in ISO 8601 format.</p>
                */
            RevokedAt?: Date;
    }
    export namespace GetRevisionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRevisionResponse) => any;
    }
    export interface ListDataSetRevisionsRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The maximum number of results returned by a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListDataSetRevisionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDataSetRevisionsRequest) => any;
    }
    /**
        * <p>A revision is a container for one or more assets.</p>
        */
    export interface RevisionEntry {
            /**
                * <p>The ARN for the revision.</p>
                */
            Arn: string | undefined;
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The date and time that the revision was created, in ISO 8601 format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>The unique identifier for the data set associated with this revision.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            Id: string | undefined;
            /**
                * <p>The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the revision was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt: Date | undefined;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment?: string;
            /**
                * <p>A status indicating that subscribers' access to the revision was revoked.</p>
                */
            Revoked?: boolean;
            /**
                * <p>The date and time that the revision was revoked, in ISO 8601 format.</p>
                */
            RevokedAt?: Date;
    }
    export namespace RevisionEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevisionEntry) => any;
    }
    export interface ListDataSetRevisionsResponse {
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The asset objects listed by the request.</p>
                */
            Revisions?: RevisionEntry[];
    }
    export namespace ListDataSetRevisionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDataSetRevisionsResponse) => any;
    }
    export interface ListDataSetsRequest {
            /**
                * <p>The maximum number of results returned by a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</p>
                */
            Origin?: string;
    }
    export namespace ListDataSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDataSetsRequest) => any;
    }
    /**
        * <p>A data set is an AWS resource with one or more revisions.</p>
        */
    export interface DataSetEntry {
            /**
                * <p>The ARN for the data set.</p>
                */
            Arn: string | undefined;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType: AssetType | string | undefined;
            /**
                * <p>The date and time that the data set was created, in ISO 8601 format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>The description for the data set.</p>
                */
            Description: string | undefined;
            /**
                * <p>The unique identifier for the data set.</p>
                */
            Id: string | undefined;
            /**
                * <p>The name of the data set.</p>
                */
            Name: string | undefined;
            /**
                * <p>A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</p>
                */
            Origin: Origin | string | undefined;
            /**
                * <p>If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.</p>
                */
            OriginDetails?: OriginDetails;
            /**
                * <p>The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the data set was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt: Date | undefined;
    }
    export namespace DataSetEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DataSetEntry) => any;
    }
    export interface ListDataSetsResponse {
            /**
                * <p>The data set objects listed by the request.</p>
                */
            DataSets?: DataSetEntry[];
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListDataSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDataSetsResponse) => any;
    }
    export interface ListEventActionsRequest {
            /**
                * <p>The unique identifier for the event source.</p>
                */
            EventSourceId?: string;
            /**
                * <p>The maximum number of results returned by a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListEventActionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEventActionsRequest) => any;
    }
    /**
        * <p>An event action is an object that defines the relationship between a specific event and an automated action that will be taken on behalf of the customer.</p>
        */
    export interface EventActionEntry {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action: Action | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the event action.</p>
                */
            Arn: string | undefined;
            /**
                * <p>The date and time that the event action was created, in ISO 8601 format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>What occurs to start an action.</p>
                */
            Event: Event | undefined;
            /**
                * <p>The unique identifier for the event action.</p>
                */
            Id: string | undefined;
            /**
                * <p>The date and time that the event action was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt: Date | undefined;
    }
    export namespace EventActionEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventActionEntry) => any;
    }
    export interface ListEventActionsResponse {
            /**
                * <p>The event action objects listed by the request.</p>
                */
            EventActions?: EventActionEntry[];
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListEventActionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEventActionsResponse) => any;
    }
    export interface ListJobsRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId?: string;
            /**
                * <p>The maximum number of results returned by a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId?: string;
    }
    export namespace ListJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsRequest) => any;
    }
    /**
        * AWS Data Exchange Jobs are asynchronous import or export operations used to create or copy assets. A data set owner can both import and export as they see fit. Someone with an entitlement to a data set can only export. Jobs are deleted 90 days after they are created.
        */
    export interface JobEntry {
            /**
                * <p>The ARN for the job.</p>
                */
            Arn: string | undefined;
            /**
                * <p>The date and time that the job was created, in ISO 8601 format.</p>
                */
            CreatedAt: Date | undefined;
            /**
                * <p>Details of the operation to be performed by the job, such as export destination details or import source details.</p>
                */
            Details: ResponseDetails | undefined;
            /**
                * <p>Errors for jobs.</p>
                */
            Errors?: JobError[];
            /**
                * <p>The unique identifier for the job.</p>
                */
            Id: string | undefined;
            /**
                * <p>The state of the job.</p>
                */
            State: State | string | undefined;
            /**
                * <p>The job type.</p>
                */
            Type: Type | string | undefined;
            /**
                * <p>The date and time that the job was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt: Date | undefined;
    }
    export namespace JobEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobEntry) => any;
    }
    export interface ListJobsResponse {
            /**
                * <p>The jobs listed by the request.</p>
                */
            Jobs?: JobEntry[];
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsResponse) => any;
    }
    export interface ListRevisionAssetsRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The maximum number of results returned by a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace ListRevisionAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRevisionAssetsRequest) => any;
    }
    export interface ListRevisionAssetsResponse {
            /**
                * <p>The asset objects listed by the request.</p>
                */
            Assets?: AssetEntry[];
            /**
                * <p>The token value retrieved from a previous call to access the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRevisionAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRevisionAssetsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * A label that consists of a customer-defined key and an optional value.
                */
            Tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    /**
        * <p>The request body for RevokeRevision.</p>
        */
    export interface RevokeRevisionRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment: string | undefined;
    }
    export namespace RevokeRevisionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevokeRevisionRequest) => any;
    }
    export interface RevokeRevisionResponse {
            /**
                * <p>The ARN for the revision.</p>
                */
            Arn?: string;
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The date and time that the revision was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this revision.</p>
                */
            DataSetId?: string;
            /**
                * <p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            Id?: string;
            /**
                * <p>The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the revision was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment?: string;
            /**
                * <p>A status indicating that subscribers' access to the revision was revoked.</p>
                */
            Revoked?: boolean;
            /**
                * <p>The date and time that the revision was revoked, in ISO 8601 format.</p>
                */
            RevokedAt?: Date;
    }
    export namespace RevokeRevisionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevokeRevisionResponse) => any;
    }
    /**
        * <p>The request body for SendApiAsset.</p>
        */
    export interface SendApiAssetRequest {
            /**
                * <p>The request body.</p>
                */
            Body?: string;
            /**
                * <p>Attach query string parameters to the end of the URI (for example, /v1/examplePath?exampleParam=exampleValue).</p>
                */
            QueryStringParameters?: Record<string, string>;
            /**
                * <p>Asset ID value for the API request.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>Data set ID value for the API request.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Any header value prefixed with x-amzn-dataexchange-header- will have that stripped before sending the Asset API request. Use this when you want to override a header that AWS Data Exchange uses. Alternatively, you can use the header without a prefix to the HTTP request.</p>
                */
            RequestHeaders?: Record<string, string>;
            /**
                * <p>HTTP method value for the API request. Alternatively, you can use the appropriate verb in your request.</p>
                */
            Method?: string;
            /**
                * <p>URI path value for the API request. Alternatively, you can set the URI path directly by invoking /v1/{pathValue}</p>
                */
            Path?: string;
            /**
                * <p>Revision ID value for the API request.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace SendApiAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendApiAssetRequest) => any;
    }
    export interface SendApiAssetResponse {
            /**
                * <p>The response body from the underlying API tracked by the API asset.</p>
                */
            Body?: string;
            /**
                * <p>The response headers from the underlying API tracked by the API asset.</p>
                */
            ResponseHeaders?: Record<string, string>;
    }
    export namespace SendApiAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendApiAssetResponse) => any;
    }
    export interface StartJobRequest {
            /**
                * <p>The unique identifier for a job.</p>
                */
            JobId: string | undefined;
    }
    export namespace StartJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartJobRequest) => any;
    }
    export interface StartJobResponse {
    }
    export namespace StartJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartJobResponse) => any;
    }
    /**
        * <p>The request body for TagResource.</p>
        */
    export interface TagResourceRequest {
            /**
                * <p>An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</p>
                */
            ResourceArn: string | undefined;
            /**
                * A label that consists of a customer-defined key and an optional value.
                */
            Tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</p>
                */
            ResourceArn: string | undefined;
            /**
                * The key tags.
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    /**
        * <p>The request body for UpdateAsset.</p>
        */
    export interface UpdateAssetRequest {
            /**
                * <p>The unique identifier for an asset.</p>
                */
            AssetId: string | undefined;
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key. When importing from Amazon API Gateway API, the API name is used as the asset name. When importing from Amazon Redshift, the datashare name is used as the asset name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace UpdateAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetRequest) => any;
    }
    export interface UpdateAssetResponse {
            /**
                * <p>The ARN for the asset.</p>
                */
            Arn?: string;
            /**
                * <p>Information about the asset.</p>
                */
            AssetDetails?: AssetDetails;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType?: AssetType | string;
            /**
                * <p>The date and time that the asset was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this asset.</p>
                */
            DataSetId?: string;
            /**
                * <p>The unique identifier for the asset.</p>
                */
            Id?: string;
            /**
                * <p>The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key. When importing from Amazon API Gateway API, the API name is used as the asset name. When importing from Amazon Redshift, the datashare name is used as the asset name.</p>
                */
            Name?: string;
            /**
                * <p>The unique identifier for the revision associated with this asset.</p>
                */
            RevisionId?: string;
            /**
                * <p>The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the asset was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace UpdateAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetResponse) => any;
    }
    /**
        * <p>The request body for UpdateDataSet.</p>
        */
    export interface UpdateDataSetRequest {
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>The description for the data set.</p>
                */
            Description?: string;
            /**
                * <p>The name of the data set.</p>
                */
            Name?: string;
    }
    export namespace UpdateDataSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDataSetRequest) => any;
    }
    export interface UpdateDataSetResponse {
            /**
                * <p>The ARN for the data set.</p>
                */
            Arn?: string;
            /**
                * <p>The type of asset that is added to a data set.</p>
                */
            AssetType?: AssetType | string;
            /**
                * <p>The date and time that the data set was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The description for the data set.</p>
                */
            Description?: string;
            /**
                * <p>The unique identifier for the data set.</p>
                */
            Id?: string;
            /**
                * <p>The name of the data set.</p>
                */
            Name?: string;
            /**
                * <p>A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</p>
                */
            Origin?: Origin | string;
            /**
                * <p>If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.</p>
                */
            OriginDetails?: OriginDetails;
            /**
                * <p>The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the data set was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace UpdateDataSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDataSetResponse) => any;
    }
    /**
        * <p>The request body for UpdateEventAction.</p>
        */
    export interface UpdateEventActionRequest {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action?: Action;
            /**
                * <p>The unique identifier for the event action.</p>
                */
            EventActionId: string | undefined;
    }
    export namespace UpdateEventActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEventActionRequest) => any;
    }
    export interface UpdateEventActionResponse {
            /**
                * <p>What occurs after a certain event.</p>
                */
            Action?: Action;
            /**
                * <p>The ARN for the event action.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the event action was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>What occurs to start an action.</p>
                */
            Event?: Event;
            /**
                * <p>The unique identifier for the event action.</p>
                */
            Id?: string;
            /**
                * <p>The date and time that the event action was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
    }
    export namespace UpdateEventActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEventActionResponse) => any;
    }
    /**
        * <p>The request body for UpdateRevision.</p>
        */
    export interface UpdateRevisionRequest {
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The unique identifier for a data set.</p>
                */
            DataSetId: string | undefined;
            /**
                * <p>Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for a revision.</p>
                */
            RevisionId: string | undefined;
    }
    export namespace UpdateRevisionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRevisionRequest) => any;
    }
    export interface UpdateRevisionResponse {
            /**
                * <p>The ARN for the revision.</p>
                */
            Arn?: string;
            /**
                * <p>An optional comment about the revision.</p>
                */
            Comment?: string;
            /**
                * <p>The date and time that the revision was created, in ISO 8601 format.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The unique identifier for the data set associated with this revision.</p>
                */
            DataSetId?: string;
            /**
                * <p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>
                */
            Finalized?: boolean;
            /**
                * <p>The unique identifier for the revision.</p>
                */
            Id?: string;
            /**
                * <p>The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.</p>
                */
            SourceId?: string;
            /**
                * <p>The date and time that the revision was last updated, in ISO 8601 format.</p>
                */
            UpdatedAt?: Date;
            /**
                * <p>A required comment to inform subscribers of the reason their access to the revision was revoked.</p>
                */
            RevocationComment?: string;
            /**
                * <p>A status indicating that subscribers' access to the revision was revoked.</p>
                */
            Revoked?: boolean;
            /**
                * <p>The date and time that the revision was revoked, in ISO 8601 format.</p>
                */
            RevokedAt?: Date;
    }
    export namespace UpdateRevisionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRevisionResponse) => any;
    }
}

declare module '@aws-sdk/client-dataexchange/node_modules/@aws-sdk/client-dataexchange/dist-types/models/DataExchangeServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from DataExchange service.
        */
    export class DataExchangeServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

