// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-account' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AccountClient } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/AccountClient";
    import { DeleteAlternateContactCommandInput, DeleteAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/DeleteAlternateContactCommand";
    import { GetAlternateContactCommandInput, GetAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/GetAlternateContactCommand";
    import { PutAlternateContactCommandInput, PutAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/PutAlternateContactCommand";
    /**
        * <p>Operations for Amazon Web Services Account Management</p>
        */
    export class Account extends AccountClient {
            /**
                * <p>Deletes the specified alternate contact from an Amazon Web Services account.</p>
                *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
                *                 updating the alternate contacts</a>.</p>
                */
            deleteAlternateContact(args: DeleteAlternateContactCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAlternateContactCommandOutput>;
            deleteAlternateContact(args: DeleteAlternateContactCommandInput, cb: (err: any, data?: DeleteAlternateContactCommandOutput) => void): void;
            deleteAlternateContact(args: DeleteAlternateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAlternateContactCommandOutput) => void): void;
            /**
                * <p>Retrieves the specified alternate contact attached to an Amazon Web Services account.</p>
                *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
                *             updating the alternate contacts</a>.</p>
                */
            getAlternateContact(args: GetAlternateContactCommandInput, options?: __HttpHandlerOptions): Promise<GetAlternateContactCommandOutput>;
            getAlternateContact(args: GetAlternateContactCommandInput, cb: (err: any, data?: GetAlternateContactCommandOutput) => void): void;
            getAlternateContact(args: GetAlternateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAlternateContactCommandOutput) => void): void;
            /**
                * <p>Modifies the specified alternate contact attached to an Amazon Web Services account.</p>
                *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
                *             updating the alternate contacts</a>.</p>
                */
            putAlternateContact(args: PutAlternateContactCommandInput, options?: __HttpHandlerOptions): Promise<PutAlternateContactCommandOutput>;
            putAlternateContact(args: PutAlternateContactCommandInput, cb: (err: any, data?: PutAlternateContactCommandOutput) => void): void;
            putAlternateContact(args: PutAlternateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAlternateContactCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/AccountClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DeleteAlternateContactCommandInput, DeleteAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/DeleteAlternateContactCommand";
    import { GetAlternateContactCommandInput, GetAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/GetAlternateContactCommand";
    import { PutAlternateContactCommandInput, PutAlternateContactCommandOutput } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/PutAlternateContactCommand";
    export type ServiceInputTypes = DeleteAlternateContactCommandInput | GetAlternateContactCommandInput | PutAlternateContactCommandInput;
    export type ServiceOutputTypes = DeleteAlternateContactCommandOutput | GetAlternateContactCommandOutput | PutAlternateContactCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type AccountClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of AccountClient class constructor that set the region, credentials and other options.
        */
    export interface AccountClientConfig extends AccountClientConfigType {
    }
    type AccountClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of AccountClient class. This is resolved and normalized from the {@link AccountClientConfig | constructor configuration interface}.
        */
    export interface AccountClientResolvedConfig extends AccountClientResolvedConfigType {
    }
    /**
        * <p>Operations for Amazon Web Services Account Management</p>
        */
    export class AccountClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AccountClientResolvedConfig> {
            /**
                * The resolved configuration of AccountClient class. This is resolved and normalized from the {@link AccountClientConfig | constructor configuration interface}.
                */
            readonly config: AccountClientResolvedConfig;
            constructor(configuration: AccountClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/DeleteAlternateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AccountClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/AccountClient";
    import { DeleteAlternateContactRequest } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/models_0";
    export interface DeleteAlternateContactCommandInput extends DeleteAlternateContactRequest {
    }
    export interface DeleteAlternateContactCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified alternate contact from an Amazon Web Services account.</p>
        *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
        *                 updating the alternate contacts</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AccountClient, DeleteAlternateContactCommand } from "@aws-sdk/client-account"; // ES Modules import
        * // const { AccountClient, DeleteAlternateContactCommand } = require("@aws-sdk/client-account"); // CommonJS import
        * const client = new AccountClient(config);
        * const command = new DeleteAlternateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAlternateContactCommandInput} for command's `input` shape.
        * @see {@link DeleteAlternateContactCommandOutput} for command's `response` shape.
        * @see {@link AccountClientResolvedConfig | config} for AccountClient's `config` shape.
        *
        */
    export class DeleteAlternateContactCommand extends $Command<DeleteAlternateContactCommandInput, DeleteAlternateContactCommandOutput, AccountClientResolvedConfig> {
            readonly input: DeleteAlternateContactCommandInput;
            constructor(input: DeleteAlternateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AccountClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAlternateContactCommandInput, DeleteAlternateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/GetAlternateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AccountClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/AccountClient";
    import { GetAlternateContactRequest, GetAlternateContactResponse } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/models_0";
    export interface GetAlternateContactCommandInput extends GetAlternateContactRequest {
    }
    export interface GetAlternateContactCommandOutput extends GetAlternateContactResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the specified alternate contact attached to an Amazon Web Services account.</p>
        *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
        *             updating the alternate contacts</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AccountClient, GetAlternateContactCommand } from "@aws-sdk/client-account"; // ES Modules import
        * // const { AccountClient, GetAlternateContactCommand } = require("@aws-sdk/client-account"); // CommonJS import
        * const client = new AccountClient(config);
        * const command = new GetAlternateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAlternateContactCommandInput} for command's `input` shape.
        * @see {@link GetAlternateContactCommandOutput} for command's `response` shape.
        * @see {@link AccountClientResolvedConfig | config} for AccountClient's `config` shape.
        *
        */
    export class GetAlternateContactCommand extends $Command<GetAlternateContactCommandInput, GetAlternateContactCommandOutput, AccountClientResolvedConfig> {
            readonly input: GetAlternateContactCommandInput;
            constructor(input: GetAlternateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AccountClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAlternateContactCommandInput, GetAlternateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/commands/PutAlternateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AccountClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/AccountClient";
    import { PutAlternateContactRequest } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/models_0";
    export interface PutAlternateContactCommandInput extends PutAlternateContactRequest {
    }
    export interface PutAlternateContactCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Modifies the specified alternate contact attached to an Amazon Web Services account.</p>
        *         <p>For complete details about how to use the alternate contact operations, see <a href="https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html">Access or
        *             updating the alternate contacts</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AccountClient, PutAlternateContactCommand } from "@aws-sdk/client-account"; // ES Modules import
        * // const { AccountClient, PutAlternateContactCommand } = require("@aws-sdk/client-account"); // CommonJS import
        * const client = new AccountClient(config);
        * const command = new PutAlternateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAlternateContactCommandInput} for command's `input` shape.
        * @see {@link PutAlternateContactCommandOutput} for command's `response` shape.
        * @see {@link AccountClientResolvedConfig | config} for AccountClient's `config` shape.
        *
        */
    export class PutAlternateContactCommand extends $Command<PutAlternateContactCommandInput, PutAlternateContactCommandOutput, AccountClientResolvedConfig> {
            readonly input: PutAlternateContactCommandInput;
            constructor(input: PutAlternateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AccountClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAlternateContactCommandInput, PutAlternateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { AccountServiceException as __BaseException } from "@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/AccountServiceException";
    /**
        * <p>The operation failed because the calling identity doesn't have the minimum required
        *             permissions.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum AlternateContactType {
            BILLING = "BILLING",
            OPERATIONS = "OPERATIONS",
            SECURITY = "SECURITY"
    }
    export interface DeleteAlternateContactRequest {
            /**
                * <p>Specifies which of the alternate contacts to delete. </p>
                */
            AlternateContactType: AlternateContactType | string | undefined;
            /**
                * <p>Specifies the 12 digit account ID number of the Amazon Web Services account that
                *         you want to access or modify with this operation.</p>
                *          <p>If you do not specify this parameter, it defaults to the Amazon Web Services account of the
                *         identity used to call the operation.</p>
                *          <p>To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account, and
                *         the specified account ID must be a member account in the same organization. The
                *         organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features
                *         enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html">trusted access</a> enabled for the
                *         Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html">delegated admin</a> account
                *         assigned.</p>
                *          <note>
                *             <p>The management account can't specify its own <code>AccountId</code>; it must call
                *             the operation in standalone context by not including the <code>AccountId</code>
                *             parameter.</p>
                *          </note>
                *          <p>To call this operation on an account that is not a member of an organization, then
                *         don't specify this parameter, and call the operation using an identity belonging to
                *         the account whose contacts you wish to retrieve or modify.</p>
                */
            AccountId?: string;
    }
    export namespace DeleteAlternateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAlternateContactRequest) => any;
    }
    /**
        * <p>The operation failed because of an error internal to Amazon Web Services. Try your operation again
        *             later.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            $retryable: {};
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The operation failed because it specified a resource that can't be found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The operation failed because it was called too frequently and exceeded a throttle
        *             limit.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            $retryable: {
                    throttling: boolean;
            };
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    /**
        * <p>The operation failed because one of the input parameters was invalid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export interface GetAlternateContactRequest {
            /**
                * <p>Specifies which alternate contact you want to retrieve.</p>
                */
            AlternateContactType: AlternateContactType | string | undefined;
            /**
                * <p>Specifies the 12 digit account ID number of the Amazon Web Services account that
                *         you want to access or modify with this operation.</p>
                *          <p>If you do not specify this parameter, it defaults to the Amazon Web Services account of the
                *         identity used to call the operation.</p>
                *          <p>To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account, and
                *         the specified account ID must be a member account in the same organization. The
                *         organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features
                *         enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html">trusted access</a> enabled for the
                *         Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html">delegated admin</a> account
                *         assigned.</p>
                *          <note>
                *             <p>The management account can't specify its own <code>AccountId</code>; it must call
                *             the operation in standalone context by not including the <code>AccountId</code>
                *             parameter.</p>
                *          </note>
                *          <p>To call this operation on an account that is not a member of an organization, then
                *         don't specify this parameter, and call the operation using an identity belonging to
                *         the account whose contacts you wish to retrieve or modify.</p>
                */
            AccountId?: string;
    }
    export namespace GetAlternateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAlternateContactRequest) => any;
    }
    /**
        * <p>A structure that contains the details of an alternate contact associated with an Amazon Web Services
        *             account</p>
        */
    export interface AlternateContact {
            /**
                * <p>The name associated with this alternate contact.</p>
                */
            Name?: string;
            /**
                * <p>The title associated with this alternate contact.</p>
                */
            Title?: string;
            /**
                * <p>The email address associated with this alternate contact.</p>
                */
            EmailAddress?: string;
            /**
                * <p>The phone number associated with this alternate contact.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The type of alternate contact.</p>
                */
            AlternateContactType?: AlternateContactType | string;
    }
    export namespace AlternateContact {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlternateContact) => any;
    }
    export interface GetAlternateContactResponse {
            /**
                * <p>A structure that contains the details for the specified alternate contact.</p>
                */
            AlternateContact?: AlternateContact;
    }
    export namespace GetAlternateContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAlternateContactResponse) => any;
    }
    export interface PutAlternateContactRequest {
            /**
                * <p>Specifies a name for the alternate contact.</p>
                */
            Name: string | undefined;
            /**
                * <p>Specifies a title for the alternate contact.</p>
                */
            Title: string | undefined;
            /**
                * <p>Specifies an email address for the alternate contact. </p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>Specifies a phone number for the alternate contact.</p>
                */
            PhoneNumber: string | undefined;
            /**
                * <p>Specifies which alternate contact you want to create or update.</p>
                */
            AlternateContactType: AlternateContactType | string | undefined;
            /**
                * <p>Specifies the 12 digit account ID number of the Amazon Web Services account that
                *         you want to access or modify with this operation.</p>
                *          <p>If you do not specify this parameter, it defaults to the Amazon Web Services account of the
                *         identity used to call the operation.</p>
                *          <p>To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account, and
                *         the specified account ID must be a member account in the same organization. The
                *         organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features
                *         enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html">trusted access</a> enabled for the
                *         Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html">delegated admin</a> account
                *         assigned.</p>
                *          <note>
                *             <p>The management account can't specify its own <code>AccountId</code>; it must call
                *             the operation in standalone context by not including the <code>AccountId</code>
                *             parameter.</p>
                *          </note>
                *          <p>To call this operation on an account that is not a member of an organization, then
                *         don't specify this parameter, and call the operation using an identity belonging to
                *         the account whose contacts you wish to retrieve or modify.</p>
                */
            AccountId?: string;
    }
    export namespace PutAlternateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAlternateContactRequest) => any;
    }
}

declare module '@aws-sdk/client-account/node_modules/@aws-sdk/client-account/dist-types/models/AccountServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Account service.
        */
    export class AccountServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

