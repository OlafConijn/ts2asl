// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-iot' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AcceptCertificateTransferCommand";
    import { AddThingToBillingGroupCommandInput, AddThingToBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToBillingGroupCommand";
    import { AddThingToThingGroupCommandInput, AddThingToThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToThingGroupCommand";
    import { AssociateTargetsWithJobCommandInput, AssociateTargetsWithJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AssociateTargetsWithJobCommand";
    import { AttachPolicyCommandInput, AttachPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPolicyCommand";
    import { AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPrincipalPolicyCommand";
    import { AttachSecurityProfileCommandInput, AttachSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachSecurityProfileCommand";
    import { AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachThingPrincipalCommand";
    import { CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditMitigationActionsTaskCommand";
    import { CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditTaskCommand";
    import { CancelCertificateTransferCommandInput, CancelCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelCertificateTransferCommand";
    import { CancelDetectMitigationActionsTaskCommandInput, CancelDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelDetectMitigationActionsTaskCommand";
    import { CancelJobCommandInput, CancelJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobCommand";
    import { CancelJobExecutionCommandInput, CancelJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobExecutionCommand";
    import { ClearDefaultAuthorizerCommandInput, ClearDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ClearDefaultAuthorizerCommand";
    import { ConfirmTopicRuleDestinationCommandInput, ConfirmTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ConfirmTopicRuleDestinationCommand";
    import { CreateAuditSuppressionCommandInput, CreateAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuditSuppressionCommand";
    import { CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuthorizerCommand";
    import { CreateBillingGroupCommandInput, CreateBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateBillingGroupCommand";
    import { CreateCertificateFromCsrCommandInput, CreateCertificateFromCsrCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCertificateFromCsrCommand";
    import { CreateCustomMetricCommandInput, CreateCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCustomMetricCommand";
    import { CreateDimensionCommandInput, CreateDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDimensionCommand";
    import { CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDomainConfigurationCommand";
    import { CreateDynamicThingGroupCommandInput, CreateDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDynamicThingGroupCommand";
    import { CreateFleetMetricCommandInput, CreateFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateFleetMetricCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobCommand";
    import { CreateJobTemplateCommandInput, CreateJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobTemplateCommand";
    import { CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateKeysAndCertificateCommand";
    import { CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateMitigationActionCommand";
    import { CreateOTAUpdateCommandInput, CreateOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateOTAUpdateCommand";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyCommand";
    import { CreatePolicyVersionCommandInput, CreatePolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyVersionCommand";
    import { CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningClaimCommand";
    import { CreateProvisioningTemplateCommandInput, CreateProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateCommand";
    import { CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateVersionCommand";
    import { CreateRoleAliasCommandInput, CreateRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateRoleAliasCommand";
    import { CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateScheduledAuditCommand";
    import { CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateSecurityProfileCommand";
    import { CreateStreamCommandInput, CreateStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateStreamCommand";
    import { CreateThingCommandInput, CreateThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingCommand";
    import { CreateThingGroupCommandInput, CreateThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingGroupCommand";
    import { CreateThingTypeCommandInput, CreateThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingTypeCommand";
    import { CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleCommand";
    import { CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleDestinationCommand";
    import { DeleteAccountAuditConfigurationCommandInput, DeleteAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAccountAuditConfigurationCommand";
    import { DeleteAuditSuppressionCommandInput, DeleteAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuditSuppressionCommand";
    import { DeleteAuthorizerCommandInput, DeleteAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuthorizerCommand";
    import { DeleteBillingGroupCommandInput, DeleteBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteBillingGroupCommand";
    import { DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCACertificateCommand";
    import { DeleteCertificateCommandInput, DeleteCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCertificateCommand";
    import { DeleteCustomMetricCommandInput, DeleteCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCustomMetricCommand";
    import { DeleteDimensionCommandInput, DeleteDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDimensionCommand";
    import { DeleteDomainConfigurationCommandInput, DeleteDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDomainConfigurationCommand";
    import { DeleteDynamicThingGroupCommandInput, DeleteDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDynamicThingGroupCommand";
    import { DeleteFleetMetricCommandInput, DeleteFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteFleetMetricCommand";
    import { DeleteJobCommandInput, DeleteJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobCommand";
    import { DeleteJobExecutionCommandInput, DeleteJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobExecutionCommand";
    import { DeleteJobTemplateCommandInput, DeleteJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobTemplateCommand";
    import { DeleteMitigationActionCommandInput, DeleteMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteMitigationActionCommand";
    import { DeleteOTAUpdateCommandInput, DeleteOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteOTAUpdateCommand";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyCommand";
    import { DeletePolicyVersionCommandInput, DeletePolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyVersionCommand";
    import { DeleteProvisioningTemplateCommandInput, DeleteProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateCommand";
    import { DeleteProvisioningTemplateVersionCommandInput, DeleteProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateVersionCommand";
    import { DeleteRegistrationCodeCommandInput, DeleteRegistrationCodeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRegistrationCodeCommand";
    import { DeleteRoleAliasCommandInput, DeleteRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRoleAliasCommand";
    import { DeleteScheduledAuditCommandInput, DeleteScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteScheduledAuditCommand";
    import { DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteSecurityProfileCommand";
    import { DeleteStreamCommandInput, DeleteStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteStreamCommand";
    import { DeleteThingCommandInput, DeleteThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingCommand";
    import { DeleteThingGroupCommandInput, DeleteThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingGroupCommand";
    import { DeleteThingTypeCommandInput, DeleteThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingTypeCommand";
    import { DeleteTopicRuleCommandInput, DeleteTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleCommand";
    import { DeleteTopicRuleDestinationCommandInput, DeleteTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleDestinationCommand";
    import { DeleteV2LoggingLevelCommandInput, DeleteV2LoggingLevelCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteV2LoggingLevelCommand";
    import { DeprecateThingTypeCommandInput, DeprecateThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeprecateThingTypeCommand";
    import { DescribeAccountAuditConfigurationCommandInput, DescribeAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAccountAuditConfigurationCommand";
    import { DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditFindingCommand";
    import { DescribeAuditMitigationActionsTaskCommandInput, DescribeAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditMitigationActionsTaskCommand";
    import { DescribeAuditSuppressionCommandInput, DescribeAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditSuppressionCommand";
    import { DescribeAuditTaskCommandInput, DescribeAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditTaskCommand";
    import { DescribeAuthorizerCommandInput, DescribeAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuthorizerCommand";
    import { DescribeBillingGroupCommandInput, DescribeBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeBillingGroupCommand";
    import { DescribeCACertificateCommandInput, DescribeCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCACertificateCommand";
    import { DescribeCertificateCommandInput, DescribeCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCertificateCommand";
    import { DescribeCustomMetricCommandInput, DescribeCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCustomMetricCommand";
    import { DescribeDefaultAuthorizerCommandInput, DescribeDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDefaultAuthorizerCommand";
    import { DescribeDetectMitigationActionsTaskCommandInput, DescribeDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDetectMitigationActionsTaskCommand";
    import { DescribeDimensionCommandInput, DescribeDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDimensionCommand";
    import { DescribeDomainConfigurationCommandInput, DescribeDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDomainConfigurationCommand";
    import { DescribeEndpointCommandInput, DescribeEndpointCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEndpointCommand";
    import { DescribeEventConfigurationsCommandInput, DescribeEventConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEventConfigurationsCommand";
    import { DescribeFleetMetricCommandInput, DescribeFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeFleetMetricCommand";
    import { DescribeIndexCommandInput, DescribeIndexCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeIndexCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobCommand";
    import { DescribeJobExecutionCommandInput, DescribeJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobExecutionCommand";
    import { DescribeJobTemplateCommandInput, DescribeJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobTemplateCommand";
    import { DescribeManagedJobTemplateCommandInput, DescribeManagedJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeManagedJobTemplateCommand";
    import { DescribeMitigationActionCommandInput, DescribeMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeMitigationActionCommand";
    import { DescribeProvisioningTemplateCommandInput, DescribeProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateCommand";
    import { DescribeProvisioningTemplateVersionCommandInput, DescribeProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateVersionCommand";
    import { DescribeRoleAliasCommandInput, DescribeRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeRoleAliasCommand";
    import { DescribeScheduledAuditCommandInput, DescribeScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeScheduledAuditCommand";
    import { DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeSecurityProfileCommand";
    import { DescribeStreamCommandInput, DescribeStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeStreamCommand";
    import { DescribeThingCommandInput, DescribeThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingCommand";
    import { DescribeThingGroupCommandInput, DescribeThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingGroupCommand";
    import { DescribeThingRegistrationTaskCommandInput, DescribeThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingRegistrationTaskCommand";
    import { DescribeThingTypeCommandInput, DescribeThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingTypeCommand";
    import { DetachPolicyCommandInput, DetachPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPolicyCommand";
    import { DetachPrincipalPolicyCommandInput, DetachPrincipalPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPrincipalPolicyCommand";
    import { DetachSecurityProfileCommandInput, DetachSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachSecurityProfileCommand";
    import { DetachThingPrincipalCommandInput, DetachThingPrincipalCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachThingPrincipalCommand";
    import { DisableTopicRuleCommandInput, DisableTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DisableTopicRuleCommand";
    import { EnableTopicRuleCommandInput, EnableTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/EnableTopicRuleCommand";
    import { GetBehaviorModelTrainingSummariesCommandInput, GetBehaviorModelTrainingSummariesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBehaviorModelTrainingSummariesCommand";
    import { GetBucketsAggregationCommandInput, GetBucketsAggregationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBucketsAggregationCommand";
    import { GetCardinalityCommandInput, GetCardinalityCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetCardinalityCommand";
    import { GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetEffectivePoliciesCommand";
    import { GetIndexingConfigurationCommandInput, GetIndexingConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetIndexingConfigurationCommand";
    import { GetJobDocumentCommandInput, GetJobDocumentCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetJobDocumentCommand";
    import { GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetLoggingOptionsCommand";
    import { GetOTAUpdateCommandInput, GetOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetOTAUpdateCommand";
    import { GetPercentilesCommandInput, GetPercentilesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPercentilesCommand";
    import { GetPolicyCommandInput, GetPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyCommand";
    import { GetPolicyVersionCommandInput, GetPolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyVersionCommand";
    import { GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetRegistrationCodeCommand";
    import { GetStatisticsCommandInput, GetStatisticsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetStatisticsCommand";
    import { GetTopicRuleCommandInput, GetTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleCommand";
    import { GetTopicRuleDestinationCommandInput, GetTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleDestinationCommand";
    import { GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetV2LoggingOptionsCommand";
    import { ListActiveViolationsCommandInput, ListActiveViolationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListActiveViolationsCommand";
    import { ListAttachedPoliciesCommandInput, ListAttachedPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAttachedPoliciesCommand";
    import { ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditFindingsCommand";
    import { ListAuditMitigationActionsExecutionsCommandInput, ListAuditMitigationActionsExecutionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsExecutionsCommand";
    import { ListAuditMitigationActionsTasksCommandInput, ListAuditMitigationActionsTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsTasksCommand";
    import { ListAuditSuppressionsCommandInput, ListAuditSuppressionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditSuppressionsCommand";
    import { ListAuditTasksCommandInput, ListAuditTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditTasksCommand";
    import { ListAuthorizersCommandInput, ListAuthorizersCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuthorizersCommand";
    import { ListBillingGroupsCommandInput, ListBillingGroupsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListBillingGroupsCommand";
    import { ListCACertificatesCommandInput, ListCACertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCACertificatesCommand";
    import { ListCertificatesByCACommandInput, ListCertificatesByCACommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesByCACommand";
    import { ListCertificatesCommandInput, ListCertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesCommand";
    import { ListCustomMetricsCommandInput, ListCustomMetricsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCustomMetricsCommand";
    import { ListDetectMitigationActionsExecutionsCommandInput, ListDetectMitigationActionsExecutionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsExecutionsCommand";
    import { ListDetectMitigationActionsTasksCommandInput, ListDetectMitigationActionsTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsTasksCommand";
    import { ListDimensionsCommandInput, ListDimensionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDimensionsCommand";
    import { ListDomainConfigurationsCommandInput, ListDomainConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDomainConfigurationsCommand";
    import { ListFleetMetricsCommandInput, ListFleetMetricsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListFleetMetricsCommand";
    import { ListIndicesCommandInput, ListIndicesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListIndicesCommand";
    import { ListJobExecutionsForJobCommandInput, ListJobExecutionsForJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForJobCommand";
    import { ListJobExecutionsForThingCommandInput, ListJobExecutionsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForThingCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobsCommand";
    import { ListJobTemplatesCommandInput, ListJobTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobTemplatesCommand";
    import { ListManagedJobTemplatesCommandInput, ListManagedJobTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListManagedJobTemplatesCommand";
    import { ListMetricValuesCommandInput, ListMetricValuesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMetricValuesCommand";
    import { ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMitigationActionsCommand";
    import { ListOTAUpdatesCommandInput, ListOTAUpdatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOTAUpdatesCommand";
    import { ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOutgoingCertificatesCommand";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPoliciesCommand";
    import { ListPolicyPrincipalsCommandInput, ListPolicyPrincipalsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyPrincipalsCommand";
    import { ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyVersionsCommand";
    import { ListPrincipalPoliciesCommandInput, ListPrincipalPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalPoliciesCommand";
    import { ListPrincipalThingsCommandInput, ListPrincipalThingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalThingsCommand";
    import { ListProvisioningTemplatesCommandInput, ListProvisioningTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplatesCommand";
    import { ListProvisioningTemplateVersionsCommandInput, ListProvisioningTemplateVersionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplateVersionsCommand";
    import { ListRoleAliasesCommandInput, ListRoleAliasesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListRoleAliasesCommand";
    import { ListScheduledAuditsCommandInput, ListScheduledAuditsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListScheduledAuditsCommand";
    import { ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesCommand";
    import { ListSecurityProfilesForTargetCommandInput, ListSecurityProfilesForTargetCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesForTargetCommand";
    import { ListStreamsCommandInput, ListStreamsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListStreamsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTagsForResourceCommand";
    import { ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForPolicyCommand";
    import { ListTargetsForSecurityProfileCommandInput, ListTargetsForSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForSecurityProfileCommand";
    import { ListThingGroupsCommandInput, ListThingGroupsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsCommand";
    import { ListThingGroupsForThingCommandInput, ListThingGroupsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsForThingCommand";
    import { ListThingPrincipalsCommandInput, ListThingPrincipalsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingPrincipalsCommand";
    import { ListThingRegistrationTaskReportsCommandInput, ListThingRegistrationTaskReportsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTaskReportsCommand";
    import { ListThingRegistrationTasksCommandInput, ListThingRegistrationTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTasksCommand";
    import { ListThingsCommandInput, ListThingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsCommand";
    import { ListThingsInBillingGroupCommandInput, ListThingsInBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInBillingGroupCommand";
    import { ListThingsInThingGroupCommandInput, ListThingsInThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInThingGroupCommand";
    import { ListThingTypesCommandInput, ListThingTypesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingTypesCommand";
    import { ListTopicRuleDestinationsCommandInput, ListTopicRuleDestinationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRuleDestinationsCommand";
    import { ListTopicRulesCommandInput, ListTopicRulesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRulesCommand";
    import { ListV2LoggingLevelsCommandInput, ListV2LoggingLevelsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListV2LoggingLevelsCommand";
    import { ListViolationEventsCommandInput, ListViolationEventsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListViolationEventsCommand";
    import { PutVerificationStateOnViolationCommandInput, PutVerificationStateOnViolationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/PutVerificationStateOnViolationCommand";
    import { RegisterCACertificateCommandInput, RegisterCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCACertificateCommand";
    import { RegisterCertificateCommandInput, RegisterCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateCommand";
    import { RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateWithoutCACommand";
    import { RegisterThingCommandInput, RegisterThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterThingCommand";
    import { RejectCertificateTransferCommandInput, RejectCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RejectCertificateTransferCommand";
    import { RemoveThingFromBillingGroupCommandInput, RemoveThingFromBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromBillingGroupCommand";
    import { RemoveThingFromThingGroupCommandInput, RemoveThingFromThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromThingGroupCommand";
    import { ReplaceTopicRuleCommandInput, ReplaceTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ReplaceTopicRuleCommand";
    import { SearchIndexCommandInput, SearchIndexCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SearchIndexCommand";
    import { SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultAuthorizerCommand";
    import { SetDefaultPolicyVersionCommandInput, SetDefaultPolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultPolicyVersionCommand";
    import { SetLoggingOptionsCommandInput, SetLoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetLoggingOptionsCommand";
    import { SetV2LoggingLevelCommandInput, SetV2LoggingLevelCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingLevelCommand";
    import { SetV2LoggingOptionsCommandInput, SetV2LoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingOptionsCommand";
    import { StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartAuditMitigationActionsTaskCommand";
    import { StartDetectMitigationActionsTaskCommandInput, StartDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartDetectMitigationActionsTaskCommand";
    import { StartOnDemandAuditTaskCommandInput, StartOnDemandAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartOnDemandAuditTaskCommand";
    import { StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartThingRegistrationTaskCommand";
    import { StopThingRegistrationTaskCommandInput, StopThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StopThingRegistrationTaskCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TagResourceCommand";
    import { TestAuthorizationCommandInput, TestAuthorizationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestAuthorizationCommand";
    import { TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestInvokeAuthorizerCommand";
    import { TransferCertificateCommandInput, TransferCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TransferCertificateCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountAuditConfigurationCommandInput, UpdateAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAccountAuditConfigurationCommand";
    import { UpdateAuditSuppressionCommandInput, UpdateAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuditSuppressionCommand";
    import { UpdateAuthorizerCommandInput, UpdateAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuthorizerCommand";
    import { UpdateBillingGroupCommandInput, UpdateBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateBillingGroupCommand";
    import { UpdateCACertificateCommandInput, UpdateCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCACertificateCommand";
    import { UpdateCertificateCommandInput, UpdateCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCertificateCommand";
    import { UpdateCustomMetricCommandInput, UpdateCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCustomMetricCommand";
    import { UpdateDimensionCommandInput, UpdateDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDimensionCommand";
    import { UpdateDomainConfigurationCommandInput, UpdateDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDomainConfigurationCommand";
    import { UpdateDynamicThingGroupCommandInput, UpdateDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDynamicThingGroupCommand";
    import { UpdateEventConfigurationsCommandInput, UpdateEventConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateEventConfigurationsCommand";
    import { UpdateFleetMetricCommandInput, UpdateFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateFleetMetricCommand";
    import { UpdateIndexingConfigurationCommandInput, UpdateIndexingConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateIndexingConfigurationCommand";
    import { UpdateJobCommandInput, UpdateJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateJobCommand";
    import { UpdateMitigationActionCommandInput, UpdateMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateMitigationActionCommand";
    import { UpdateProvisioningTemplateCommandInput, UpdateProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateProvisioningTemplateCommand";
    import { UpdateRoleAliasCommandInput, UpdateRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateRoleAliasCommand";
    import { UpdateScheduledAuditCommandInput, UpdateScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateScheduledAuditCommand";
    import { UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateSecurityProfileCommand";
    import { UpdateStreamCommandInput, UpdateStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateStreamCommand";
    import { UpdateThingCommandInput, UpdateThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingCommand";
    import { UpdateThingGroupCommandInput, UpdateThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupCommand";
    import { UpdateThingGroupsForThingCommandInput, UpdateThingGroupsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupsForThingCommand";
    import { UpdateTopicRuleDestinationCommandInput, UpdateTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateTopicRuleDestinationCommand";
    import { ValidateSecurityProfileBehaviorsCommandInput, ValidateSecurityProfileBehaviorsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ValidateSecurityProfileBehaviorsCommand";
    import { IoTClient } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    /**
        * <fullname>IoT</fullname>
        *         <p>IoT provides secure, bi-directional communication between Internet-connected
        *             devices (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services
        *             cloud. You can discover your custom IoT-Data endpoint to communicate with, configure
        *             rules for data processing and integration with other services, organize resources
        *             associated with each device (Registry), configure logging, and create and manage
        *             policies and credentials to authenticate devices.</p>
        *         <p>The service endpoints that expose this API are listed in
        *             <a href="https://docs.aws.amazon.com/general/latest/gr/iot-core.html">Amazon Web Services IoT Core Endpoints and Quotas</a>.
        *             You must use the endpoint for the region that has the resources you want to access.</p>
        *         <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Amazon Web Services
        *                 Signature Version 4</a> to sign the request is:
        *             <i>execute-api</i>.</p>
        *         <p>For more information about how IoT works, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer
        *             Guide</a>.</p>
        *         <p>For information about how to use the credentials provider for IoT, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html">Authorizing Direct Calls to Amazon Web Services Services</a>.</p>
        */
    export class IoT extends IoTClient {
            /**
                * <p>Accepts a pending certificate transfer. The default state of the certificate is
                *          INACTIVE.</p>
                *          <p>To check for pending certificate transfers, call <a>ListCertificates</a>
                *          to enumerate your certificates.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AcceptCertificateTransfer</a> action.</p>
                */
            acceptCertificateTransfer(args: AcceptCertificateTransferCommandInput, options?: __HttpHandlerOptions): Promise<AcceptCertificateTransferCommandOutput>;
            acceptCertificateTransfer(args: AcceptCertificateTransferCommandInput, cb: (err: any, data?: AcceptCertificateTransferCommandOutput) => void): void;
            acceptCertificateTransfer(args: AcceptCertificateTransferCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptCertificateTransferCommandOutput) => void): void;
            /**
                * <p>Adds a thing to a billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AddThingToBillingGroup</a> action.</p>
                */
            addThingToBillingGroup(args: AddThingToBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<AddThingToBillingGroupCommandOutput>;
            addThingToBillingGroup(args: AddThingToBillingGroupCommandInput, cb: (err: any, data?: AddThingToBillingGroupCommandOutput) => void): void;
            addThingToBillingGroup(args: AddThingToBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddThingToBillingGroupCommandOutput) => void): void;
            /**
                * <p>Adds a thing to a thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AddThingToThingGroup</a> action.</p>
                */
            addThingToThingGroup(args: AddThingToThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<AddThingToThingGroupCommandOutput>;
            addThingToThingGroup(args: AddThingToThingGroupCommandInput, cb: (err: any, data?: AddThingToThingGroupCommandOutput) => void): void;
            addThingToThingGroup(args: AddThingToThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddThingToThingGroupCommandOutput) => void): void;
            /**
                * <p>Associates a group with a continuous job. The following criteria must be met: </p>
                *         <ul>
                *             <li>
                *                 <p>The job must have been created with the <code>targetSelection</code> field set to
                *                     "CONTINUOUS".</p>
                *             </li>
                *             <li>
                *                 <p>The job status must currently be "IN_PROGRESS".</p>
                *             </li>
                *             <li>
                *                 <p>The total number of targets associated with a job must not exceed 100.</p>
                *             </li>
                *          </ul>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AssociateTargetsWithJob</a> action.</p>
                */
            associateTargetsWithJob(args: AssociateTargetsWithJobCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTargetsWithJobCommandOutput>;
            associateTargetsWithJob(args: AssociateTargetsWithJobCommandInput, cb: (err: any, data?: AssociateTargetsWithJobCommandOutput) => void): void;
            associateTargetsWithJob(args: AssociateTargetsWithJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTargetsWithJobCommandOutput) => void): void;
            /**
                * <p>Attaches the specified policy to the specified principal (certificate or other
                *          credential).</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachPolicy</a> action.</p>
                */
            attachPolicy(args: AttachPolicyCommandInput, options?: __HttpHandlerOptions): Promise<AttachPolicyCommandOutput>;
            attachPolicy(args: AttachPolicyCommandInput, cb: (err: any, data?: AttachPolicyCommandOutput) => void): void;
            attachPolicy(args: AttachPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachPolicyCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Attaches the specified policy to the specified principal (certificate or other
                *          credential).</p>
                *          <p>
                *             <b>Note:</b> This action is deprecated and works as
                *          expected for backward compatibility, but we won't add enhancements. Use <a>AttachPolicy</a> instead.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachPrincipalPolicy</a> action.</p>
                */
            attachPrincipalPolicy(args: AttachPrincipalPolicyCommandInput, options?: __HttpHandlerOptions): Promise<AttachPrincipalPolicyCommandOutput>;
            attachPrincipalPolicy(args: AttachPrincipalPolicyCommandInput, cb: (err: any, data?: AttachPrincipalPolicyCommandOutput) => void): void;
            attachPrincipalPolicy(args: AttachPrincipalPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachPrincipalPolicyCommandOutput) => void): void;
            /**
                * <p>Associates a Device Defender security profile with a thing group or this account. Each
                *         thing group or account can have up to five security profiles associated with it.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachSecurityProfile</a> action.</p>
                */
            attachSecurityProfile(args: AttachSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<AttachSecurityProfileCommandOutput>;
            attachSecurityProfile(args: AttachSecurityProfileCommandInput, cb: (err: any, data?: AttachSecurityProfileCommandOutput) => void): void;
            attachSecurityProfile(args: AttachSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Attaches the specified principal to the specified thing. A principal can be X.509
                * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
                * 			identities.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachThingPrincipal</a> action.</p>
                */
            attachThingPrincipal(args: AttachThingPrincipalCommandInput, options?: __HttpHandlerOptions): Promise<AttachThingPrincipalCommandOutput>;
            attachThingPrincipal(args: AttachThingPrincipalCommandInput, cb: (err: any, data?: AttachThingPrincipalCommandOutput) => void): void;
            attachThingPrincipal(args: AttachThingPrincipalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachThingPrincipalCommandOutput) => void): void;
            /**
                * <p>Cancels a mitigation action task that is in progress. If the task
                *       is not
                *       in progress, an InvalidRequestException occurs.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelAuditMitigationActionsTask</a> action.</p>
                */
            cancelAuditMitigationActionsTask(args: CancelAuditMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelAuditMitigationActionsTaskCommandOutput>;
            cancelAuditMitigationActionsTask(args: CancelAuditMitigationActionsTaskCommandInput, cb: (err: any, data?: CancelAuditMitigationActionsTaskCommandOutput) => void): void;
            cancelAuditMitigationActionsTask(args: CancelAuditMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelAuditMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>Cancels an audit that is in progress. The audit can be either scheduled or on demand. If the audit isn't in progress, an "InvalidRequestException" occurs.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelAuditTask</a> action.</p>
                */
            cancelAuditTask(args: CancelAuditTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelAuditTaskCommandOutput>;
            cancelAuditTask(args: CancelAuditTaskCommandInput, cb: (err: any, data?: CancelAuditTaskCommandOutput) => void): void;
            cancelAuditTask(args: CancelAuditTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelAuditTaskCommandOutput) => void): void;
            /**
                * <p>Cancels a pending transfer for the specified certificate.</p>
                *          <p>
                *             <b>Note</b> Only the transfer source account can use this
                *          operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, IoT returns the
                *          certificate to the source account in the INACTIVE state. After the destination account has
                *          accepted the transfer, the transfer cannot be cancelled.</p>
                *          <p>After a certificate transfer is cancelled, the status of the certificate changes from
                *          PENDING_TRANSFER to INACTIVE.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelCertificateTransfer</a> action.</p>
                */
            cancelCertificateTransfer(args: CancelCertificateTransferCommandInput, options?: __HttpHandlerOptions): Promise<CancelCertificateTransferCommandOutput>;
            cancelCertificateTransfer(args: CancelCertificateTransferCommandInput, cb: (err: any, data?: CancelCertificateTransferCommandOutput) => void): void;
            cancelCertificateTransfer(args: CancelCertificateTransferCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelCertificateTransferCommandOutput) => void): void;
            /**
                * <p>
                *         Cancels a Device Defender ML Detect mitigation action.
                *       </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelDetectMitigationActionsTask</a> action.</p>
                */
            cancelDetectMitigationActionsTask(args: CancelDetectMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelDetectMitigationActionsTaskCommandOutput>;
            cancelDetectMitigationActionsTask(args: CancelDetectMitigationActionsTaskCommandInput, cb: (err: any, data?: CancelDetectMitigationActionsTaskCommandOutput) => void): void;
            cancelDetectMitigationActionsTask(args: CancelDetectMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelDetectMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>Cancels a job.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelJob</a> action.</p>
                */
            cancelJob(args: CancelJobCommandInput, options?: __HttpHandlerOptions): Promise<CancelJobCommandOutput>;
            cancelJob(args: CancelJobCommandInput, cb: (err: any, data?: CancelJobCommandOutput) => void): void;
            cancelJob(args: CancelJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelJobCommandOutput) => void): void;
            /**
                * <p>Cancels the execution of a job for a given thing.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelJobExecution</a> action.</p>
                */
            cancelJobExecution(args: CancelJobExecutionCommandInput, options?: __HttpHandlerOptions): Promise<CancelJobExecutionCommandOutput>;
            cancelJobExecution(args: CancelJobExecutionCommandInput, cb: (err: any, data?: CancelJobExecutionCommandOutput) => void): void;
            cancelJobExecution(args: CancelJobExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelJobExecutionCommandOutput) => void): void;
            /**
                * <p>Clears the default authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ClearDefaultAuthorizer</a> action.</p>
                */
            clearDefaultAuthorizer(args: ClearDefaultAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<ClearDefaultAuthorizerCommandOutput>;
            clearDefaultAuthorizer(args: ClearDefaultAuthorizerCommandInput, cb: (err: any, data?: ClearDefaultAuthorizerCommandOutput) => void): void;
            clearDefaultAuthorizer(args: ClearDefaultAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ClearDefaultAuthorizerCommandOutput) => void): void;
            /**
                * <p>Confirms a topic rule destination. When you create a rule requiring a destination, IoT
                *          sends a confirmation message to the endpoint or base address you specify. The message
                *          includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code>
                *          to confirm that you own or have access to the endpoint.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ConfirmTopicRuleDestination</a> action.</p>
                */
            confirmTopicRuleDestination(args: ConfirmTopicRuleDestinationCommandInput, options?: __HttpHandlerOptions): Promise<ConfirmTopicRuleDestinationCommandOutput>;
            confirmTopicRuleDestination(args: ConfirmTopicRuleDestinationCommandInput, cb: (err: any, data?: ConfirmTopicRuleDestinationCommandOutput) => void): void;
            confirmTopicRuleDestination(args: ConfirmTopicRuleDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ConfirmTopicRuleDestinationCommandOutput) => void): void;
            /**
                * <p>
                *       Creates a Device Defender audit suppression.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateAuditSuppression</a> action.</p>
                */
            createAuditSuppression(args: CreateAuditSuppressionCommandInput, options?: __HttpHandlerOptions): Promise<CreateAuditSuppressionCommandOutput>;
            createAuditSuppression(args: CreateAuditSuppressionCommandInput, cb: (err: any, data?: CreateAuditSuppressionCommandOutput) => void): void;
            createAuditSuppression(args: CreateAuditSuppressionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAuditSuppressionCommandOutput) => void): void;
            /**
                * <p>Creates an authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateAuthorizer</a> action.</p>
                */
            createAuthorizer(args: CreateAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<CreateAuthorizerCommandOutput>;
            createAuthorizer(args: CreateAuthorizerCommandInput, cb: (err: any, data?: CreateAuthorizerCommandOutput) => void): void;
            createAuthorizer(args: CreateAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAuthorizerCommandOutput) => void): void;
            /**
                * <p>Creates a billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateBillingGroup</a> action.</p>
                */
            createBillingGroup(args: CreateBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateBillingGroupCommandOutput>;
            createBillingGroup(args: CreateBillingGroupCommandInput, cb: (err: any, data?: CreateBillingGroupCommandOutput) => void): void;
            createBillingGroup(args: CreateBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBillingGroupCommandOutput) => void): void;
            /**
                * <p>Creates an X.509 certificate using the specified certificate signing
                *          request.</p>
                *          <p>
                *             <b>Note:</b> The CSR must include a public key that is either an
                *          RSA key with a length of at least 2048 bits or an ECC key from NIST P-256, NIST P-384, or NIST P-512
                *          curves. For supported certificates, consult <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms">
                *             Certificate signing algorithms supported by IoT</a>.</p>
                *          <p>
                *             <b>Note:</b> Reusing the same certificate signing request (CSR)
                *          results in a distinct certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateCertificateFromCsr</a> action.</p>
                *
                *          <p>You can create multiple certificates in a batch by creating a directory, copying
                *          multiple .csr files into that directory, and then specifying that directory on the command
                *          line. The following commands show how to create a batch of certificates given a batch of
                *          CSRs.</p>
                *          <p>Assuming a set of CSRs are located inside of the directory
                *          my-csr-directory:</p>
                *
                *          <p>On Linux and OS X, the command is:</p>
                *
                *          <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr
                *          --certificate-signing-request file://my-csr-directory/{}</p>
                *          <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
                *          to the aws iot create-certificate-from-csr Amazon Web Services CLI command to create a certificate for the
                *          corresponding CSR.</p>
                *          <p>The aws iot create-certificate-from-csr part of the command can also be run in
                *          parallel to speed up the certificate creation process:</p>
                *          <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr
                *          --certificate-signing-request file://my-csr-directory/{}</p>
                *          <p>On Windows PowerShell, the command to create certificates for all CSRs in
                *          my-csr-directory is:</p>
                *          <p>> ls -Name my-csr-directory | %{aws iot create-certificate-from-csr
                *          --certificate-signing-request file://my-csr-directory/$_}</p>
                *          <p>On a Windows command prompt, the command to create certificates for all CSRs in
                *          my-csr-directory is:</p>
                *          <p>> forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
                *          --certificate-signing-request file://@path"</p>
                */
            createCertificateFromCsr(args: CreateCertificateFromCsrCommandInput, options?: __HttpHandlerOptions): Promise<CreateCertificateFromCsrCommandOutput>;
            createCertificateFromCsr(args: CreateCertificateFromCsrCommandInput, cb: (err: any, data?: CreateCertificateFromCsrCommandOutput) => void): void;
            createCertificateFromCsr(args: CreateCertificateFromCsrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCertificateFromCsrCommandOutput) => void): void;
            /**
                * <p> Use this API to define a
                *       Custom
                *       Metric
                *       published by your devices to Device Defender. </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateCustomMetric</a> action.</p>
                */
            createCustomMetric(args: CreateCustomMetricCommandInput, options?: __HttpHandlerOptions): Promise<CreateCustomMetricCommandOutput>;
            createCustomMetric(args: CreateCustomMetricCommandInput, cb: (err: any, data?: CreateCustomMetricCommandOutput) => void): void;
            createCustomMetric(args: CreateCustomMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCustomMetricCommandOutput) => void): void;
            /**
                * <p>Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender.
                *       For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDimension</a> action.</p>
                */
            createDimension(args: CreateDimensionCommandInput, options?: __HttpHandlerOptions): Promise<CreateDimensionCommandOutput>;
            createDimension(args: CreateDimensionCommandInput, cb: (err: any, data?: CreateDimensionCommandOutput) => void): void;
            createDimension(args: CreateDimensionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDimensionCommandOutput) => void): void;
            /**
                * <p>Creates a domain configuration.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDomainConfiguration</a> action.</p>
                */
            createDomainConfiguration(args: CreateDomainConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateDomainConfigurationCommandOutput>;
            createDomainConfiguration(args: CreateDomainConfigurationCommandInput, cb: (err: any, data?: CreateDomainConfigurationCommandOutput) => void): void;
            createDomainConfiguration(args: CreateDomainConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDomainConfigurationCommandOutput) => void): void;
            /**
                * <p>Creates a dynamic thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDynamicThingGroup</a> action.</p>
                */
            createDynamicThingGroup(args: CreateDynamicThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateDynamicThingGroupCommandOutput>;
            createDynamicThingGroup(args: CreateDynamicThingGroupCommandInput, cb: (err: any, data?: CreateDynamicThingGroupCommandOutput) => void): void;
            createDynamicThingGroup(args: CreateDynamicThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDynamicThingGroupCommandOutput) => void): void;
            /**
                * <p>Creates a fleet metric.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateFleetMetric</a> action.</p>
                */
            createFleetMetric(args: CreateFleetMetricCommandInput, options?: __HttpHandlerOptions): Promise<CreateFleetMetricCommandOutput>;
            createFleetMetric(args: CreateFleetMetricCommandInput, cb: (err: any, data?: CreateFleetMetricCommandOutput) => void): void;
            createFleetMetric(args: CreateFleetMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFleetMetricCommandOutput) => void): void;
            /**
                * <p>Creates a job.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateJob</a> action.</p>
                */
            createJob(args: CreateJobCommandInput, options?: __HttpHandlerOptions): Promise<CreateJobCommandOutput>;
            createJob(args: CreateJobCommandInput, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            createJob(args: CreateJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            /**
                * <p>Creates a job template.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateJobTemplate</a> action.</p>
                */
            createJobTemplate(args: CreateJobTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateJobTemplateCommandOutput>;
            createJobTemplate(args: CreateJobTemplateCommandInput, cb: (err: any, data?: CreateJobTemplateCommandOutput) => void): void;
            createJobTemplate(args: CreateJobTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateJobTemplateCommandOutput) => void): void;
            /**
                * <p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued
                *          public key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a
                *          device, for more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api">Provisioning MQTT API</a>.</p>
                *          <p>
                *             <b>Note</b> This is the only time IoT issues the private key
                *          for this certificate, so it is important to keep it in a secure location.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateKeysAndCertificate</a> action.</p>
                */
            createKeysAndCertificate(args: CreateKeysAndCertificateCommandInput, options?: __HttpHandlerOptions): Promise<CreateKeysAndCertificateCommandOutput>;
            createKeysAndCertificate(args: CreateKeysAndCertificateCommandInput, cb: (err: any, data?: CreateKeysAndCertificateCommandOutput) => void): void;
            createKeysAndCertificate(args: CreateKeysAndCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateKeysAndCertificateCommandOutput) => void): void;
            /**
                * <p>Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names.
                *       For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html">Mitigation actions</a>. Each mitigation action can apply only one type of change.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateMitigationAction</a> action.</p>
                */
            createMitigationAction(args: CreateMitigationActionCommandInput, options?: __HttpHandlerOptions): Promise<CreateMitigationActionCommandOutput>;
            createMitigationAction(args: CreateMitigationActionCommandInput, cb: (err: any, data?: CreateMitigationActionCommandOutput) => void): void;
            createMitigationAction(args: CreateMitigationActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMitigationActionCommandOutput) => void): void;
            /**
                * <p>Creates an IoT OTA update on a target group of things or groups.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateOTAUpdate</a> action.</p>
                */
            createOTAUpdate(args: CreateOTAUpdateCommandInput, options?: __HttpHandlerOptions): Promise<CreateOTAUpdateCommandOutput>;
            createOTAUpdate(args: CreateOTAUpdateCommandInput, cb: (err: any, data?: CreateOTAUpdateCommandOutput) => void): void;
            createOTAUpdate(args: CreateOTAUpdateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateOTAUpdateCommandOutput) => void): void;
            /**
                * <p>Creates an IoT policy.</p>
                *          <p>The created policy is the default version for the policy. This operation creates a
                *          policy version with a version identifier of <b>1</b> and sets
                *             <b>1</b> as the policy's default version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreatePolicy</a> action.</p>
                */
            createPolicy(args: CreatePolicyCommandInput, options?: __HttpHandlerOptions): Promise<CreatePolicyCommandOutput>;
            createPolicy(args: CreatePolicyCommandInput, cb: (err: any, data?: CreatePolicyCommandOutput) => void): void;
            createPolicy(args: CreatePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePolicyCommandOutput) => void): void;
            /**
                * <p>Creates a new version of the specified IoT policy. To update a policy, create a
                *          new policy version. A managed policy can have up to five versions. If the policy has five
                *          versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
                *          before you create a new one.</p>
                *          <p>Optionally, you can set the new version as the policy's default version. The default
                *          version is the operative version (that is, the version that is in effect for the
                *          certificates to which the policy is attached).</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreatePolicyVersion</a> action.</p>
                */
            createPolicyVersion(args: CreatePolicyVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreatePolicyVersionCommandOutput>;
            createPolicyVersion(args: CreatePolicyVersionCommandInput, cb: (err: any, data?: CreatePolicyVersionCommandOutput) => void): void;
            createPolicyVersion(args: CreatePolicyVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePolicyVersionCommandOutput) => void): void;
            /**
                * <p>Creates a provisioning claim.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningClaim</a> action.</p>
                */
            createProvisioningClaim(args: CreateProvisioningClaimCommandInput, options?: __HttpHandlerOptions): Promise<CreateProvisioningClaimCommandOutput>;
            createProvisioningClaim(args: CreateProvisioningClaimCommandInput, cb: (err: any, data?: CreateProvisioningClaimCommandOutput) => void): void;
            createProvisioningClaim(args: CreateProvisioningClaimCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProvisioningClaimCommandOutput) => void): void;
            /**
                * <p>Creates a fleet provisioning template.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningTemplate</a> action.</p>
                */
            createProvisioningTemplate(args: CreateProvisioningTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateProvisioningTemplateCommandOutput>;
            createProvisioningTemplate(args: CreateProvisioningTemplateCommandInput, cb: (err: any, data?: CreateProvisioningTemplateCommandOutput) => void): void;
            createProvisioningTemplate(args: CreateProvisioningTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProvisioningTemplateCommandOutput) => void): void;
            /**
                * <p>Creates a new version of a fleet provisioning template.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningTemplateVersion</a> action.</p>
                */
            createProvisioningTemplateVersion(args: CreateProvisioningTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreateProvisioningTemplateVersionCommandOutput>;
            createProvisioningTemplateVersion(args: CreateProvisioningTemplateVersionCommandInput, cb: (err: any, data?: CreateProvisioningTemplateVersionCommandOutput) => void): void;
            createProvisioningTemplateVersion(args: CreateProvisioningTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProvisioningTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Creates a role alias.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateRoleAlias</a> action.</p>
                */
            createRoleAlias(args: CreateRoleAliasCommandInput, options?: __HttpHandlerOptions): Promise<CreateRoleAliasCommandOutput>;
            createRoleAlias(args: CreateRoleAliasCommandInput, cb: (err: any, data?: CreateRoleAliasCommandOutput) => void): void;
            createRoleAlias(args: CreateRoleAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRoleAliasCommandOutput) => void): void;
            /**
                * <p>Creates a scheduled audit that is run at a specified
                *           time interval.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateScheduledAudit</a> action.</p>
                */
            createScheduledAudit(args: CreateScheduledAuditCommandInput, options?: __HttpHandlerOptions): Promise<CreateScheduledAuditCommandOutput>;
            createScheduledAudit(args: CreateScheduledAuditCommandInput, cb: (err: any, data?: CreateScheduledAuditCommandOutput) => void): void;
            createScheduledAudit(args: CreateScheduledAuditCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateScheduledAuditCommandOutput) => void): void;
            /**
                * <p>Creates a Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateSecurityProfile</a> action.</p>
                */
            createSecurityProfile(args: CreateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateSecurityProfileCommandOutput>;
            createSecurityProfile(args: CreateSecurityProfileCommandInput, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
            createSecurityProfile(args: CreateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data
                *             bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files
                *             associated with a stream.</p>
                *     	    <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateStream</a> action.</p>
                */
            createStream(args: CreateStreamCommandInput, options?: __HttpHandlerOptions): Promise<CreateStreamCommandOutput>;
            createStream(args: CreateStreamCommandInput, cb: (err: any, data?: CreateStreamCommandOutput) => void): void;
            createStream(args: CreateStreamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStreamCommandOutput) => void): void;
            /**
                * <p>Creates a thing record in the registry. If this call is made multiple times using
                * 			the same thing name and configuration, the call will succeed. If this call is made with
                * 			the same thing name but different configuration a
                * 				<code>ResourceAlreadyExistsException</code> is thrown.</p>
                * 		       <note>
                * 			         <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for
                * 				information about authorizing control plane actions.</p>
                * 		       </note>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThing</a> action.</p>
                */
            createThing(args: CreateThingCommandInput, options?: __HttpHandlerOptions): Promise<CreateThingCommandOutput>;
            createThing(args: CreateThingCommandInput, cb: (err: any, data?: CreateThingCommandOutput) => void): void;
            createThing(args: CreateThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateThingCommandOutput) => void): void;
            /**
                * <p>Create a thing group.</p>
                * 		       <note>
                * 			         <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for
                * 				information about authorizing control plane actions.</p>
                * 		       </note>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThingGroup</a> action.</p>
                */
            createThingGroup(args: CreateThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateThingGroupCommandOutput>;
            createThingGroup(args: CreateThingGroupCommandInput, cb: (err: any, data?: CreateThingGroupCommandOutput) => void): void;
            createThingGroup(args: CreateThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateThingGroupCommandOutput) => void): void;
            /**
                * <p>Creates a new thing type.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThingType</a> action.</p>
                */
            createThingType(args: CreateThingTypeCommandInput, options?: __HttpHandlerOptions): Promise<CreateThingTypeCommandOutput>;
            createThingType(args: CreateThingTypeCommandInput, cb: (err: any, data?: CreateThingTypeCommandOutput) => void): void;
            createThingType(args: CreateThingTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateThingTypeCommandOutput) => void): void;
            /**
                * <p>Creates a rule. Creating rules is an administrator-level action. Any user who has
                *          permission to create rules will be able to access data processed by the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateTopicRule</a> action.</p>
                */
            createTopicRule(args: CreateTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateTopicRuleCommandOutput>;
            createTopicRule(args: CreateTopicRuleCommandInput, cb: (err: any, data?: CreateTopicRuleCommandOutput) => void): void;
            createTopicRule(args: CreateTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTopicRuleCommandOutput) => void): void;
            /**
                * <p>Creates a topic rule destination. The destination must be confirmed prior to use.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateTopicRuleDestination</a> action.</p>
                */
            createTopicRuleDestination(args: CreateTopicRuleDestinationCommandInput, options?: __HttpHandlerOptions): Promise<CreateTopicRuleDestinationCommandOutput>;
            createTopicRuleDestination(args: CreateTopicRuleDestinationCommandInput, cb: (err: any, data?: CreateTopicRuleDestinationCommandOutput) => void): void;
            createTopicRuleDestination(args: CreateTopicRuleDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTopicRuleDestinationCommandOutput) => void): void;
            /**
                * <p>Restores the default settings for Device Defender audits for this account. Any
                *           configuration data you entered is deleted and all audit checks are reset to
                *           disabled.  </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAccountAuditConfiguration</a> action.</p>
                */
            deleteAccountAuditConfiguration(args: DeleteAccountAuditConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccountAuditConfigurationCommandOutput>;
            deleteAccountAuditConfiguration(args: DeleteAccountAuditConfigurationCommandInput, cb: (err: any, data?: DeleteAccountAuditConfigurationCommandOutput) => void): void;
            deleteAccountAuditConfiguration(args: DeleteAccountAuditConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccountAuditConfigurationCommandOutput) => void): void;
            /**
                * <p>
                *       Deletes a Device Defender audit suppression.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAuditSuppression</a> action.</p>
                */
            deleteAuditSuppression(args: DeleteAuditSuppressionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAuditSuppressionCommandOutput>;
            deleteAuditSuppression(args: DeleteAuditSuppressionCommandInput, cb: (err: any, data?: DeleteAuditSuppressionCommandOutput) => void): void;
            deleteAuditSuppression(args: DeleteAuditSuppressionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAuditSuppressionCommandOutput) => void): void;
            /**
                * <p>Deletes an authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAuthorizer</a> action.</p>
                */
            deleteAuthorizer(args: DeleteAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAuthorizerCommandOutput>;
            deleteAuthorizer(args: DeleteAuthorizerCommandInput, cb: (err: any, data?: DeleteAuthorizerCommandOutput) => void): void;
            deleteAuthorizer(args: DeleteAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAuthorizerCommandOutput) => void): void;
            /**
                * <p>Deletes the billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteBillingGroup</a> action.</p>
                */
            deleteBillingGroup(args: DeleteBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBillingGroupCommandOutput>;
            deleteBillingGroup(args: DeleteBillingGroupCommandInput, cb: (err: any, data?: DeleteBillingGroupCommandOutput) => void): void;
            deleteBillingGroup(args: DeleteBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBillingGroupCommandOutput) => void): void;
            /**
                * <p>Deletes a registered CA certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCACertificate</a> action.</p>
                */
            deleteCACertificate(args: DeleteCACertificateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCACertificateCommandOutput>;
            deleteCACertificate(args: DeleteCACertificateCommandInput, cb: (err: any, data?: DeleteCACertificateCommandOutput) => void): void;
            deleteCACertificate(args: DeleteCACertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCACertificateCommandOutput) => void): void;
            /**
                * <p>Deletes the specified certificate.</p>
                *          <p>A certificate cannot be deleted if it has a policy or IoT thing attached to it or if
                *          its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPolicy</a> action to detach all policies. Next, use the <a>UpdateCertificate</a> action to set the certificate to the INACTIVE
                *          status.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCertificate</a> action.</p>
                */
            deleteCertificate(args: DeleteCertificateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCertificateCommandOutput>;
            deleteCertificate(args: DeleteCertificateCommandInput, cb: (err: any, data?: DeleteCertificateCommandOutput) => void): void;
            deleteCertificate(args: DeleteCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCertificateCommandOutput) => void): void;
            /**
                * <p>
                *       Deletes a Device Defender detect custom metric.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCustomMetric</a> action.</p>
                *          <note>
                *             <p>Before you can delete a custom metric, you must first remove the custom metric from all
                *       security profiles it's a part of.
                *       The
                *       security
                *       profile associated with the custom metric can be found using the <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html">ListSecurityProfiles</a>
                *       API with <code>metricName</code> set to your custom metric name.</p>
                *          </note>
                */
            deleteCustomMetric(args: DeleteCustomMetricCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCustomMetricCommandOutput>;
            deleteCustomMetric(args: DeleteCustomMetricCommandInput, cb: (err: any, data?: DeleteCustomMetricCommandOutput) => void): void;
            deleteCustomMetric(args: DeleteCustomMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCustomMetricCommandOutput) => void): void;
            /**
                * <p>Removes the specified dimension from your Amazon Web Services accounts.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDimension</a> action.</p>
                */
            deleteDimension(args: DeleteDimensionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDimensionCommandOutput>;
            deleteDimension(args: DeleteDimensionCommandInput, cb: (err: any, data?: DeleteDimensionCommandOutput) => void): void;
            deleteDimension(args: DeleteDimensionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDimensionCommandOutput) => void): void;
            /**
                * <p>Deletes the specified domain configuration.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDomainConfiguration</a> action.</p>
                */
            deleteDomainConfiguration(args: DeleteDomainConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDomainConfigurationCommandOutput>;
            deleteDomainConfiguration(args: DeleteDomainConfigurationCommandInput, cb: (err: any, data?: DeleteDomainConfigurationCommandOutput) => void): void;
            deleteDomainConfiguration(args: DeleteDomainConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDomainConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes a dynamic thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDynamicThingGroup</a> action.</p>
                */
            deleteDynamicThingGroup(args: DeleteDynamicThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDynamicThingGroupCommandOutput>;
            deleteDynamicThingGroup(args: DeleteDynamicThingGroupCommandInput, cb: (err: any, data?: DeleteDynamicThingGroupCommandOutput) => void): void;
            deleteDynamicThingGroup(args: DeleteDynamicThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDynamicThingGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the specified fleet metric.
                *         Returns successfully with no error if the deletion is successful or you specify a fleet metric that doesn't exist.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteFleetMetric</a> action.</p>
                */
            deleteFleetMetric(args: DeleteFleetMetricCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFleetMetricCommandOutput>;
            deleteFleetMetric(args: DeleteFleetMetricCommandInput, cb: (err: any, data?: DeleteFleetMetricCommandOutput) => void): void;
            deleteFleetMetric(args: DeleteFleetMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFleetMetricCommandOutput) => void): void;
            /**
                * <p>Deletes a job and its related job executions.</p>
                *          <p>Deleting a job may take time, depending on the number of job
                *         executions created for the job and various other factors. While the job
                *         is being deleted, the status of the job will be shown as
                *         "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status
                *         is already "DELETION_IN_PROGRESS" will result in an error.</p>
                *          <p>Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or
                *         a LimitExceededException will occur.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteJob</a> action.</p>
                */
            deleteJob(args: DeleteJobCommandInput, options?: __HttpHandlerOptions): Promise<DeleteJobCommandOutput>;
            deleteJob(args: DeleteJobCommandInput, cb: (err: any, data?: DeleteJobCommandOutput) => void): void;
            deleteJob(args: DeleteJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteJobCommandOutput) => void): void;
            /**
                * <p>Deletes a job execution.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteJobExecution</a> action.</p>
                */
            deleteJobExecution(args: DeleteJobExecutionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteJobExecutionCommandOutput>;
            deleteJobExecution(args: DeleteJobExecutionCommandInput, cb: (err: any, data?: DeleteJobExecutionCommandOutput) => void): void;
            deleteJobExecution(args: DeleteJobExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteJobExecutionCommandOutput) => void): void;
            /**
                * <p>Deletes the specified job template.</p>
                */
            deleteJobTemplate(args: DeleteJobTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteJobTemplateCommandOutput>;
            deleteJobTemplate(args: DeleteJobTemplateCommandInput, cb: (err: any, data?: DeleteJobTemplateCommandOutput) => void): void;
            deleteJobTemplate(args: DeleteJobTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteJobTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes a defined mitigation action from your Amazon Web Services accounts.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteMitigationAction</a> action.</p>
                */
            deleteMitigationAction(args: DeleteMitigationActionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMitigationActionCommandOutput>;
            deleteMitigationAction(args: DeleteMitigationActionCommandInput, cb: (err: any, data?: DeleteMitigationActionCommandOutput) => void): void;
            deleteMitigationAction(args: DeleteMitigationActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMitigationActionCommandOutput) => void): void;
            /**
                * <p>Delete an OTA update.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteOTAUpdate</a> action.</p>
                */
            deleteOTAUpdate(args: DeleteOTAUpdateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteOTAUpdateCommandOutput>;
            deleteOTAUpdate(args: DeleteOTAUpdateCommandInput, cb: (err: any, data?: DeleteOTAUpdateCommandOutput) => void): void;
            deleteOTAUpdate(args: DeleteOTAUpdateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteOTAUpdateCommandOutput) => void): void;
            /**
                * <p>Deletes the specified policy.</p>
                *          <p>A policy cannot be deleted if it has non-default versions or it is attached to any
                *          certificate.</p>
                *          <p>To delete a policy, use the <a>DeletePolicyVersion</a> action to delete all non-default
                *          versions of the policy; use the <a>DetachPolicy</a> action to detach the policy from any
                *          certificate; and then use the DeletePolicy action to delete the policy.</p>
                *          <p>When a policy is deleted using DeletePolicy, its default version is deleted with
                *          it.</p>
                *          <note>
                *             <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after
                *          a policy is detached before it's ready to be deleted.</p>
                *          </note>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeletePolicy</a> action.</p>
                */
            deletePolicy(args: DeletePolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeletePolicyCommandOutput>;
            deletePolicy(args: DeletePolicyCommandInput, cb: (err: any, data?: DeletePolicyCommandOutput) => void): void;
            deletePolicy(args: DeletePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePolicyCommandOutput) => void): void;
            /**
                * <p>Deletes the specified version of the specified policy. You cannot delete the default
                *          version of a policy using this action. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
                *          version, use ListPolicyVersions.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeletePolicyVersion</a> action.</p>
                */
            deletePolicyVersion(args: DeletePolicyVersionCommandInput, options?: __HttpHandlerOptions): Promise<DeletePolicyVersionCommandOutput>;
            deletePolicyVersion(args: DeletePolicyVersionCommandInput, cb: (err: any, data?: DeletePolicyVersionCommandOutput) => void): void;
            deletePolicyVersion(args: DeletePolicyVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePolicyVersionCommandOutput) => void): void;
            /**
                * <p>Deletes a fleet provisioning template.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteProvisioningTemplate</a> action.</p>
                */
            deleteProvisioningTemplate(args: DeleteProvisioningTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProvisioningTemplateCommandOutput>;
            deleteProvisioningTemplate(args: DeleteProvisioningTemplateCommandInput, cb: (err: any, data?: DeleteProvisioningTemplateCommandOutput) => void): void;
            deleteProvisioningTemplate(args: DeleteProvisioningTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProvisioningTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes a fleet provisioning template version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteProvisioningTemplateVersion</a> action.</p>
                */
            deleteProvisioningTemplateVersion(args: DeleteProvisioningTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProvisioningTemplateVersionCommandOutput>;
            deleteProvisioningTemplateVersion(args: DeleteProvisioningTemplateVersionCommandInput, cb: (err: any, data?: DeleteProvisioningTemplateVersionCommandOutput) => void): void;
            deleteProvisioningTemplateVersion(args: DeleteProvisioningTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProvisioningTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Deletes a CA certificate registration code.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteRegistrationCode</a> action.</p>
                */
            deleteRegistrationCode(args: DeleteRegistrationCodeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRegistrationCodeCommandOutput>;
            deleteRegistrationCode(args: DeleteRegistrationCodeCommandInput, cb: (err: any, data?: DeleteRegistrationCodeCommandOutput) => void): void;
            deleteRegistrationCode(args: DeleteRegistrationCodeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRegistrationCodeCommandOutput) => void): void;
            /**
                * <p>Deletes a role alias</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteRoleAlias</a> action.</p>
                */
            deleteRoleAlias(args: DeleteRoleAliasCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRoleAliasCommandOutput>;
            deleteRoleAlias(args: DeleteRoleAliasCommandInput, cb: (err: any, data?: DeleteRoleAliasCommandOutput) => void): void;
            deleteRoleAlias(args: DeleteRoleAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRoleAliasCommandOutput) => void): void;
            /**
                * <p>Deletes a scheduled audit.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteScheduledAudit</a> action.</p>
                */
            deleteScheduledAudit(args: DeleteScheduledAuditCommandInput, options?: __HttpHandlerOptions): Promise<DeleteScheduledAuditCommandOutput>;
            deleteScheduledAudit(args: DeleteScheduledAuditCommandInput, cb: (err: any, data?: DeleteScheduledAuditCommandOutput) => void): void;
            deleteScheduledAudit(args: DeleteScheduledAuditCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteScheduledAuditCommandOutput) => void): void;
            /**
                * <p>Deletes a Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteSecurityProfile</a> action.</p>
                */
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSecurityProfileCommandOutput>;
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Deletes a stream.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteStream</a> action.</p>
                */
            deleteStream(args: DeleteStreamCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStreamCommandOutput>;
            deleteStream(args: DeleteStreamCommandInput, cb: (err: any, data?: DeleteStreamCommandOutput) => void): void;
            deleteStream(args: DeleteStreamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStreamCommandOutput) => void): void;
            /**
                * <p>Deletes the specified thing. Returns successfully with no error if the deletion is
                * 			successful or you specify a thing that doesn't exist.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThing</a> action.</p>
                */
            deleteThing(args: DeleteThingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteThingCommandOutput>;
            deleteThing(args: DeleteThingCommandInput, cb: (err: any, data?: DeleteThingCommandOutput) => void): void;
            deleteThing(args: DeleteThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteThingCommandOutput) => void): void;
            /**
                * <p>Deletes a thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingGroup</a> action.</p>
                */
            deleteThingGroup(args: DeleteThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteThingGroupCommandOutput>;
            deleteThingGroup(args: DeleteThingGroupCommandInput, cb: (err: any, data?: DeleteThingGroupCommandOutput) => void): void;
            deleteThingGroup(args: DeleteThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteThingGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the specified thing type. You cannot delete a thing type if it has things
                * 			associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and
                * 			finally use <a>DeleteThingType</a> to delete the thing type.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingType</a> action.</p>
                */
            deleteThingType(args: DeleteThingTypeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteThingTypeCommandOutput>;
            deleteThingType(args: DeleteThingTypeCommandInput, cb: (err: any, data?: DeleteThingTypeCommandOutput) => void): void;
            deleteThingType(args: DeleteThingTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteThingTypeCommandOutput) => void): void;
            /**
                * <p>Deletes the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteTopicRule</a> action.</p>
                */
            deleteTopicRule(args: DeleteTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTopicRuleCommandOutput>;
            deleteTopicRule(args: DeleteTopicRuleCommandInput, cb: (err: any, data?: DeleteTopicRuleCommandOutput) => void): void;
            deleteTopicRule(args: DeleteTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTopicRuleCommandOutput) => void): void;
            /**
                * <p>Deletes a topic rule destination.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteTopicRuleDestination</a> action.</p>
                */
            deleteTopicRuleDestination(args: DeleteTopicRuleDestinationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTopicRuleDestinationCommandOutput>;
            deleteTopicRuleDestination(args: DeleteTopicRuleDestinationCommandInput, cb: (err: any, data?: DeleteTopicRuleDestinationCommandOutput) => void): void;
            deleteTopicRuleDestination(args: DeleteTopicRuleDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTopicRuleDestinationCommandOutput) => void): void;
            /**
                * <p>Deletes a logging level.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteV2LoggingLevel</a> action.</p>
                */
            deleteV2LoggingLevel(args: DeleteV2LoggingLevelCommandInput, options?: __HttpHandlerOptions): Promise<DeleteV2LoggingLevelCommandOutput>;
            deleteV2LoggingLevel(args: DeleteV2LoggingLevelCommandInput, cb: (err: any, data?: DeleteV2LoggingLevelCommandOutput) => void): void;
            deleteV2LoggingLevel(args: DeleteV2LoggingLevelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteV2LoggingLevelCommandOutput) => void): void;
            /**
                * <p>Deprecates a thing type. You can not associate new things with deprecated thing
                * 			type.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeprecateThingType</a> action.</p>
                */
            deprecateThingType(args: DeprecateThingTypeCommandInput, options?: __HttpHandlerOptions): Promise<DeprecateThingTypeCommandOutput>;
            deprecateThingType(args: DeprecateThingTypeCommandInput, cb: (err: any, data?: DeprecateThingTypeCommandOutput) => void): void;
            deprecateThingType(args: DeprecateThingTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprecateThingTypeCommandOutput) => void): void;
            /**
                * <p>Gets information about the Device Defender audit settings for this account.
                *           Settings include how audit notifications are sent and which audit checks are
                *           enabled or disabled.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAccountAuditConfiguration</a> action.</p>
                */
            describeAccountAuditConfiguration(args: DescribeAccountAuditConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAccountAuditConfigurationCommandOutput>;
            describeAccountAuditConfiguration(args: DescribeAccountAuditConfigurationCommandInput, cb: (err: any, data?: DescribeAccountAuditConfigurationCommandOutput) => void): void;
            describeAccountAuditConfiguration(args: DescribeAccountAuditConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAccountAuditConfigurationCommandOutput) => void): void;
            /**
                * <p>Gets information about a single audit finding. Properties include the reason for
                *       noncompliance, the severity of the issue,
                *       and the start time
                *       when the audit that returned the
                *       finding.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuditFinding</a> action.</p>
                */
            describeAuditFinding(args: DescribeAuditFindingCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuditFindingCommandOutput>;
            describeAuditFinding(args: DescribeAuditFindingCommandInput, cb: (err: any, data?: DescribeAuditFindingCommandOutput) => void): void;
            describeAuditFinding(args: DescribeAuditFindingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuditFindingCommandOutput) => void): void;
            /**
                * <p>Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they're being applied, the task status, and aggregated task statistics.</p>
                */
            describeAuditMitigationActionsTask(args: DescribeAuditMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuditMitigationActionsTaskCommandOutput>;
            describeAuditMitigationActionsTask(args: DescribeAuditMitigationActionsTaskCommandInput, cb: (err: any, data?: DescribeAuditMitigationActionsTaskCommandOutput) => void): void;
            describeAuditMitigationActionsTask(args: DescribeAuditMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuditMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>
                *       Gets information about a Device Defender audit suppression.
                *     </p>
                */
            describeAuditSuppression(args: DescribeAuditSuppressionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuditSuppressionCommandOutput>;
            describeAuditSuppression(args: DescribeAuditSuppressionCommandInput, cb: (err: any, data?: DescribeAuditSuppressionCommandOutput) => void): void;
            describeAuditSuppression(args: DescribeAuditSuppressionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuditSuppressionCommandOutput) => void): void;
            /**
                * <p>Gets information about a Device Defender audit.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuditTask</a> action.</p>
                */
            describeAuditTask(args: DescribeAuditTaskCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuditTaskCommandOutput>;
            describeAuditTask(args: DescribeAuditTaskCommandInput, cb: (err: any, data?: DescribeAuditTaskCommandOutput) => void): void;
            describeAuditTask(args: DescribeAuditTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuditTaskCommandOutput) => void): void;
            /**
                * <p>Describes an authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuthorizer</a> action.</p>
                */
            describeAuthorizer(args: DescribeAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuthorizerCommandOutput>;
            describeAuthorizer(args: DescribeAuthorizerCommandInput, cb: (err: any, data?: DescribeAuthorizerCommandOutput) => void): void;
            describeAuthorizer(args: DescribeAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuthorizerCommandOutput) => void): void;
            /**
                * <p>Returns information about a billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeBillingGroup</a> action.</p>
                */
            describeBillingGroup(args: DescribeBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeBillingGroupCommandOutput>;
            describeBillingGroup(args: DescribeBillingGroupCommandInput, cb: (err: any, data?: DescribeBillingGroupCommandOutput) => void): void;
            describeBillingGroup(args: DescribeBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeBillingGroupCommandOutput) => void): void;
            /**
                * <p>Describes a registered CA certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCACertificate</a> action.</p>
                */
            describeCACertificate(args: DescribeCACertificateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCACertificateCommandOutput>;
            describeCACertificate(args: DescribeCACertificateCommandInput, cb: (err: any, data?: DescribeCACertificateCommandOutput) => void): void;
            describeCACertificate(args: DescribeCACertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCACertificateCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCertificate</a> action.</p>
                */
            describeCertificate(args: DescribeCertificateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCertificateCommandOutput>;
            describeCertificate(args: DescribeCertificateCommandInput, cb: (err: any, data?: DescribeCertificateCommandOutput) => void): void;
            describeCertificate(args: DescribeCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCertificateCommandOutput) => void): void;
            /**
                * <p>
                *       Gets information about a Device Defender detect custom metric.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCustomMetric</a> action.</p>
                */
            describeCustomMetric(args: DescribeCustomMetricCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCustomMetricCommandOutput>;
            describeCustomMetric(args: DescribeCustomMetricCommandInput, cb: (err: any, data?: DescribeCustomMetricCommandOutput) => void): void;
            describeCustomMetric(args: DescribeCustomMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCustomMetricCommandOutput) => void): void;
            /**
                * <p>Describes the default authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDefaultAuthorizer</a> action.</p>
                */
            describeDefaultAuthorizer(args: DescribeDefaultAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDefaultAuthorizerCommandOutput>;
            describeDefaultAuthorizer(args: DescribeDefaultAuthorizerCommandInput, cb: (err: any, data?: DescribeDefaultAuthorizerCommandOutput) => void): void;
            describeDefaultAuthorizer(args: DescribeDefaultAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDefaultAuthorizerCommandOutput) => void): void;
            /**
                * <p>
                *       Gets information about a Device Defender ML Detect mitigation action.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDetectMitigationActionsTask</a> action.</p>
                */
            describeDetectMitigationActionsTask(args: DescribeDetectMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDetectMitigationActionsTaskCommandOutput>;
            describeDetectMitigationActionsTask(args: DescribeDetectMitigationActionsTaskCommandInput, cb: (err: any, data?: DescribeDetectMitigationActionsTaskCommandOutput) => void): void;
            describeDetectMitigationActionsTask(args: DescribeDetectMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDetectMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>Provides details about a dimension that is defined in your Amazon Web Services accounts.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDimension</a> action.</p>
                */
            describeDimension(args: DescribeDimensionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDimensionCommandOutput>;
            describeDimension(args: DescribeDimensionCommandInput, cb: (err: any, data?: DescribeDimensionCommandOutput) => void): void;
            describeDimension(args: DescribeDimensionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDimensionCommandOutput) => void): void;
            /**
                * <p>Gets summary information about a domain configuration.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDomainConfiguration</a> action.</p>
                */
            describeDomainConfiguration(args: DescribeDomainConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDomainConfigurationCommandOutput>;
            describeDomainConfiguration(args: DescribeDomainConfigurationCommandInput, cb: (err: any, data?: DescribeDomainConfigurationCommandOutput) => void): void;
            describeDomainConfiguration(args: DescribeDomainConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDomainConfigurationCommandOutput) => void): void;
            /**
                * <p>Returns a unique endpoint specific to the Amazon Web Services account making the call.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeEndpoint</a> action.</p>
                */
            describeEndpoint(args: DescribeEndpointCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEndpointCommandOutput>;
            describeEndpoint(args: DescribeEndpointCommandInput, cb: (err: any, data?: DescribeEndpointCommandOutput) => void): void;
            describeEndpoint(args: DescribeEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEndpointCommandOutput) => void): void;
            /**
                * <p>Describes event configurations.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeEventConfigurations</a> action.</p>
                */
            describeEventConfigurations(args: DescribeEventConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventConfigurationsCommandOutput>;
            describeEventConfigurations(args: DescribeEventConfigurationsCommandInput, cb: (err: any, data?: DescribeEventConfigurationsCommandOutput) => void): void;
            describeEventConfigurations(args: DescribeEventConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventConfigurationsCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified fleet metric.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeFleetMetric</a> action.</p>
                */
            describeFleetMetric(args: DescribeFleetMetricCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetMetricCommandOutput>;
            describeFleetMetric(args: DescribeFleetMetricCommandInput, cb: (err: any, data?: DescribeFleetMetricCommandOutput) => void): void;
            describeFleetMetric(args: DescribeFleetMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetMetricCommandOutput) => void): void;
            /**
                * <p>Describes a search index.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeIndex</a> action.</p>
                */
            describeIndex(args: DescribeIndexCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIndexCommandOutput>;
            describeIndex(args: DescribeIndexCommandInput, cb: (err: any, data?: DescribeIndexCommandOutput) => void): void;
            describeIndex(args: DescribeIndexCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIndexCommandOutput) => void): void;
            /**
                * <p>Describes a job.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeJob</a> action.</p>
                */
            describeJob(args: DescribeJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobCommandOutput>;
            describeJob(args: DescribeJobCommandInput, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            describeJob(args: DescribeJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            /**
                * <p>Describes a job execution.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeJobExecution</a> action.</p>
                */
            describeJobExecution(args: DescribeJobExecutionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobExecutionCommandOutput>;
            describeJobExecution(args: DescribeJobExecutionCommandInput, cb: (err: any, data?: DescribeJobExecutionCommandOutput) => void): void;
            describeJobExecution(args: DescribeJobExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobExecutionCommandOutput) => void): void;
            /**
                * <p>Returns information about a job template.</p>
                */
            describeJobTemplate(args: DescribeJobTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobTemplateCommandOutput>;
            describeJobTemplate(args: DescribeJobTemplateCommandInput, cb: (err: any, data?: DescribeJobTemplateCommandOutput) => void): void;
            describeJobTemplate(args: DescribeJobTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobTemplateCommandOutput) => void): void;
            /**
                * <p>View details of a managed job template.</p>
                */
            describeManagedJobTemplate(args: DescribeManagedJobTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeManagedJobTemplateCommandOutput>;
            describeManagedJobTemplate(args: DescribeManagedJobTemplateCommandInput, cb: (err: any, data?: DescribeManagedJobTemplateCommandOutput) => void): void;
            describeManagedJobTemplate(args: DescribeManagedJobTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeManagedJobTemplateCommandOutput) => void): void;
            /**
                * <p>Gets information about a mitigation action.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeMitigationAction</a> action.</p>
                */
            describeMitigationAction(args: DescribeMitigationActionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeMitigationActionCommandOutput>;
            describeMitigationAction(args: DescribeMitigationActionCommandInput, cb: (err: any, data?: DescribeMitigationActionCommandOutput) => void): void;
            describeMitigationAction(args: DescribeMitigationActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeMitigationActionCommandOutput) => void): void;
            /**
                * <p>Returns information about a fleet provisioning template.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeProvisioningTemplate</a> action.</p>
                */
            describeProvisioningTemplate(args: DescribeProvisioningTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisioningTemplateCommandOutput>;
            describeProvisioningTemplate(args: DescribeProvisioningTemplateCommandInput, cb: (err: any, data?: DescribeProvisioningTemplateCommandOutput) => void): void;
            describeProvisioningTemplate(args: DescribeProvisioningTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisioningTemplateCommandOutput) => void): void;
            /**
                * <p>Returns information about a fleet provisioning template version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeProvisioningTemplateVersion</a> action.</p>
                */
            describeProvisioningTemplateVersion(args: DescribeProvisioningTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisioningTemplateVersionCommandOutput>;
            describeProvisioningTemplateVersion(args: DescribeProvisioningTemplateVersionCommandInput, cb: (err: any, data?: DescribeProvisioningTemplateVersionCommandOutput) => void): void;
            describeProvisioningTemplateVersion(args: DescribeProvisioningTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisioningTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Describes a role alias.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeRoleAlias</a> action.</p>
                */
            describeRoleAlias(args: DescribeRoleAliasCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRoleAliasCommandOutput>;
            describeRoleAlias(args: DescribeRoleAliasCommandInput, cb: (err: any, data?: DescribeRoleAliasCommandOutput) => void): void;
            describeRoleAlias(args: DescribeRoleAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRoleAliasCommandOutput) => void): void;
            /**
                * <p>Gets information about a scheduled audit.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeScheduledAudit</a> action.</p>
                */
            describeScheduledAudit(args: DescribeScheduledAuditCommandInput, options?: __HttpHandlerOptions): Promise<DescribeScheduledAuditCommandOutput>;
            describeScheduledAudit(args: DescribeScheduledAuditCommandInput, cb: (err: any, data?: DescribeScheduledAuditCommandOutput) => void): void;
            describeScheduledAudit(args: DescribeScheduledAuditCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeScheduledAuditCommandOutput) => void): void;
            /**
                * <p>Gets information about a Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeSecurityProfile</a> action.</p>
                */
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityProfileCommandOutput>;
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Gets information about a stream.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeStream</a> action.</p>
                */
            describeStream(args: DescribeStreamCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStreamCommandOutput>;
            describeStream(args: DescribeStreamCommandInput, cb: (err: any, data?: DescribeStreamCommandOutput) => void): void;
            describeStream(args: DescribeStreamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStreamCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified thing.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThing</a> action.</p>
                */
            describeThing(args: DescribeThingCommandInput, options?: __HttpHandlerOptions): Promise<DescribeThingCommandOutput>;
            describeThing(args: DescribeThingCommandInput, cb: (err: any, data?: DescribeThingCommandOutput) => void): void;
            describeThing(args: DescribeThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeThingCommandOutput) => void): void;
            /**
                * <p>Describe a thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingGroup</a> action.</p>
                */
            describeThingGroup(args: DescribeThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeThingGroupCommandOutput>;
            describeThingGroup(args: DescribeThingGroupCommandInput, cb: (err: any, data?: DescribeThingGroupCommandOutput) => void): void;
            describeThingGroup(args: DescribeThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeThingGroupCommandOutput) => void): void;
            /**
                * <p>Describes a bulk thing provisioning task.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingRegistrationTask</a> action.</p>
                */
            describeThingRegistrationTask(args: DescribeThingRegistrationTaskCommandInput, options?: __HttpHandlerOptions): Promise<DescribeThingRegistrationTaskCommandOutput>;
            describeThingRegistrationTask(args: DescribeThingRegistrationTaskCommandInput, cb: (err: any, data?: DescribeThingRegistrationTaskCommandOutput) => void): void;
            describeThingRegistrationTask(args: DescribeThingRegistrationTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeThingRegistrationTaskCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified thing type.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingType</a> action.</p>
                */
            describeThingType(args: DescribeThingTypeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeThingTypeCommandOutput>;
            describeThingType(args: DescribeThingTypeCommandInput, cb: (err: any, data?: DescribeThingTypeCommandOutput) => void): void;
            describeThingType(args: DescribeThingTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeThingTypeCommandOutput) => void): void;
            /**
                * <p>Detaches a policy from the specified target.</p>
                *          <note>
                *             <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after
                *          a policy is detached before it's ready to be deleted.</p>
                *          </note>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachPolicy</a> action.</p>
                */
            detachPolicy(args: DetachPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DetachPolicyCommandOutput>;
            detachPolicy(args: DetachPolicyCommandInput, cb: (err: any, data?: DetachPolicyCommandOutput) => void): void;
            detachPolicy(args: DetachPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachPolicyCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Removes the specified policy from the specified certificate.</p>
                *          <note>
                *             <p>This action is deprecated. Please use <a>DetachPolicy</a> instead.</p>
                *          </note>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachPrincipalPolicy</a> action.</p>
                */
            detachPrincipalPolicy(args: DetachPrincipalPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DetachPrincipalPolicyCommandOutput>;
            detachPrincipalPolicy(args: DetachPrincipalPolicyCommandInput, cb: (err: any, data?: DetachPrincipalPolicyCommandOutput) => void): void;
            detachPrincipalPolicy(args: DetachPrincipalPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachPrincipalPolicyCommandOutput) => void): void;
            /**
                * <p>Disassociates a Device Defender security profile from a thing group or from this account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachSecurityProfile</a> action.</p>
                */
            detachSecurityProfile(args: DetachSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DetachSecurityProfileCommandOutput>;
            detachSecurityProfile(args: DetachSecurityProfileCommandInput, cb: (err: any, data?: DetachSecurityProfileCommandOutput) => void): void;
            detachSecurityProfile(args: DetachSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Detaches the specified principal from the specified thing. A principal can be X.509
                * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
                * 			identities.</p>
                * 		       <note>
                * 			         <p>This call is asynchronous. It might take several seconds for the detachment to
                * 				propagate.</p>
                * 		       </note>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachThingPrincipal</a> action.</p>
                */
            detachThingPrincipal(args: DetachThingPrincipalCommandInput, options?: __HttpHandlerOptions): Promise<DetachThingPrincipalCommandOutput>;
            detachThingPrincipal(args: DetachThingPrincipalCommandInput, cb: (err: any, data?: DetachThingPrincipalCommandOutput) => void): void;
            detachThingPrincipal(args: DetachThingPrincipalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachThingPrincipalCommandOutput) => void): void;
            /**
                * <p>Disables the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DisableTopicRule</a> action.</p>
                */
            disableTopicRule(args: DisableTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<DisableTopicRuleCommandOutput>;
            disableTopicRule(args: DisableTopicRuleCommandInput, cb: (err: any, data?: DisableTopicRuleCommandOutput) => void): void;
            disableTopicRule(args: DisableTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableTopicRuleCommandOutput) => void): void;
            /**
                * <p>Enables the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">EnableTopicRule</a> action.</p>
                */
            enableTopicRule(args: EnableTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<EnableTopicRuleCommandOutput>;
            enableTopicRule(args: EnableTopicRuleCommandInput, cb: (err: any, data?: EnableTopicRuleCommandOutput) => void): void;
            enableTopicRule(args: EnableTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableTopicRuleCommandOutput) => void): void;
            /**
                * <p>
                *       Returns a Device Defender's ML Detect Security Profile training model's status.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetBehaviorModelTrainingSummaries</a> action.</p>
                */
            getBehaviorModelTrainingSummaries(args: GetBehaviorModelTrainingSummariesCommandInput, options?: __HttpHandlerOptions): Promise<GetBehaviorModelTrainingSummariesCommandOutput>;
            getBehaviorModelTrainingSummaries(args: GetBehaviorModelTrainingSummariesCommandInput, cb: (err: any, data?: GetBehaviorModelTrainingSummariesCommandOutput) => void): void;
            getBehaviorModelTrainingSummaries(args: GetBehaviorModelTrainingSummariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBehaviorModelTrainingSummariesCommandOutput) => void): void;
            /**
                * <p>Aggregates on indexed data with search queries pertaining to particular fields. </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetBucketsAggregation</a> action.</p>
                */
            getBucketsAggregation(args: GetBucketsAggregationCommandInput, options?: __HttpHandlerOptions): Promise<GetBucketsAggregationCommandOutput>;
            getBucketsAggregation(args: GetBucketsAggregationCommandInput, cb: (err: any, data?: GetBucketsAggregationCommandOutput) => void): void;
            getBucketsAggregation(args: GetBucketsAggregationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBucketsAggregationCommandOutput) => void): void;
            /**
                * <p>Returns the approximate count of unique values that match the query.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetCardinality</a> action.</p>
                */
            getCardinality(args: GetCardinalityCommandInput, options?: __HttpHandlerOptions): Promise<GetCardinalityCommandOutput>;
            getCardinality(args: GetCardinalityCommandInput, cb: (err: any, data?: GetCardinalityCommandOutput) => void): void;
            getCardinality(args: GetCardinalityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCardinalityCommandOutput) => void): void;
            /**
                * <p>Gets a list of the policies that have an effect on the authorization behavior of the
                *          specified device when it connects to the IoT device gateway.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetEffectivePolicies</a> action.</p>
                */
            getEffectivePolicies(args: GetEffectivePoliciesCommandInput, options?: __HttpHandlerOptions): Promise<GetEffectivePoliciesCommandOutput>;
            getEffectivePolicies(args: GetEffectivePoliciesCommandInput, cb: (err: any, data?: GetEffectivePoliciesCommandOutput) => void): void;
            getEffectivePolicies(args: GetEffectivePoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEffectivePoliciesCommandOutput) => void): void;
            /**
                * <p>Gets the indexing configuration.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetIndexingConfiguration</a> action.</p>
                */
            getIndexingConfiguration(args: GetIndexingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetIndexingConfigurationCommandOutput>;
            getIndexingConfiguration(args: GetIndexingConfigurationCommandInput, cb: (err: any, data?: GetIndexingConfigurationCommandOutput) => void): void;
            getIndexingConfiguration(args: GetIndexingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIndexingConfigurationCommandOutput) => void): void;
            /**
                * <p>Gets a job document.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetJobDocument</a> action.</p>
                */
            getJobDocument(args: GetJobDocumentCommandInput, options?: __HttpHandlerOptions): Promise<GetJobDocumentCommandOutput>;
            getJobDocument(args: GetJobDocumentCommandInput, cb: (err: any, data?: GetJobDocumentCommandOutput) => void): void;
            getJobDocument(args: GetJobDocumentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetJobDocumentCommandOutput) => void): void;
            /**
                * <p>Gets the logging options.</p>
                *          <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code>
                *          instead.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetLoggingOptions</a> action.</p>
                */
            getLoggingOptions(args: GetLoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<GetLoggingOptionsCommandOutput>;
            getLoggingOptions(args: GetLoggingOptionsCommandInput, cb: (err: any, data?: GetLoggingOptionsCommandOutput) => void): void;
            getLoggingOptions(args: GetLoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Gets an OTA update.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetOTAUpdate</a> action.</p>
                */
            getOTAUpdate(args: GetOTAUpdateCommandInput, options?: __HttpHandlerOptions): Promise<GetOTAUpdateCommandOutput>;
            getOTAUpdate(args: GetOTAUpdateCommandInput, cb: (err: any, data?: GetOTAUpdateCommandOutput) => void): void;
            getOTAUpdate(args: GetOTAUpdateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetOTAUpdateCommandOutput) => void): void;
            /**
                * <p>Groups the aggregated values that match the query into percentile groupings. The default
                *         percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own
                *         when you call <code>GetPercentiles</code>. This function returns a value for each
                *         percentile group specified (or the default percentile groupings). The percentile group
                *         "1" contains the aggregated field value that occurs in approximately one percent of the
                *         values that match the query. The percentile group "5" contains the aggregated field value
                *         that occurs in approximately five percent of the values that match the query, and so on.
                *         The result is an approximation, the more values that match the query, the more accurate
                *         the percentile values.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPercentiles</a> action.</p>
                */
            getPercentiles(args: GetPercentilesCommandInput, options?: __HttpHandlerOptions): Promise<GetPercentilesCommandOutput>;
            getPercentiles(args: GetPercentilesCommandInput, cb: (err: any, data?: GetPercentilesCommandOutput) => void): void;
            getPercentiles(args: GetPercentilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPercentilesCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified policy with the policy document of the default
                *          version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPolicy</a> action.</p>
                */
            getPolicy(args: GetPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetPolicyCommandOutput>;
            getPolicy(args: GetPolicyCommandInput, cb: (err: any, data?: GetPolicyCommandOutput) => void): void;
            getPolicy(args: GetPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPolicyCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified policy version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPolicyVersion</a> action.</p>
                */
            getPolicyVersion(args: GetPolicyVersionCommandInput, options?: __HttpHandlerOptions): Promise<GetPolicyVersionCommandOutput>;
            getPolicyVersion(args: GetPolicyVersionCommandInput, cb: (err: any, data?: GetPolicyVersionCommandOutput) => void): void;
            getPolicyVersion(args: GetPolicyVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPolicyVersionCommandOutput) => void): void;
            /**
                * <p>Gets a registration code used to register a CA certificate with IoT.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetRegistrationCode</a> action.</p>
                */
            getRegistrationCode(args: GetRegistrationCodeCommandInput, options?: __HttpHandlerOptions): Promise<GetRegistrationCodeCommandOutput>;
            getRegistrationCode(args: GetRegistrationCodeCommandInput, cb: (err: any, data?: GetRegistrationCodeCommandOutput) => void): void;
            getRegistrationCode(args: GetRegistrationCodeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRegistrationCodeCommandOutput) => void): void;
            /**
                * <p>Returns the count, average, sum, minimum, maximum, sum of squares, variance,
                *       and standard deviation for the specified aggregated field. If the aggregation field is of type
                *       <code>String</code>, only the count statistic is returned.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetStatistics</a> action.</p>
                */
            getStatistics(args: GetStatisticsCommandInput, options?: __HttpHandlerOptions): Promise<GetStatisticsCommandOutput>;
            getStatistics(args: GetStatisticsCommandInput, cb: (err: any, data?: GetStatisticsCommandOutput) => void): void;
            getStatistics(args: GetStatisticsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetStatisticsCommandOutput) => void): void;
            /**
                * <p>Gets information about the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetTopicRule</a> action.</p>
                */
            getTopicRule(args: GetTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<GetTopicRuleCommandOutput>;
            getTopicRule(args: GetTopicRuleCommandInput, cb: (err: any, data?: GetTopicRuleCommandOutput) => void): void;
            getTopicRule(args: GetTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTopicRuleCommandOutput) => void): void;
            /**
                * <p>Gets information about a topic rule destination.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetTopicRuleDestination</a> action.</p>
                */
            getTopicRuleDestination(args: GetTopicRuleDestinationCommandInput, options?: __HttpHandlerOptions): Promise<GetTopicRuleDestinationCommandOutput>;
            getTopicRuleDestination(args: GetTopicRuleDestinationCommandInput, cb: (err: any, data?: GetTopicRuleDestinationCommandOutput) => void): void;
            getTopicRuleDestination(args: GetTopicRuleDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTopicRuleDestinationCommandOutput) => void): void;
            /**
                * <p>Gets the fine grained logging options.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetV2LoggingOptions</a> action.</p>
                */
            getV2LoggingOptions(args: GetV2LoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<GetV2LoggingOptionsCommandOutput>;
            getV2LoggingOptions(args: GetV2LoggingOptionsCommandInput, cb: (err: any, data?: GetV2LoggingOptionsCommandOutput) => void): void;
            getV2LoggingOptions(args: GetV2LoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetV2LoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Lists the active violations for a given Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListActiveViolations</a> action.</p>
                */
            listActiveViolations(args: ListActiveViolationsCommandInput, options?: __HttpHandlerOptions): Promise<ListActiveViolationsCommandOutput>;
            listActiveViolations(args: ListActiveViolationsCommandInput, cb: (err: any, data?: ListActiveViolationsCommandOutput) => void): void;
            listActiveViolations(args: ListActiveViolationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListActiveViolationsCommandOutput) => void): void;
            /**
                * <p>Lists the policies attached to the specified thing group.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAttachedPolicies</a> action.</p>
                */
            listAttachedPolicies(args: ListAttachedPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListAttachedPoliciesCommandOutput>;
            listAttachedPolicies(args: ListAttachedPoliciesCommandInput, cb: (err: any, data?: ListAttachedPoliciesCommandOutput) => void): void;
            listAttachedPolicies(args: ListAttachedPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAttachedPoliciesCommandOutput) => void): void;
            /**
                * <p>Lists the findings (results) of a Device Defender audit or of the audits
                *         performed during a specified time period. (Findings are retained for 90 days.)</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditFindings</a> action.</p>
                */
            listAuditFindings(args: ListAuditFindingsCommandInput, options?: __HttpHandlerOptions): Promise<ListAuditFindingsCommandOutput>;
            listAuditFindings(args: ListAuditFindingsCommandInput, cb: (err: any, data?: ListAuditFindingsCommandOutput) => void): void;
            listAuditFindings(args: ListAuditFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuditFindingsCommandOutput) => void): void;
            /**
                * <p>Gets the status of audit mitigation action tasks that were
                *       executed.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditMitigationActionsExecutions</a> action.</p>
                */
            listAuditMitigationActionsExecutions(args: ListAuditMitigationActionsExecutionsCommandInput, options?: __HttpHandlerOptions): Promise<ListAuditMitigationActionsExecutionsCommandOutput>;
            listAuditMitigationActionsExecutions(args: ListAuditMitigationActionsExecutionsCommandInput, cb: (err: any, data?: ListAuditMitigationActionsExecutionsCommandOutput) => void): void;
            listAuditMitigationActionsExecutions(args: ListAuditMitigationActionsExecutionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuditMitigationActionsExecutionsCommandOutput) => void): void;
            /**
                * <p>Gets a list of audit mitigation action tasks that match the specified filters.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditMitigationActionsTasks</a> action.</p>
                */
            listAuditMitigationActionsTasks(args: ListAuditMitigationActionsTasksCommandInput, options?: __HttpHandlerOptions): Promise<ListAuditMitigationActionsTasksCommandOutput>;
            listAuditMitigationActionsTasks(args: ListAuditMitigationActionsTasksCommandInput, cb: (err: any, data?: ListAuditMitigationActionsTasksCommandOutput) => void): void;
            listAuditMitigationActionsTasks(args: ListAuditMitigationActionsTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuditMitigationActionsTasksCommandOutput) => void): void;
            /**
                * <p>
                *       Lists your Device Defender audit listings.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditSuppressions</a> action.</p>
                */
            listAuditSuppressions(args: ListAuditSuppressionsCommandInput, options?: __HttpHandlerOptions): Promise<ListAuditSuppressionsCommandOutput>;
            listAuditSuppressions(args: ListAuditSuppressionsCommandInput, cb: (err: any, data?: ListAuditSuppressionsCommandOutput) => void): void;
            listAuditSuppressions(args: ListAuditSuppressionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuditSuppressionsCommandOutput) => void): void;
            /**
                * <p>Lists the Device Defender audits that have been performed during a given
                *           time period.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditTasks</a> action.</p>
                */
            listAuditTasks(args: ListAuditTasksCommandInput, options?: __HttpHandlerOptions): Promise<ListAuditTasksCommandOutput>;
            listAuditTasks(args: ListAuditTasksCommandInput, cb: (err: any, data?: ListAuditTasksCommandOutput) => void): void;
            listAuditTasks(args: ListAuditTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuditTasksCommandOutput) => void): void;
            /**
                * <p>Lists the authorizers registered in your account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuthorizers</a> action.</p>
                */
            listAuthorizers(args: ListAuthorizersCommandInput, options?: __HttpHandlerOptions): Promise<ListAuthorizersCommandOutput>;
            listAuthorizers(args: ListAuthorizersCommandInput, cb: (err: any, data?: ListAuthorizersCommandOutput) => void): void;
            listAuthorizers(args: ListAuthorizersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAuthorizersCommandOutput) => void): void;
            /**
                * <p>Lists the billing groups you have created.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListBillingGroups</a> action.</p>
                */
            listBillingGroups(args: ListBillingGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListBillingGroupsCommandOutput>;
            listBillingGroups(args: ListBillingGroupsCommandInput, cb: (err: any, data?: ListBillingGroupsCommandOutput) => void): void;
            listBillingGroups(args: ListBillingGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBillingGroupsCommandOutput) => void): void;
            /**
                * <p>Lists the CA certificates registered for your Amazon Web Services account.</p>
                *          <p>The results are paginated with a default page size of 25. You can use the returned
                *          marker to retrieve additional results.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCACertificates</a> action.</p>
                */
            listCACertificates(args: ListCACertificatesCommandInput, options?: __HttpHandlerOptions): Promise<ListCACertificatesCommandOutput>;
            listCACertificates(args: ListCACertificatesCommandInput, cb: (err: any, data?: ListCACertificatesCommandOutput) => void): void;
            listCACertificates(args: ListCACertificatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCACertificatesCommandOutput) => void): void;
            /**
                * <p>Lists the certificates registered in your Amazon Web Services account.</p>
                *          <p>The results are paginated with a default page size of 25. You can use the returned
                *          marker to retrieve additional results.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCertificates</a> action.</p>
                */
            listCertificates(args: ListCertificatesCommandInput, options?: __HttpHandlerOptions): Promise<ListCertificatesCommandOutput>;
            listCertificates(args: ListCertificatesCommandInput, cb: (err: any, data?: ListCertificatesCommandOutput) => void): void;
            listCertificates(args: ListCertificatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCertificatesCommandOutput) => void): void;
            /**
                * <p>List the device certificates signed by the specified CA certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCertificatesByCA</a> action.</p>
                */
            listCertificatesByCA(args: ListCertificatesByCACommandInput, options?: __HttpHandlerOptions): Promise<ListCertificatesByCACommandOutput>;
            listCertificatesByCA(args: ListCertificatesByCACommandInput, cb: (err: any, data?: ListCertificatesByCACommandOutput) => void): void;
            listCertificatesByCA(args: ListCertificatesByCACommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCertificatesByCACommandOutput) => void): void;
            /**
                * <p>
                *       Lists your Device Defender detect custom metrics.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCustomMetrics</a> action.</p>
                */
            listCustomMetrics(args: ListCustomMetricsCommandInput, options?: __HttpHandlerOptions): Promise<ListCustomMetricsCommandOutput>;
            listCustomMetrics(args: ListCustomMetricsCommandInput, cb: (err: any, data?: ListCustomMetricsCommandOutput) => void): void;
            listCustomMetrics(args: ListCustomMetricsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCustomMetricsCommandOutput) => void): void;
            /**
                * <p>
                *       Lists mitigation actions executions for a Device Defender ML Detect Security Profile.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDetectMitigationActionsExecutions</a> action.</p>
                */
            listDetectMitigationActionsExecutions(args: ListDetectMitigationActionsExecutionsCommandInput, options?: __HttpHandlerOptions): Promise<ListDetectMitigationActionsExecutionsCommandOutput>;
            listDetectMitigationActionsExecutions(args: ListDetectMitigationActionsExecutionsCommandInput, cb: (err: any, data?: ListDetectMitigationActionsExecutionsCommandOutput) => void): void;
            listDetectMitigationActionsExecutions(args: ListDetectMitigationActionsExecutionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDetectMitigationActionsExecutionsCommandOutput) => void): void;
            /**
                * <p>
                *       List of Device Defender ML Detect mitigation actions tasks.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDetectMitigationActionsTasks</a> action.</p>
                */
            listDetectMitigationActionsTasks(args: ListDetectMitigationActionsTasksCommandInput, options?: __HttpHandlerOptions): Promise<ListDetectMitigationActionsTasksCommandOutput>;
            listDetectMitigationActionsTasks(args: ListDetectMitigationActionsTasksCommandInput, cb: (err: any, data?: ListDetectMitigationActionsTasksCommandOutput) => void): void;
            listDetectMitigationActionsTasks(args: ListDetectMitigationActionsTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDetectMitigationActionsTasksCommandOutput) => void): void;
            /**
                * <p>List the set of dimensions that are defined for your Amazon Web Services accounts.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDimensions</a> action.</p>
                */
            listDimensions(args: ListDimensionsCommandInput, options?: __HttpHandlerOptions): Promise<ListDimensionsCommandOutput>;
            listDimensions(args: ListDimensionsCommandInput, cb: (err: any, data?: ListDimensionsCommandOutput) => void): void;
            listDimensions(args: ListDimensionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDimensionsCommandOutput) => void): void;
            /**
                * <p>Gets a list of domain configurations for the user. This list is sorted
                *          alphabetically by domain configuration name.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDomainConfigurations</a> action.</p>
                */
            listDomainConfigurations(args: ListDomainConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainConfigurationsCommandOutput>;
            listDomainConfigurations(args: ListDomainConfigurationsCommandInput, cb: (err: any, data?: ListDomainConfigurationsCommandOutput) => void): void;
            listDomainConfigurations(args: ListDomainConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainConfigurationsCommandOutput) => void): void;
            /**
                * <p>Lists all your fleet metrics. </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListFleetMetrics</a> action.</p>
                */
            listFleetMetrics(args: ListFleetMetricsCommandInput, options?: __HttpHandlerOptions): Promise<ListFleetMetricsCommandOutput>;
            listFleetMetrics(args: ListFleetMetricsCommandInput, cb: (err: any, data?: ListFleetMetricsCommandOutput) => void): void;
            listFleetMetrics(args: ListFleetMetricsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFleetMetricsCommandOutput) => void): void;
            /**
                * <p>Lists the search indices.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListIndices</a> action.</p>
                */
            listIndices(args: ListIndicesCommandInput, options?: __HttpHandlerOptions): Promise<ListIndicesCommandOutput>;
            listIndices(args: ListIndicesCommandInput, cb: (err: any, data?: ListIndicesCommandOutput) => void): void;
            listIndices(args: ListIndicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListIndicesCommandOutput) => void): void;
            /**
                * <p>Lists the job executions for a job.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobExecutionsForJob</a> action.</p>
                */
            listJobExecutionsForJob(args: ListJobExecutionsForJobCommandInput, options?: __HttpHandlerOptions): Promise<ListJobExecutionsForJobCommandOutput>;
            listJobExecutionsForJob(args: ListJobExecutionsForJobCommandInput, cb: (err: any, data?: ListJobExecutionsForJobCommandOutput) => void): void;
            listJobExecutionsForJob(args: ListJobExecutionsForJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobExecutionsForJobCommandOutput) => void): void;
            /**
                * <p>Lists the job executions for the specified thing.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobExecutionsForThing</a> action.</p>
                */
            listJobExecutionsForThing(args: ListJobExecutionsForThingCommandInput, options?: __HttpHandlerOptions): Promise<ListJobExecutionsForThingCommandOutput>;
            listJobExecutionsForThing(args: ListJobExecutionsForThingCommandInput, cb: (err: any, data?: ListJobExecutionsForThingCommandOutput) => void): void;
            listJobExecutionsForThing(args: ListJobExecutionsForThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobExecutionsForThingCommandOutput) => void): void;
            /**
                * <p>Lists jobs.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobs</a> action.</p>
                */
            listJobs(args: ListJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListJobsCommandOutput>;
            listJobs(args: ListJobsCommandInput, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            listJobs(args: ListJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            /**
                * <p>Returns a list of job templates.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobTemplates</a> action.</p>
                */
            listJobTemplates(args: ListJobTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListJobTemplatesCommandOutput>;
            listJobTemplates(args: ListJobTemplatesCommandInput, cb: (err: any, data?: ListJobTemplatesCommandOutput) => void): void;
            listJobTemplates(args: ListJobTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobTemplatesCommandOutput) => void): void;
            /**
                * <p>Returns a list of managed job templates.</p>
                */
            listManagedJobTemplates(args: ListManagedJobTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListManagedJobTemplatesCommandOutput>;
            listManagedJobTemplates(args: ListManagedJobTemplatesCommandInput, cb: (err: any, data?: ListManagedJobTemplatesCommandOutput) => void): void;
            listManagedJobTemplates(args: ListManagedJobTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListManagedJobTemplatesCommandOutput) => void): void;
            /**
                * <p>Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric)
                *       by the given thing during the specified time period.</p>
                */
            listMetricValues(args: ListMetricValuesCommandInput, options?: __HttpHandlerOptions): Promise<ListMetricValuesCommandOutput>;
            listMetricValues(args: ListMetricValuesCommandInput, cb: (err: any, data?: ListMetricValuesCommandOutput) => void): void;
            listMetricValues(args: ListMetricValuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMetricValuesCommandOutput) => void): void;
            /**
                * <p>Gets a list of all mitigation actions that match the specified filter criteria.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListMitigationActions</a> action.</p>
                */
            listMitigationActions(args: ListMitigationActionsCommandInput, options?: __HttpHandlerOptions): Promise<ListMitigationActionsCommandOutput>;
            listMitigationActions(args: ListMitigationActionsCommandInput, cb: (err: any, data?: ListMitigationActionsCommandOutput) => void): void;
            listMitigationActions(args: ListMitigationActionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMitigationActionsCommandOutput) => void): void;
            /**
                * <p>Lists OTA updates.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListOTAUpdates</a> action.</p>
                */
            listOTAUpdates(args: ListOTAUpdatesCommandInput, options?: __HttpHandlerOptions): Promise<ListOTAUpdatesCommandOutput>;
            listOTAUpdates(args: ListOTAUpdatesCommandInput, cb: (err: any, data?: ListOTAUpdatesCommandOutput) => void): void;
            listOTAUpdates(args: ListOTAUpdatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOTAUpdatesCommandOutput) => void): void;
            /**
                * <p>Lists certificates that are being transferred but not yet accepted.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListOutgoingCertificates</a> action.</p>
                */
            listOutgoingCertificates(args: ListOutgoingCertificatesCommandInput, options?: __HttpHandlerOptions): Promise<ListOutgoingCertificatesCommandOutput>;
            listOutgoingCertificates(args: ListOutgoingCertificatesCommandInput, cb: (err: any, data?: ListOutgoingCertificatesCommandOutput) => void): void;
            listOutgoingCertificates(args: ListOutgoingCertificatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOutgoingCertificatesCommandOutput) => void): void;
            /**
                * <p>Lists your policies.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicies</a> action.</p>
                */
            listPolicies(args: ListPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListPoliciesCommandOutput>;
            listPolicies(args: ListPoliciesCommandInput, cb: (err: any, data?: ListPoliciesCommandOutput) => void): void;
            listPolicies(args: ListPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPoliciesCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Lists the principals associated with the specified policy.</p>
                *          <p>
                *             <b>Note:</b> This action is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicyPrincipals</a> action.</p>
                */
            listPolicyPrincipals(args: ListPolicyPrincipalsCommandInput, options?: __HttpHandlerOptions): Promise<ListPolicyPrincipalsCommandOutput>;
            listPolicyPrincipals(args: ListPolicyPrincipalsCommandInput, cb: (err: any, data?: ListPolicyPrincipalsCommandOutput) => void): void;
            listPolicyPrincipals(args: ListPolicyPrincipalsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPolicyPrincipalsCommandOutput) => void): void;
            /**
                * <p>Lists the versions of the specified policy and identifies the default
                *          version.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicyVersions</a> action.</p>
                */
            listPolicyVersions(args: ListPolicyVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListPolicyVersionsCommandOutput>;
            listPolicyVersions(args: ListPolicyVersionsCommandInput, cb: (err: any, data?: ListPolicyVersionsCommandOutput) => void): void;
            listPolicyVersions(args: ListPolicyVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPolicyVersionsCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Lists the policies attached to the specified principal. If you use an Cognito
                *          identity, the ID must be in <a href="https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito Identity format</a>.</p>
                *          <p>
                *             <b>Note:</b> This action is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPrincipalPolicies</a> action.</p>
                */
            listPrincipalPolicies(args: ListPrincipalPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListPrincipalPoliciesCommandOutput>;
            listPrincipalPolicies(args: ListPrincipalPoliciesCommandInput, cb: (err: any, data?: ListPrincipalPoliciesCommandOutput) => void): void;
            listPrincipalPolicies(args: ListPrincipalPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPrincipalPoliciesCommandOutput) => void): void;
            /**
                * <p>Lists the things associated with the specified principal. A principal can be X.509
                * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
                * 			identities. </p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPrincipalThings</a> action.</p>
                */
            listPrincipalThings(args: ListPrincipalThingsCommandInput, options?: __HttpHandlerOptions): Promise<ListPrincipalThingsCommandOutput>;
            listPrincipalThings(args: ListPrincipalThingsCommandInput, cb: (err: any, data?: ListPrincipalThingsCommandOutput) => void): void;
            listPrincipalThings(args: ListPrincipalThingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPrincipalThingsCommandOutput) => void): void;
            /**
                * <p>Lists the fleet provisioning templates in your Amazon Web Services account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListProvisioningTemplates</a> action.</p>
                */
            listProvisioningTemplates(args: ListProvisioningTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisioningTemplatesCommandOutput>;
            listProvisioningTemplates(args: ListProvisioningTemplatesCommandInput, cb: (err: any, data?: ListProvisioningTemplatesCommandOutput) => void): void;
            listProvisioningTemplates(args: ListProvisioningTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisioningTemplatesCommandOutput) => void): void;
            /**
                * <p>A list of fleet provisioning template versions.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListProvisioningTemplateVersions</a> action.</p>
                */
            listProvisioningTemplateVersions(args: ListProvisioningTemplateVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisioningTemplateVersionsCommandOutput>;
            listProvisioningTemplateVersions(args: ListProvisioningTemplateVersionsCommandInput, cb: (err: any, data?: ListProvisioningTemplateVersionsCommandOutput) => void): void;
            listProvisioningTemplateVersions(args: ListProvisioningTemplateVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisioningTemplateVersionsCommandOutput) => void): void;
            /**
                * <p>Lists the role aliases registered in your account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListRoleAliases</a> action.</p>
                */
            listRoleAliases(args: ListRoleAliasesCommandInput, options?: __HttpHandlerOptions): Promise<ListRoleAliasesCommandOutput>;
            listRoleAliases(args: ListRoleAliasesCommandInput, cb: (err: any, data?: ListRoleAliasesCommandOutput) => void): void;
            listRoleAliases(args: ListRoleAliasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoleAliasesCommandOutput) => void): void;
            /**
                * <p>Lists all of your scheduled audits.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListScheduledAudits</a> action.</p>
                */
            listScheduledAudits(args: ListScheduledAuditsCommandInput, options?: __HttpHandlerOptions): Promise<ListScheduledAuditsCommandOutput>;
            listScheduledAudits(args: ListScheduledAuditsCommandInput, cb: (err: any, data?: ListScheduledAuditsCommandOutput) => void): void;
            listScheduledAudits(args: ListScheduledAuditsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListScheduledAuditsCommandOutput) => void): void;
            /**
                * <p>Lists the Device Defender security profiles
                *       you've
                *       created. You can filter security profiles by dimension or custom metric.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListSecurityProfiles</a> action.</p>
                *          <note>
                *             <p>
                *                <code>dimensionName</code> and <code>metricName</code> cannot be used in the same request.</p>
                *          </note>
                */
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilesCommandOutput>;
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
            /**
                * <p>Lists the Device Defender security profiles attached to a target (thing group).</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListSecurityProfilesForTarget</a> action.</p>
                */
            listSecurityProfilesForTarget(args: ListSecurityProfilesForTargetCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilesForTargetCommandOutput>;
            listSecurityProfilesForTarget(args: ListSecurityProfilesForTargetCommandInput, cb: (err: any, data?: ListSecurityProfilesForTargetCommandOutput) => void): void;
            listSecurityProfilesForTarget(args: ListSecurityProfilesForTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilesForTargetCommandOutput) => void): void;
            /**
                * <p>Lists all of the streams in your Amazon Web Services account.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListStreams</a> action.</p>
                */
            listStreams(args: ListStreamsCommandInput, options?: __HttpHandlerOptions): Promise<ListStreamsCommandOutput>;
            listStreams(args: ListStreamsCommandInput, cb: (err: any, data?: ListStreamsCommandOutput) => void): void;
            listStreams(args: ListStreamsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStreamsCommandOutput) => void): void;
            /**
                * <p>Lists the tags (metadata) you have assigned to the resource.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTagsForResource</a> action.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>List targets for the specified policy.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTargetsForPolicy</a> action.</p>
                */
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, options?: __HttpHandlerOptions): Promise<ListTargetsForPolicyCommandOutput>;
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, cb: (err: any, data?: ListTargetsForPolicyCommandOutput) => void): void;
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTargetsForPolicyCommandOutput) => void): void;
            /**
                * <p>Lists the targets (thing groups) associated with a given Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTargetsForSecurityProfile</a> action.</p>
                */
            listTargetsForSecurityProfile(args: ListTargetsForSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<ListTargetsForSecurityProfileCommandOutput>;
            listTargetsForSecurityProfile(args: ListTargetsForSecurityProfileCommandInput, cb: (err: any, data?: ListTargetsForSecurityProfileCommandOutput) => void): void;
            listTargetsForSecurityProfile(args: ListTargetsForSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTargetsForSecurityProfileCommandOutput) => void): void;
            /**
                * <p>List the thing groups in your account.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingGroups</a> action.</p>
                */
            listThingGroups(args: ListThingGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListThingGroupsCommandOutput>;
            listThingGroups(args: ListThingGroupsCommandInput, cb: (err: any, data?: ListThingGroupsCommandOutput) => void): void;
            listThingGroups(args: ListThingGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingGroupsCommandOutput) => void): void;
            /**
                * <p>List the thing groups to which the specified thing belongs.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingGroupsForThing</a> action.</p>
                */
            listThingGroupsForThing(args: ListThingGroupsForThingCommandInput, options?: __HttpHandlerOptions): Promise<ListThingGroupsForThingCommandOutput>;
            listThingGroupsForThing(args: ListThingGroupsForThingCommandInput, cb: (err: any, data?: ListThingGroupsForThingCommandOutput) => void): void;
            listThingGroupsForThing(args: ListThingGroupsForThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingGroupsForThingCommandOutput) => void): void;
            /**
                * <p>Lists the principals associated with the specified thing. A principal can be X.509
                * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
                * 			identities.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingPrincipals</a> action.</p>
                */
            listThingPrincipals(args: ListThingPrincipalsCommandInput, options?: __HttpHandlerOptions): Promise<ListThingPrincipalsCommandOutput>;
            listThingPrincipals(args: ListThingPrincipalsCommandInput, cb: (err: any, data?: ListThingPrincipalsCommandOutput) => void): void;
            listThingPrincipals(args: ListThingPrincipalsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingPrincipalsCommandOutput) => void): void;
            /**
                * <p>Information about the thing registration tasks.</p>
                */
            listThingRegistrationTaskReports(args: ListThingRegistrationTaskReportsCommandInput, options?: __HttpHandlerOptions): Promise<ListThingRegistrationTaskReportsCommandOutput>;
            listThingRegistrationTaskReports(args: ListThingRegistrationTaskReportsCommandInput, cb: (err: any, data?: ListThingRegistrationTaskReportsCommandOutput) => void): void;
            listThingRegistrationTaskReports(args: ListThingRegistrationTaskReportsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingRegistrationTaskReportsCommandOutput) => void): void;
            /**
                * <p>List bulk thing provisioning tasks.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingRegistrationTasks</a> action.</p>
                */
            listThingRegistrationTasks(args: ListThingRegistrationTasksCommandInput, options?: __HttpHandlerOptions): Promise<ListThingRegistrationTasksCommandOutput>;
            listThingRegistrationTasks(args: ListThingRegistrationTasksCommandInput, cb: (err: any, data?: ListThingRegistrationTasksCommandOutput) => void): void;
            listThingRegistrationTasks(args: ListThingRegistrationTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingRegistrationTasksCommandOutput) => void): void;
            /**
                * <p>Lists your things. Use the <b>attributeName</b> and
                * 				<b>attributeValue</b> parameters to filter your things.
                * 			For example, calling <code>ListThings</code> with attributeName=Color and
                * 			attributeValue=Red retrieves all things in the registry that contain an attribute
                * 				<b>Color</b> with the value <b>Red</b>. </p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThings</a> action.</p>
                *
                * 		       <note>
                * 			         <p>You will not be charged for calling this API if an <code>Access denied</code> error is returned. You will also not be charged if no attributes or pagination token was provided in request and no pagination token and no results were returned.</p>
                * 		       </note>
                */
            listThings(args: ListThingsCommandInput, options?: __HttpHandlerOptions): Promise<ListThingsCommandOutput>;
            listThings(args: ListThingsCommandInput, cb: (err: any, data?: ListThingsCommandOutput) => void): void;
            listThings(args: ListThingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingsCommandOutput) => void): void;
            /**
                * <p>Lists the things you have added to the given billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingsInBillingGroup</a> action.</p>
                */
            listThingsInBillingGroup(args: ListThingsInBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<ListThingsInBillingGroupCommandOutput>;
            listThingsInBillingGroup(args: ListThingsInBillingGroupCommandInput, cb: (err: any, data?: ListThingsInBillingGroupCommandOutput) => void): void;
            listThingsInBillingGroup(args: ListThingsInBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingsInBillingGroupCommandOutput) => void): void;
            /**
                * <p>Lists the things in the specified group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingsInThingGroup</a> action.</p>
                */
            listThingsInThingGroup(args: ListThingsInThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<ListThingsInThingGroupCommandOutput>;
            listThingsInThingGroup(args: ListThingsInThingGroupCommandInput, cb: (err: any, data?: ListThingsInThingGroupCommandOutput) => void): void;
            listThingsInThingGroup(args: ListThingsInThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingsInThingGroupCommandOutput) => void): void;
            /**
                * <p>Lists the existing thing types.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingTypes</a> action.</p>
                */
            listThingTypes(args: ListThingTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListThingTypesCommandOutput>;
            listThingTypes(args: ListThingTypesCommandInput, cb: (err: any, data?: ListThingTypesCommandOutput) => void): void;
            listThingTypes(args: ListThingTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListThingTypesCommandOutput) => void): void;
            /**
                * <p>Lists all the topic rule destinations in your Amazon Web Services account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTopicRuleDestinations</a> action.</p>
                */
            listTopicRuleDestinations(args: ListTopicRuleDestinationsCommandInput, options?: __HttpHandlerOptions): Promise<ListTopicRuleDestinationsCommandOutput>;
            listTopicRuleDestinations(args: ListTopicRuleDestinationsCommandInput, cb: (err: any, data?: ListTopicRuleDestinationsCommandOutput) => void): void;
            listTopicRuleDestinations(args: ListTopicRuleDestinationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTopicRuleDestinationsCommandOutput) => void): void;
            /**
                * <p>Lists the rules for the specific topic.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTopicRules</a> action.</p>
                */
            listTopicRules(args: ListTopicRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListTopicRulesCommandOutput>;
            listTopicRules(args: ListTopicRulesCommandInput, cb: (err: any, data?: ListTopicRulesCommandOutput) => void): void;
            listTopicRules(args: ListTopicRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTopicRulesCommandOutput) => void): void;
            /**
                * <p>Lists logging levels.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListV2LoggingLevels</a> action.</p>
                */
            listV2LoggingLevels(args: ListV2LoggingLevelsCommandInput, options?: __HttpHandlerOptions): Promise<ListV2LoggingLevelsCommandOutput>;
            listV2LoggingLevels(args: ListV2LoggingLevelsCommandInput, cb: (err: any, data?: ListV2LoggingLevelsCommandOutput) => void): void;
            listV2LoggingLevels(args: ListV2LoggingLevelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListV2LoggingLevelsCommandOutput) => void): void;
            /**
                * <p>Lists the Device Defender security profile violations discovered during the given time period.
                *       You can use filters to limit the results to those alerts issued for a particular security profile,
                *       behavior, or thing (device).</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListViolationEvents</a> action.</p>
                */
            listViolationEvents(args: ListViolationEventsCommandInput, options?: __HttpHandlerOptions): Promise<ListViolationEventsCommandOutput>;
            listViolationEvents(args: ListViolationEventsCommandInput, cb: (err: any, data?: ListViolationEventsCommandOutput) => void): void;
            listViolationEvents(args: ListViolationEventsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListViolationEventsCommandOutput) => void): void;
            /**
                * <p>Set a verification state and provide a description of that verification state on a violation (detect alarm).</p>
                */
            putVerificationStateOnViolation(args: PutVerificationStateOnViolationCommandInput, options?: __HttpHandlerOptions): Promise<PutVerificationStateOnViolationCommandOutput>;
            putVerificationStateOnViolation(args: PutVerificationStateOnViolationCommandInput, cb: (err: any, data?: PutVerificationStateOnViolationCommandOutput) => void): void;
            putVerificationStateOnViolation(args: PutVerificationStateOnViolationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVerificationStateOnViolationCommandOutput) => void): void;
            /**
                * <p>Registers a CA certificate with Amazon Web Services IoT Core. There is no limit to the number of CA
                *          certificates you can register in your Amazon Web Services account. You can register up to 10 CA
                *          certificates with the same <code>CA subject field</code> per Amazon Web Services account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterCACertificate</a> action.</p>
                */
            registerCACertificate(args: RegisterCACertificateCommandInput, options?: __HttpHandlerOptions): Promise<RegisterCACertificateCommandOutput>;
            registerCACertificate(args: RegisterCACertificateCommandInput, cb: (err: any, data?: RegisterCACertificateCommandOutput) => void): void;
            registerCACertificate(args: RegisterCACertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterCACertificateCommandOutput) => void): void;
            /**
                * <p>Registers a device certificate with IoT in the same <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode">certificate mode</a> as the signing CA. If you have more than one CA certificate that has the same subject field, you must
                *          specify the CA certificate that was used to sign the device certificate being
                *          registered.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterCertificate</a> action.</p>
                */
            registerCertificate(args: RegisterCertificateCommandInput, options?: __HttpHandlerOptions): Promise<RegisterCertificateCommandOutput>;
            registerCertificate(args: RegisterCertificateCommandInput, cb: (err: any, data?: RegisterCertificateCommandOutput) => void): void;
            registerCertificate(args: RegisterCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterCertificateCommandOutput) => void): void;
            /**
                * <p>Register a certificate that does not have a certificate authority (CA).
                *          For supported certificates, consult <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms">
                *          Certificate signing algorithms supported by IoT</a>.
                *       </p>
                */
            registerCertificateWithoutCA(args: RegisterCertificateWithoutCACommandInput, options?: __HttpHandlerOptions): Promise<RegisterCertificateWithoutCACommandOutput>;
            registerCertificateWithoutCA(args: RegisterCertificateWithoutCACommandInput, cb: (err: any, data?: RegisterCertificateWithoutCACommandOutput) => void): void;
            registerCertificateWithoutCA(args: RegisterCertificateWithoutCACommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterCertificateWithoutCACommandOutput) => void): void;
            /**
                * <p>Provisions a thing in the device registry. RegisterThing calls other IoT control
                *          plane APIs. These calls might exceed your account level <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot">
                *             IoT Throttling Limits</a> and cause throttle errors. Please contact <a href="https://console.aws.amazon.com/support/home">Amazon Web Services Customer Support</a> to raise
                *          your throttling limits if necessary.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterThing</a> action.</p>
                */
            registerThing(args: RegisterThingCommandInput, options?: __HttpHandlerOptions): Promise<RegisterThingCommandOutput>;
            registerThing(args: RegisterThingCommandInput, cb: (err: any, data?: RegisterThingCommandOutput) => void): void;
            registerThing(args: RegisterThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterThingCommandOutput) => void): void;
            /**
                * <p>Rejects a pending certificate transfer. After IoT rejects a certificate transfer,
                *          the certificate status changes from <b>PENDING_TRANSFER</b> to
                *             <b>INACTIVE</b>.</p>
                *          <p>To check for pending certificate transfers, call <a>ListCertificates</a>
                *          to enumerate your certificates.</p>
                *          <p>This operation can only be called by the transfer destination. After it is called,
                *          the certificate will be returned to the source's account in the INACTIVE state.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RejectCertificateTransfer</a> action.</p>
                */
            rejectCertificateTransfer(args: RejectCertificateTransferCommandInput, options?: __HttpHandlerOptions): Promise<RejectCertificateTransferCommandOutput>;
            rejectCertificateTransfer(args: RejectCertificateTransferCommandInput, cb: (err: any, data?: RejectCertificateTransferCommandOutput) => void): void;
            rejectCertificateTransfer(args: RejectCertificateTransferCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectCertificateTransferCommandOutput) => void): void;
            /**
                * <p>Removes the given thing from the billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RemoveThingFromBillingGroup</a> action.</p>
                * 		       <note>
                *             <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p>
                *          </note>
                */
            removeThingFromBillingGroup(args: RemoveThingFromBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<RemoveThingFromBillingGroupCommandOutput>;
            removeThingFromBillingGroup(args: RemoveThingFromBillingGroupCommandInput, cb: (err: any, data?: RemoveThingFromBillingGroupCommandOutput) => void): void;
            removeThingFromBillingGroup(args: RemoveThingFromBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveThingFromBillingGroupCommandOutput) => void): void;
            /**
                * <p>Remove the specified thing from the specified group.</p>
                * 		       <p>You must specify either a <code>thingGroupArn</code> or a
                * 			<code>thingGroupName</code> to identify the thing group and
                * 			either a <code>thingArn</code> or a <code>thingName</code> to
                * 			identify the thing to remove from the thing group.
                * 		</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RemoveThingFromThingGroup</a> action.</p>
                */
            removeThingFromThingGroup(args: RemoveThingFromThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<RemoveThingFromThingGroupCommandOutput>;
            removeThingFromThingGroup(args: RemoveThingFromThingGroupCommandInput, cb: (err: any, data?: RemoveThingFromThingGroupCommandOutput) => void): void;
            removeThingFromThingGroup(args: RemoveThingFromThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveThingFromThingGroupCommandOutput) => void): void;
            /**
                * <p>Replaces the rule. You must specify all parameters for the new rule. Creating rules
                *          is an administrator-level action. Any user who has permission to create rules will be able
                *          to access data processed by the rule.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ReplaceTopicRule</a> action.</p>
                */
            replaceTopicRule(args: ReplaceTopicRuleCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceTopicRuleCommandOutput>;
            replaceTopicRule(args: ReplaceTopicRuleCommandInput, cb: (err: any, data?: ReplaceTopicRuleCommandOutput) => void): void;
            replaceTopicRule(args: ReplaceTopicRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceTopicRuleCommandOutput) => void): void;
            /**
                * <p>The query search index.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SearchIndex</a> action.</p>
                */
            searchIndex(args: SearchIndexCommandInput, options?: __HttpHandlerOptions): Promise<SearchIndexCommandOutput>;
            searchIndex(args: SearchIndexCommandInput, cb: (err: any, data?: SearchIndexCommandOutput) => void): void;
            searchIndex(args: SearchIndexCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchIndexCommandOutput) => void): void;
            /**
                * <p>Sets the default authorizer. This will be used if a websocket connection is made
                *          without specifying an authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetDefaultAuthorizer</a> action.</p>
                */
            setDefaultAuthorizer(args: SetDefaultAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<SetDefaultAuthorizerCommandOutput>;
            setDefaultAuthorizer(args: SetDefaultAuthorizerCommandInput, cb: (err: any, data?: SetDefaultAuthorizerCommandOutput) => void): void;
            setDefaultAuthorizer(args: SetDefaultAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetDefaultAuthorizerCommandOutput) => void): void;
            /**
                * <p>Sets the specified version of the specified policy as the policy's default
                *          (operative) version. This action affects all certificates to which the policy is attached.
                *          To list the principals the policy is attached to, use the <a>ListPrincipalPolicies</a>
                *          action.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetDefaultPolicyVersion</a> action.</p>
                */
            setDefaultPolicyVersion(args: SetDefaultPolicyVersionCommandInput, options?: __HttpHandlerOptions): Promise<SetDefaultPolicyVersionCommandOutput>;
            setDefaultPolicyVersion(args: SetDefaultPolicyVersionCommandInput, cb: (err: any, data?: SetDefaultPolicyVersionCommandOutput) => void): void;
            setDefaultPolicyVersion(args: SetDefaultPolicyVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetDefaultPolicyVersionCommandOutput) => void): void;
            /**
                * <p>Sets the logging options.</p>
                *          <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code>
                *          instead.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetLoggingOptions</a> action.</p>
                */
            setLoggingOptions(args: SetLoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<SetLoggingOptionsCommandOutput>;
            setLoggingOptions(args: SetLoggingOptionsCommandInput, cb: (err: any, data?: SetLoggingOptionsCommandOutput) => void): void;
            setLoggingOptions(args: SetLoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetLoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Sets the logging level.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetV2LoggingLevel</a> action.</p>
                */
            setV2LoggingLevel(args: SetV2LoggingLevelCommandInput, options?: __HttpHandlerOptions): Promise<SetV2LoggingLevelCommandOutput>;
            setV2LoggingLevel(args: SetV2LoggingLevelCommandInput, cb: (err: any, data?: SetV2LoggingLevelCommandOutput) => void): void;
            setV2LoggingLevel(args: SetV2LoggingLevelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetV2LoggingLevelCommandOutput) => void): void;
            /**
                * <p>Sets the logging options for the V2 logging service.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetV2LoggingOptions</a> action.</p>
                */
            setV2LoggingOptions(args: SetV2LoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<SetV2LoggingOptionsCommandOutput>;
            setV2LoggingOptions(args: SetV2LoggingOptionsCommandInput, cb: (err: any, data?: SetV2LoggingOptionsCommandOutput) => void): void;
            setV2LoggingOptions(args: SetV2LoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetV2LoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Starts a task that applies a set of mitigation actions to the specified target.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartAuditMitigationActionsTask</a> action.</p>
                */
            startAuditMitigationActionsTask(args: StartAuditMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<StartAuditMitigationActionsTaskCommandOutput>;
            startAuditMitigationActionsTask(args: StartAuditMitigationActionsTaskCommandInput, cb: (err: any, data?: StartAuditMitigationActionsTaskCommandOutput) => void): void;
            startAuditMitigationActionsTask(args: StartAuditMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartAuditMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>
                *       Starts a Device Defender ML Detect mitigation actions task.
                *     </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartDetectMitigationActionsTask</a> action.</p>
                */
            startDetectMitigationActionsTask(args: StartDetectMitigationActionsTaskCommandInput, options?: __HttpHandlerOptions): Promise<StartDetectMitigationActionsTaskCommandOutput>;
            startDetectMitigationActionsTask(args: StartDetectMitigationActionsTaskCommandInput, cb: (err: any, data?: StartDetectMitigationActionsTaskCommandOutput) => void): void;
            startDetectMitigationActionsTask(args: StartDetectMitigationActionsTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartDetectMitigationActionsTaskCommandOutput) => void): void;
            /**
                * <p>Starts an on-demand Device Defender audit.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartOnDemandAuditTask</a> action.</p>
                */
            startOnDemandAuditTask(args: StartOnDemandAuditTaskCommandInput, options?: __HttpHandlerOptions): Promise<StartOnDemandAuditTaskCommandOutput>;
            startOnDemandAuditTask(args: StartOnDemandAuditTaskCommandInput, cb: (err: any, data?: StartOnDemandAuditTaskCommandOutput) => void): void;
            startOnDemandAuditTask(args: StartOnDemandAuditTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartOnDemandAuditTaskCommandOutput) => void): void;
            /**
                * <p>Creates a bulk thing provisioning task.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartThingRegistrationTask</a> action.</p>
                */
            startThingRegistrationTask(args: StartThingRegistrationTaskCommandInput, options?: __HttpHandlerOptions): Promise<StartThingRegistrationTaskCommandOutput>;
            startThingRegistrationTask(args: StartThingRegistrationTaskCommandInput, cb: (err: any, data?: StartThingRegistrationTaskCommandOutput) => void): void;
            startThingRegistrationTask(args: StartThingRegistrationTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartThingRegistrationTaskCommandOutput) => void): void;
            /**
                * <p>Cancels a bulk thing provisioning task.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StopThingRegistrationTask</a> action.</p>
                */
            stopThingRegistrationTask(args: StopThingRegistrationTaskCommandInput, options?: __HttpHandlerOptions): Promise<StopThingRegistrationTaskCommandOutput>;
            stopThingRegistrationTask(args: StopThingRegistrationTaskCommandInput, cb: (err: any, data?: StopThingRegistrationTaskCommandOutput) => void): void;
            stopThingRegistrationTask(args: StopThingRegistrationTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopThingRegistrationTaskCommandOutput) => void): void;
            /**
                * <p>Adds to or modifies the tags of the given resource. Tags are metadata which can be
                * 			used to manage a resource.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TagResource</a> action.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Tests if a specified principal is authorized to perform an IoT action on a
                *          specified resource. Use this to test and debug the authorization behavior of devices that
                *          connect to the IoT device gateway.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TestAuthorization</a> action.</p>
                */
            testAuthorization(args: TestAuthorizationCommandInput, options?: __HttpHandlerOptions): Promise<TestAuthorizationCommandOutput>;
            testAuthorization(args: TestAuthorizationCommandInput, cb: (err: any, data?: TestAuthorizationCommandOutput) => void): void;
            testAuthorization(args: TestAuthorizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TestAuthorizationCommandOutput) => void): void;
            /**
                * <p>Tests a custom authorization behavior by invoking a specified custom authorizer. Use
                *          this to test and debug the custom authorization behavior of devices that connect to the IoT
                *          device gateway.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TestInvokeAuthorizer</a> action.</p>
                */
            testInvokeAuthorizer(args: TestInvokeAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<TestInvokeAuthorizerCommandOutput>;
            testInvokeAuthorizer(args: TestInvokeAuthorizerCommandInput, cb: (err: any, data?: TestInvokeAuthorizerCommandOutput) => void): void;
            testInvokeAuthorizer(args: TestInvokeAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TestInvokeAuthorizerCommandOutput) => void): void;
            /**
                * <p>Transfers the specified certificate to the specified Amazon Web Services account.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TransferCertificate</a> action.</p>
                *
                *          <p>You can cancel the transfer until it is acknowledged by the recipient.</p>
                *          <p>No notification is sent to the transfer destination's account. It is up to the caller
                *          to notify the transfer target.</p>
                *          <p>The certificate being transferred must not be in the ACTIVE state. You can use the
                *          <a>UpdateCertificate</a> action to deactivate it.</p>
                *          <p>The certificate must not have any policies attached to it. You can use the
                *          <a>DetachPolicy</a> action to detach them.</p>
                */
            transferCertificate(args: TransferCertificateCommandInput, options?: __HttpHandlerOptions): Promise<TransferCertificateCommandOutput>;
            transferCertificate(args: TransferCertificateCommandInput, cb: (err: any, data?: TransferCertificateCommandOutput) => void): void;
            transferCertificate(args: TransferCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TransferCertificateCommandOutput) => void): void;
            /**
                * <p>Removes the given tags (metadata) from the resource.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UntagResource</a> action.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Configures or reconfigures the Device Defender audit settings for this account.
                *           Settings include how audit notifications are sent and which audit checks are
                *           enabled or disabled.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateAccountAuditConfiguration</a> action.</p>
                */
            updateAccountAuditConfiguration(args: UpdateAccountAuditConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAccountAuditConfigurationCommandOutput>;
            updateAccountAuditConfiguration(args: UpdateAccountAuditConfigurationCommandInput, cb: (err: any, data?: UpdateAccountAuditConfigurationCommandOutput) => void): void;
            updateAccountAuditConfiguration(args: UpdateAccountAuditConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAccountAuditConfigurationCommandOutput) => void): void;
            /**
                * <p>
                *       Updates a Device Defender audit suppression.
                *     </p>
                */
            updateAuditSuppression(args: UpdateAuditSuppressionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAuditSuppressionCommandOutput>;
            updateAuditSuppression(args: UpdateAuditSuppressionCommandInput, cb: (err: any, data?: UpdateAuditSuppressionCommandOutput) => void): void;
            updateAuditSuppression(args: UpdateAuditSuppressionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAuditSuppressionCommandOutput) => void): void;
            /**
                * <p>Updates an authorizer.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateAuthorizer</a> action.</p>
                */
            updateAuthorizer(args: UpdateAuthorizerCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAuthorizerCommandOutput>;
            updateAuthorizer(args: UpdateAuthorizerCommandInput, cb: (err: any, data?: UpdateAuthorizerCommandOutput) => void): void;
            updateAuthorizer(args: UpdateAuthorizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAuthorizerCommandOutput) => void): void;
            /**
                * <p>Updates information about the billing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateBillingGroup</a> action.</p>
                */
            updateBillingGroup(args: UpdateBillingGroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBillingGroupCommandOutput>;
            updateBillingGroup(args: UpdateBillingGroupCommandInput, cb: (err: any, data?: UpdateBillingGroupCommandOutput) => void): void;
            updateBillingGroup(args: UpdateBillingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBillingGroupCommandOutput) => void): void;
            /**
                * <p>Updates a registered CA certificate.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCACertificate</a> action.</p>
                */
            updateCACertificate(args: UpdateCACertificateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateCACertificateCommandOutput>;
            updateCACertificate(args: UpdateCACertificateCommandInput, cb: (err: any, data?: UpdateCACertificateCommandOutput) => void): void;
            updateCACertificate(args: UpdateCACertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateCACertificateCommandOutput) => void): void;
            /**
                * <p>Updates the status of the specified certificate. This operation is
                *          idempotent.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCertificate</a> action.</p>
                *
                *          <p>Certificates must be in the ACTIVE state to authenticate devices that use
                *          a certificate to connect to IoT.</p>
                *          <p>Within a few minutes of updating a certificate from the ACTIVE state to any other
                *          state, IoT disconnects all devices that used that certificate to connect. Devices cannot
                *          use a certificate that is not in the ACTIVE state to reconnect.</p>
                */
            updateCertificate(args: UpdateCertificateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateCertificateCommandOutput>;
            updateCertificate(args: UpdateCertificateCommandInput, cb: (err: any, data?: UpdateCertificateCommandOutput) => void): void;
            updateCertificate(args: UpdateCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateCertificateCommandOutput) => void): void;
            /**
                * <p>Updates a
                *       Device Defender detect custom metric. </p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCustomMetric</a> action.</p>
                */
            updateCustomMetric(args: UpdateCustomMetricCommandInput, options?: __HttpHandlerOptions): Promise<UpdateCustomMetricCommandOutput>;
            updateCustomMetric(args: UpdateCustomMetricCommandInput, cb: (err: any, data?: UpdateCustomMetricCommandOutput) => void): void;
            updateCustomMetric(args: UpdateCustomMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateCustomMetricCommandOutput) => void): void;
            /**
                * <p>Updates the definition for a dimension. You
                *       cannot
                *       change the type of a dimension after
                *       it is created (you can delete it and
                *       recreate
                *       it).</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDimension</a> action.</p>
                */
            updateDimension(args: UpdateDimensionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDimensionCommandOutput>;
            updateDimension(args: UpdateDimensionCommandInput, cb: (err: any, data?: UpdateDimensionCommandOutput) => void): void;
            updateDimension(args: UpdateDimensionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDimensionCommandOutput) => void): void;
            /**
                * <p>Updates values stored in the domain configuration. Domain configurations for default
                *          endpoints can't be updated.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDomainConfiguration</a> action.</p>
                */
            updateDomainConfiguration(args: UpdateDomainConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDomainConfigurationCommandOutput>;
            updateDomainConfiguration(args: UpdateDomainConfigurationCommandInput, cb: (err: any, data?: UpdateDomainConfigurationCommandOutput) => void): void;
            updateDomainConfiguration(args: UpdateDomainConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDomainConfigurationCommandOutput) => void): void;
            /**
                * <p>Updates a dynamic thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDynamicThingGroup</a> action.</p>
                */
            updateDynamicThingGroup(args: UpdateDynamicThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDynamicThingGroupCommandOutput>;
            updateDynamicThingGroup(args: UpdateDynamicThingGroupCommandInput, cb: (err: any, data?: UpdateDynamicThingGroupCommandOutput) => void): void;
            updateDynamicThingGroup(args: UpdateDynamicThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDynamicThingGroupCommandOutput) => void): void;
            /**
                * <p>Updates the event configurations.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateEventConfigurations</a> action.</p>
                */
            updateEventConfigurations(args: UpdateEventConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEventConfigurationsCommandOutput>;
            updateEventConfigurations(args: UpdateEventConfigurationsCommandInput, cb: (err: any, data?: UpdateEventConfigurationsCommandOutput) => void): void;
            updateEventConfigurations(args: UpdateEventConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEventConfigurationsCommandOutput) => void): void;
            /**
                * <p>Updates the data for a fleet metric.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateFleetMetric</a> action.</p>
                */
            updateFleetMetric(args: UpdateFleetMetricCommandInput, options?: __HttpHandlerOptions): Promise<UpdateFleetMetricCommandOutput>;
            updateFleetMetric(args: UpdateFleetMetricCommandInput, cb: (err: any, data?: UpdateFleetMetricCommandOutput) => void): void;
            updateFleetMetric(args: UpdateFleetMetricCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateFleetMetricCommandOutput) => void): void;
            /**
                * <p>Updates the search configuration.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateIndexingConfiguration</a> action.</p>
                */
            updateIndexingConfiguration(args: UpdateIndexingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateIndexingConfigurationCommandOutput>;
            updateIndexingConfiguration(args: UpdateIndexingConfigurationCommandInput, cb: (err: any, data?: UpdateIndexingConfigurationCommandOutput) => void): void;
            updateIndexingConfiguration(args: UpdateIndexingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateIndexingConfigurationCommandOutput) => void): void;
            /**
                * <p>Updates supported fields of the specified job.</p>
                *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateJob</a> action.</p>
                */
            updateJob(args: UpdateJobCommandInput, options?: __HttpHandlerOptions): Promise<UpdateJobCommandOutput>;
            updateJob(args: UpdateJobCommandInput, cb: (err: any, data?: UpdateJobCommandOutput) => void): void;
            updateJob(args: UpdateJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateJobCommandOutput) => void): void;
            /**
                * <p>Updates the definition for the specified mitigation action.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateMitigationAction</a> action.</p>
                */
            updateMitigationAction(args: UpdateMitigationActionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateMitigationActionCommandOutput>;
            updateMitigationAction(args: UpdateMitigationActionCommandInput, cb: (err: any, data?: UpdateMitigationActionCommandOutput) => void): void;
            updateMitigationAction(args: UpdateMitigationActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateMitigationActionCommandOutput) => void): void;
            /**
                * <p>Updates a fleet provisioning template.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateProvisioningTemplate</a> action.</p>
                */
            updateProvisioningTemplate(args: UpdateProvisioningTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProvisioningTemplateCommandOutput>;
            updateProvisioningTemplate(args: UpdateProvisioningTemplateCommandInput, cb: (err: any, data?: UpdateProvisioningTemplateCommandOutput) => void): void;
            updateProvisioningTemplate(args: UpdateProvisioningTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProvisioningTemplateCommandOutput) => void): void;
            /**
                * <p>Updates a role alias.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateRoleAlias</a> action.</p>
                */
            updateRoleAlias(args: UpdateRoleAliasCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoleAliasCommandOutput>;
            updateRoleAlias(args: UpdateRoleAliasCommandInput, cb: (err: any, data?: UpdateRoleAliasCommandOutput) => void): void;
            updateRoleAlias(args: UpdateRoleAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoleAliasCommandOutput) => void): void;
            /**
                * <p>Updates a scheduled audit, including which checks are performed and
                *           how often the audit takes place.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateScheduledAudit</a> action.</p>
                */
            updateScheduledAudit(args: UpdateScheduledAuditCommandInput, options?: __HttpHandlerOptions): Promise<UpdateScheduledAuditCommandOutput>;
            updateScheduledAudit(args: UpdateScheduledAuditCommandInput, cb: (err: any, data?: UpdateScheduledAuditCommandOutput) => void): void;
            updateScheduledAudit(args: UpdateScheduledAuditCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateScheduledAuditCommandOutput) => void): void;
            /**
                * <p>Updates a Device Defender security profile.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateSecurityProfile</a> action.</p>
                */
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSecurityProfileCommandOutput>;
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Updates an existing stream. The stream version will be incremented by one.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateStream</a> action.</p>
                */
            updateStream(args: UpdateStreamCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStreamCommandOutput>;
            updateStream(args: UpdateStreamCommandInput, cb: (err: any, data?: UpdateStreamCommandOutput) => void): void;
            updateStream(args: UpdateStreamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStreamCommandOutput) => void): void;
            /**
                * <p>Updates the data for a thing.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThing</a> action.</p>
                */
            updateThing(args: UpdateThingCommandInput, options?: __HttpHandlerOptions): Promise<UpdateThingCommandOutput>;
            updateThing(args: UpdateThingCommandInput, cb: (err: any, data?: UpdateThingCommandOutput) => void): void;
            updateThing(args: UpdateThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateThingCommandOutput) => void): void;
            /**
                * <p>Update a thing group.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingGroup</a> action.</p>
                */
            updateThingGroup(args: UpdateThingGroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateThingGroupCommandOutput>;
            updateThingGroup(args: UpdateThingGroupCommandInput, cb: (err: any, data?: UpdateThingGroupCommandOutput) => void): void;
            updateThingGroup(args: UpdateThingGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateThingGroupCommandOutput) => void): void;
            /**
                * <p>Updates the groups to which the thing belongs.</p>
                * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingGroupsForThing</a> action.</p>
                */
            updateThingGroupsForThing(args: UpdateThingGroupsForThingCommandInput, options?: __HttpHandlerOptions): Promise<UpdateThingGroupsForThingCommandOutput>;
            updateThingGroupsForThing(args: UpdateThingGroupsForThingCommandInput, cb: (err: any, data?: UpdateThingGroupsForThingCommandOutput) => void): void;
            updateThingGroupsForThing(args: UpdateThingGroupsForThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateThingGroupsForThingCommandOutput) => void): void;
            /**
                * <p>Updates a topic rule destination. You use this to change the status, endpoint URL, or
                *          confirmation URL of the destination.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateTopicRuleDestination</a> action.</p>
                */
            updateTopicRuleDestination(args: UpdateTopicRuleDestinationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTopicRuleDestinationCommandOutput>;
            updateTopicRuleDestination(args: UpdateTopicRuleDestinationCommandInput, cb: (err: any, data?: UpdateTopicRuleDestinationCommandOutput) => void): void;
            updateTopicRuleDestination(args: UpdateTopicRuleDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTopicRuleDestinationCommandOutput) => void): void;
            /**
                * <p>Validates a Device Defender security profile behaviors specification.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ValidateSecurityProfileBehaviors</a> action.</p>
                */
            validateSecurityProfileBehaviors(args: ValidateSecurityProfileBehaviorsCommandInput, options?: __HttpHandlerOptions): Promise<ValidateSecurityProfileBehaviorsCommandOutput>;
            validateSecurityProfileBehaviors(args: ValidateSecurityProfileBehaviorsCommandInput, cb: (err: any, data?: ValidateSecurityProfileBehaviorsCommandOutput) => void): void;
            validateSecurityProfileBehaviors(args: ValidateSecurityProfileBehaviorsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ValidateSecurityProfileBehaviorsCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AcceptCertificateTransferCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AcceptCertificateTransferRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AcceptCertificateTransferCommandInput extends AcceptCertificateTransferRequest {
    }
    export interface AcceptCertificateTransferCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Accepts a pending certificate transfer. The default state of the certificate is
        *          INACTIVE.</p>
        *          <p>To check for pending certificate transfers, call <a>ListCertificates</a>
        *          to enumerate your certificates.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AcceptCertificateTransfer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AcceptCertificateTransferCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AcceptCertificateTransferCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AcceptCertificateTransferCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptCertificateTransferCommandInput} for command's `input` shape.
        * @see {@link AcceptCertificateTransferCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AcceptCertificateTransferCommand extends $Command<AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput, IoTClientResolvedConfig> {
            readonly input: AcceptCertificateTransferCommandInput;
            constructor(input: AcceptCertificateTransferCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AddThingToBillingGroupRequest, AddThingToBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AddThingToBillingGroupCommandInput extends AddThingToBillingGroupRequest {
    }
    export interface AddThingToBillingGroupCommandOutput extends AddThingToBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a thing to a billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AddThingToBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AddThingToBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AddThingToBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AddThingToBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddThingToBillingGroupCommandInput} for command's `input` shape.
        * @see {@link AddThingToBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AddThingToBillingGroupCommand extends $Command<AddThingToBillingGroupCommandInput, AddThingToBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: AddThingToBillingGroupCommandInput;
            constructor(input: AddThingToBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddThingToBillingGroupCommandInput, AddThingToBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AddThingToThingGroupRequest, AddThingToThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AddThingToThingGroupCommandInput extends AddThingToThingGroupRequest {
    }
    export interface AddThingToThingGroupCommandOutput extends AddThingToThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a thing to a thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AddThingToThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AddThingToThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AddThingToThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AddThingToThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddThingToThingGroupCommandInput} for command's `input` shape.
        * @see {@link AddThingToThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AddThingToThingGroupCommand extends $Command<AddThingToThingGroupCommandInput, AddThingToThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: AddThingToThingGroupCommandInput;
            constructor(input: AddThingToThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddThingToThingGroupCommandInput, AddThingToThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AssociateTargetsWithJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AssociateTargetsWithJobRequest, AssociateTargetsWithJobResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AssociateTargetsWithJobCommandInput extends AssociateTargetsWithJobRequest {
    }
    export interface AssociateTargetsWithJobCommandOutput extends AssociateTargetsWithJobResponse, __MetadataBearer {
    }
    /**
        * <p>Associates a group with a continuous job. The following criteria must be met: </p>
        *         <ul>
        *             <li>
        *                 <p>The job must have been created with the <code>targetSelection</code> field set to
        *                     "CONTINUOUS".</p>
        *             </li>
        *             <li>
        *                 <p>The job status must currently be "IN_PROGRESS".</p>
        *             </li>
        *             <li>
        *                 <p>The total number of targets associated with a job must not exceed 100.</p>
        *             </li>
        *          </ul>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AssociateTargetsWithJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AssociateTargetsWithJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AssociateTargetsWithJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AssociateTargetsWithJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateTargetsWithJobCommandInput} for command's `input` shape.
        * @see {@link AssociateTargetsWithJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AssociateTargetsWithJobCommand extends $Command<AssociateTargetsWithJobCommandInput, AssociateTargetsWithJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: AssociateTargetsWithJobCommandInput;
            constructor(input: AssociateTargetsWithJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateTargetsWithJobCommandInput, AssociateTargetsWithJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AttachPolicyRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AttachPolicyCommandInput extends AttachPolicyRequest {
    }
    export interface AttachPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Attaches the specified policy to the specified principal (certificate or other
        *          credential).</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AttachPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AttachPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AttachPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AttachPolicyCommandInput} for command's `input` shape.
        * @see {@link AttachPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AttachPolicyCommand extends $Command<AttachPolicyCommandInput, AttachPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: AttachPolicyCommandInput;
            constructor(input: AttachPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachPolicyCommandInput, AttachPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPrincipalPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AttachPrincipalPolicyRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AttachPrincipalPolicyCommandInput extends AttachPrincipalPolicyRequest {
    }
    export interface AttachPrincipalPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Attaches the specified policy to the specified principal (certificate or other
        *          credential).</p>
        *          <p>
        *             <b>Note:</b> This action is deprecated and works as
        *          expected for backward compatibility, but we won't add enhancements. Use <a>AttachPolicy</a> instead.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachPrincipalPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AttachPrincipalPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AttachPrincipalPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AttachPrincipalPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AttachPrincipalPolicyCommandInput} for command's `input` shape.
        * @see {@link AttachPrincipalPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AttachPrincipalPolicyCommand extends $Command<AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: AttachPrincipalPolicyCommandInput;
            constructor(input: AttachPrincipalPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AttachSecurityProfileRequest, AttachSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AttachSecurityProfileCommandInput extends AttachSecurityProfileRequest {
    }
    export interface AttachSecurityProfileCommandOutput extends AttachSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Associates a Device Defender security profile with a thing group or this account. Each
        *         thing group or account can have up to five security profiles associated with it.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AttachSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AttachSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AttachSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AttachSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link AttachSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AttachSecurityProfileCommand extends $Command<AttachSecurityProfileCommandInput, AttachSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: AttachSecurityProfileCommandInput;
            constructor(input: AttachSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachSecurityProfileCommandInput, AttachSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachThingPrincipalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { AttachThingPrincipalRequest, AttachThingPrincipalResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface AttachThingPrincipalCommandInput extends AttachThingPrincipalRequest {
    }
    export interface AttachThingPrincipalCommandOutput extends AttachThingPrincipalResponse, __MetadataBearer {
    }
    /**
        * <p>Attaches the specified principal to the specified thing. A principal can be X.509
        * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
        * 			identities.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">AttachThingPrincipal</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, AttachThingPrincipalCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, AttachThingPrincipalCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new AttachThingPrincipalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AttachThingPrincipalCommandInput} for command's `input` shape.
        * @see {@link AttachThingPrincipalCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class AttachThingPrincipalCommand extends $Command<AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput, IoTClientResolvedConfig> {
            readonly input: AttachThingPrincipalCommandInput;
            constructor(input: AttachThingPrincipalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelAuditMitigationActionsTaskRequest, CancelAuditMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelAuditMitigationActionsTaskCommandInput extends CancelAuditMitigationActionsTaskRequest {
    }
    export interface CancelAuditMitigationActionsTaskCommandOutput extends CancelAuditMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels a mitigation action task that is in progress. If the task
        *       is not
        *       in progress, an InvalidRequestException occurs.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelAuditMitigationActionsTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelAuditMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelAuditMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelAuditMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelAuditMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link CancelAuditMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelAuditMitigationActionsTaskCommand extends $Command<CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelAuditMitigationActionsTaskCommandInput;
            constructor(input: CancelAuditMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelAuditTaskRequest, CancelAuditTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelAuditTaskCommandInput extends CancelAuditTaskRequest {
    }
    export interface CancelAuditTaskCommandOutput extends CancelAuditTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels an audit that is in progress. The audit can be either scheduled or on demand. If the audit isn't in progress, an "InvalidRequestException" occurs.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelAuditTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelAuditTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelAuditTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelAuditTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelAuditTaskCommandInput} for command's `input` shape.
        * @see {@link CancelAuditTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelAuditTaskCommand extends $Command<CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelAuditTaskCommandInput;
            constructor(input: CancelAuditTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelCertificateTransferCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelCertificateTransferRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelCertificateTransferCommandInput extends CancelCertificateTransferRequest {
    }
    export interface CancelCertificateTransferCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Cancels a pending transfer for the specified certificate.</p>
        *          <p>
        *             <b>Note</b> Only the transfer source account can use this
        *          operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, IoT returns the
        *          certificate to the source account in the INACTIVE state. After the destination account has
        *          accepted the transfer, the transfer cannot be cancelled.</p>
        *          <p>After a certificate transfer is cancelled, the status of the certificate changes from
        *          PENDING_TRANSFER to INACTIVE.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelCertificateTransfer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelCertificateTransferCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelCertificateTransferCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelCertificateTransferCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelCertificateTransferCommandInput} for command's `input` shape.
        * @see {@link CancelCertificateTransferCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelCertificateTransferCommand extends $Command<CancelCertificateTransferCommandInput, CancelCertificateTransferCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelCertificateTransferCommandInput;
            constructor(input: CancelCertificateTransferCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelCertificateTransferCommandInput, CancelCertificateTransferCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelDetectMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelDetectMitigationActionsTaskRequest, CancelDetectMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelDetectMitigationActionsTaskCommandInput extends CancelDetectMitigationActionsTaskRequest {
    }
    export interface CancelDetectMitigationActionsTaskCommandOutput extends CancelDetectMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>
        *         Cancels a Device Defender ML Detect mitigation action.
        *       </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelDetectMitigationActionsTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelDetectMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelDetectMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelDetectMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelDetectMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link CancelDetectMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelDetectMitigationActionsTaskCommand extends $Command<CancelDetectMitigationActionsTaskCommandInput, CancelDetectMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelDetectMitigationActionsTaskCommandInput;
            constructor(input: CancelDetectMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelDetectMitigationActionsTaskCommandInput, CancelDetectMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelJobRequest, CancelJobResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelJobCommandInput extends CancelJobRequest {
    }
    export interface CancelJobCommandOutput extends CancelJobResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels a job.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelJobCommandInput} for command's `input` shape.
        * @see {@link CancelJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelJobCommand extends $Command<CancelJobCommandInput, CancelJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelJobCommandInput;
            constructor(input: CancelJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelJobCommandInput, CancelJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobExecutionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CancelJobExecutionRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CancelJobExecutionCommandInput extends CancelJobExecutionRequest {
    }
    export interface CancelJobExecutionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Cancels the execution of a job for a given thing.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CancelJobExecution</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CancelJobExecutionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CancelJobExecutionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CancelJobExecutionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelJobExecutionCommandInput} for command's `input` shape.
        * @see {@link CancelJobExecutionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CancelJobExecutionCommand extends $Command<CancelJobExecutionCommandInput, CancelJobExecutionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CancelJobExecutionCommandInput;
            constructor(input: CancelJobExecutionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelJobExecutionCommandInput, CancelJobExecutionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ClearDefaultAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ClearDefaultAuthorizerRequest, ClearDefaultAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface ClearDefaultAuthorizerCommandInput extends ClearDefaultAuthorizerRequest {
    }
    export interface ClearDefaultAuthorizerCommandOutput extends ClearDefaultAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Clears the default authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ClearDefaultAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ClearDefaultAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ClearDefaultAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ClearDefaultAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ClearDefaultAuthorizerCommandInput} for command's `input` shape.
        * @see {@link ClearDefaultAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ClearDefaultAuthorizerCommand extends $Command<ClearDefaultAuthorizerCommandInput, ClearDefaultAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: ClearDefaultAuthorizerCommandInput;
            constructor(input: ClearDefaultAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ClearDefaultAuthorizerCommandInput, ClearDefaultAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ConfirmTopicRuleDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ConfirmTopicRuleDestinationRequest, ConfirmTopicRuleDestinationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface ConfirmTopicRuleDestinationCommandInput extends ConfirmTopicRuleDestinationRequest {
    }
    export interface ConfirmTopicRuleDestinationCommandOutput extends ConfirmTopicRuleDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Confirms a topic rule destination. When you create a rule requiring a destination, IoT
        *          sends a confirmation message to the endpoint or base address you specify. The message
        *          includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code>
        *          to confirm that you own or have access to the endpoint.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ConfirmTopicRuleDestination</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ConfirmTopicRuleDestinationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ConfirmTopicRuleDestinationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ConfirmTopicRuleDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ConfirmTopicRuleDestinationCommandInput} for command's `input` shape.
        * @see {@link ConfirmTopicRuleDestinationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ConfirmTopicRuleDestinationCommand extends $Command<ConfirmTopicRuleDestinationCommandInput, ConfirmTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
            readonly input: ConfirmTopicRuleDestinationCommandInput;
            constructor(input: ConfirmTopicRuleDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ConfirmTopicRuleDestinationCommandInput, ConfirmTopicRuleDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuditSuppressionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateAuditSuppressionRequest, CreateAuditSuppressionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateAuditSuppressionCommandInput extends CreateAuditSuppressionRequest {
    }
    export interface CreateAuditSuppressionCommandOutput extends CreateAuditSuppressionResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Creates a Device Defender audit suppression.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateAuditSuppression</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateAuditSuppressionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateAuditSuppressionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateAuditSuppressionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAuditSuppressionCommandInput} for command's `input` shape.
        * @see {@link CreateAuditSuppressionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateAuditSuppressionCommand extends $Command<CreateAuditSuppressionCommandInput, CreateAuditSuppressionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateAuditSuppressionCommandInput;
            constructor(input: CreateAuditSuppressionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAuditSuppressionCommandInput, CreateAuditSuppressionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateAuthorizerRequest, CreateAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateAuthorizerCommandInput extends CreateAuthorizerRequest {
    }
    export interface CreateAuthorizerCommandOutput extends CreateAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAuthorizerCommandInput} for command's `input` shape.
        * @see {@link CreateAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateAuthorizerCommand extends $Command<CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateAuthorizerCommandInput;
            constructor(input: CreateAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateBillingGroupRequest, CreateBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateBillingGroupCommandInput extends CreateBillingGroupRequest {
    }
    export interface CreateBillingGroupCommandOutput extends CreateBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBillingGroupCommandInput} for command's `input` shape.
        * @see {@link CreateBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateBillingGroupCommand extends $Command<CreateBillingGroupCommandInput, CreateBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateBillingGroupCommandInput;
            constructor(input: CreateBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBillingGroupCommandInput, CreateBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCertificateFromCsrCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateCertificateFromCsrRequest, CreateCertificateFromCsrResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateCertificateFromCsrCommandInput extends CreateCertificateFromCsrRequest {
    }
    export interface CreateCertificateFromCsrCommandOutput extends CreateCertificateFromCsrResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an X.509 certificate using the specified certificate signing
        *          request.</p>
        *          <p>
        *             <b>Note:</b> The CSR must include a public key that is either an
        *          RSA key with a length of at least 2048 bits or an ECC key from NIST P-256, NIST P-384, or NIST P-512
        *          curves. For supported certificates, consult <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms">
        *             Certificate signing algorithms supported by IoT</a>.</p>
        *          <p>
        *             <b>Note:</b> Reusing the same certificate signing request (CSR)
        *          results in a distinct certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateCertificateFromCsr</a> action.</p>
        *
        *          <p>You can create multiple certificates in a batch by creating a directory, copying
        *          multiple .csr files into that directory, and then specifying that directory on the command
        *          line. The following commands show how to create a batch of certificates given a batch of
        *          CSRs.</p>
        *          <p>Assuming a set of CSRs are located inside of the directory
        *          my-csr-directory:</p>
        *
        *          <p>On Linux and OS X, the command is:</p>
        *
        *          <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr
        *          --certificate-signing-request file://my-csr-directory/{}</p>
        *          <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
        *          to the aws iot create-certificate-from-csr Amazon Web Services CLI command to create a certificate for the
        *          corresponding CSR.</p>
        *          <p>The aws iot create-certificate-from-csr part of the command can also be run in
        *          parallel to speed up the certificate creation process:</p>
        *          <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr
        *          --certificate-signing-request file://my-csr-directory/{}</p>
        *          <p>On Windows PowerShell, the command to create certificates for all CSRs in
        *          my-csr-directory is:</p>
        *          <p>> ls -Name my-csr-directory | %{aws iot create-certificate-from-csr
        *          --certificate-signing-request file://my-csr-directory/$_}</p>
        *          <p>On a Windows command prompt, the command to create certificates for all CSRs in
        *          my-csr-directory is:</p>
        *          <p>> forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
        *          --certificate-signing-request file://@path"</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateCertificateFromCsrCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateCertificateFromCsrCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateCertificateFromCsrCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateCertificateFromCsrCommandInput} for command's `input` shape.
        * @see {@link CreateCertificateFromCsrCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateCertificateFromCsrCommand extends $Command<CreateCertificateFromCsrCommandInput, CreateCertificateFromCsrCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateCertificateFromCsrCommandInput;
            constructor(input: CreateCertificateFromCsrCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateCertificateFromCsrCommandInput, CreateCertificateFromCsrCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCustomMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateCustomMetricRequest, CreateCustomMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateCustomMetricCommandInput extends CreateCustomMetricRequest {
    }
    export interface CreateCustomMetricCommandOutput extends CreateCustomMetricResponse, __MetadataBearer {
    }
    /**
        * <p> Use this API to define a
        *       Custom
        *       Metric
        *       published by your devices to Device Defender. </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateCustomMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateCustomMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateCustomMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateCustomMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateCustomMetricCommandInput} for command's `input` shape.
        * @see {@link CreateCustomMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateCustomMetricCommand extends $Command<CreateCustomMetricCommandInput, CreateCustomMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateCustomMetricCommandInput;
            constructor(input: CreateCustomMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateCustomMetricCommandInput, CreateCustomMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDimensionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateDimensionRequest, CreateDimensionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateDimensionCommandInput extends CreateDimensionRequest {
    }
    export interface CreateDimensionCommandOutput extends CreateDimensionResponse, __MetadataBearer {
    }
    /**
        * <p>Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender.
        *       For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDimension</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateDimensionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateDimensionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateDimensionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDimensionCommandInput} for command's `input` shape.
        * @see {@link CreateDimensionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateDimensionCommand extends $Command<CreateDimensionCommandInput, CreateDimensionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateDimensionCommandInput;
            constructor(input: CreateDimensionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDimensionCommandInput, CreateDimensionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDomainConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateDomainConfigurationRequest, CreateDomainConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateDomainConfigurationCommandInput extends CreateDomainConfigurationRequest {
    }
    export interface CreateDomainConfigurationCommandOutput extends CreateDomainConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a domain configuration.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDomainConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateDomainConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateDomainConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateDomainConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDomainConfigurationCommandInput} for command's `input` shape.
        * @see {@link CreateDomainConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateDomainConfigurationCommand extends $Command<CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateDomainConfigurationCommandInput;
            constructor(input: CreateDomainConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDynamicThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateDynamicThingGroupRequest, CreateDynamicThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateDynamicThingGroupCommandInput extends CreateDynamicThingGroupRequest {
    }
    export interface CreateDynamicThingGroupCommandOutput extends CreateDynamicThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a dynamic thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateDynamicThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateDynamicThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateDynamicThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateDynamicThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDynamicThingGroupCommandInput} for command's `input` shape.
        * @see {@link CreateDynamicThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateDynamicThingGroupCommand extends $Command<CreateDynamicThingGroupCommandInput, CreateDynamicThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateDynamicThingGroupCommandInput;
            constructor(input: CreateDynamicThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDynamicThingGroupCommandInput, CreateDynamicThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateFleetMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateFleetMetricRequest, CreateFleetMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateFleetMetricCommandInput extends CreateFleetMetricRequest {
    }
    export interface CreateFleetMetricCommandOutput extends CreateFleetMetricResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a fleet metric.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateFleetMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateFleetMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateFleetMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateFleetMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateFleetMetricCommandInput} for command's `input` shape.
        * @see {@link CreateFleetMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateFleetMetricCommand extends $Command<CreateFleetMetricCommandInput, CreateFleetMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateFleetMetricCommandInput;
            constructor(input: CreateFleetMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateFleetMetricCommandInput, CreateFleetMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateJobRequest, CreateJobResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateJobCommandInput extends CreateJobRequest {
    }
    export interface CreateJobCommandOutput extends CreateJobResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a job.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateJobCommandInput} for command's `input` shape.
        * @see {@link CreateJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateJobCommand extends $Command<CreateJobCommandInput, CreateJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateJobCommandInput;
            constructor(input: CreateJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateJobCommandInput, CreateJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateJobTemplateRequest, CreateJobTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateJobTemplateCommandInput extends CreateJobTemplateRequest {
    }
    export interface CreateJobTemplateCommandOutput extends CreateJobTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a job template.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateJobTemplate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateJobTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateJobTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateJobTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateJobTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateJobTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateJobTemplateCommand extends $Command<CreateJobTemplateCommandInput, CreateJobTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateJobTemplateCommandInput;
            constructor(input: CreateJobTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateJobTemplateCommandInput, CreateJobTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateKeysAndCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateKeysAndCertificateRequest, CreateKeysAndCertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateKeysAndCertificateCommandInput extends CreateKeysAndCertificateRequest {
    }
    export interface CreateKeysAndCertificateCommandOutput extends CreateKeysAndCertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued
        *          public key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a
        *          device, for more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api">Provisioning MQTT API</a>.</p>
        *          <p>
        *             <b>Note</b> This is the only time IoT issues the private key
        *          for this certificate, so it is important to keep it in a secure location.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateKeysAndCertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateKeysAndCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateKeysAndCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateKeysAndCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateKeysAndCertificateCommandInput} for command's `input` shape.
        * @see {@link CreateKeysAndCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateKeysAndCertificateCommand extends $Command<CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateKeysAndCertificateCommandInput;
            constructor(input: CreateKeysAndCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateMitigationActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateMitigationActionRequest, CreateMitigationActionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateMitigationActionCommandInput extends CreateMitigationActionRequest {
    }
    export interface CreateMitigationActionCommandOutput extends CreateMitigationActionResponse, __MetadataBearer {
    }
    /**
        * <p>Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names.
        *       For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html">Mitigation actions</a>. Each mitigation action can apply only one type of change.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateMitigationAction</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateMitigationActionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateMitigationActionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateMitigationActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMitigationActionCommandInput} for command's `input` shape.
        * @see {@link CreateMitigationActionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateMitigationActionCommand extends $Command<CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateMitigationActionCommandInput;
            constructor(input: CreateMitigationActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateOTAUpdateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateOTAUpdateRequest, CreateOTAUpdateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateOTAUpdateCommandInput extends CreateOTAUpdateRequest {
    }
    export interface CreateOTAUpdateCommandOutput extends CreateOTAUpdateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an IoT OTA update on a target group of things or groups.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateOTAUpdate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateOTAUpdateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateOTAUpdateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateOTAUpdateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateOTAUpdateCommandInput} for command's `input` shape.
        * @see {@link CreateOTAUpdateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateOTAUpdateCommand extends $Command<CreateOTAUpdateCommandInput, CreateOTAUpdateCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateOTAUpdateCommandInput;
            constructor(input: CreateOTAUpdateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateOTAUpdateCommandInput, CreateOTAUpdateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreatePolicyRequest, CreatePolicyResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreatePolicyCommandInput extends CreatePolicyRequest {
    }
    export interface CreatePolicyCommandOutput extends CreatePolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an IoT policy.</p>
        *          <p>The created policy is the default version for the policy. This operation creates a
        *          policy version with a version identifier of <b>1</b> and sets
        *             <b>1</b> as the policy's default version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreatePolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreatePolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreatePolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreatePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePolicyCommandInput} for command's `input` shape.
        * @see {@link CreatePolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreatePolicyCommand extends $Command<CreatePolicyCommandInput, CreatePolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreatePolicyCommandInput;
            constructor(input: CreatePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePolicyCommandInput, CreatePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreatePolicyVersionRequest, CreatePolicyVersionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreatePolicyVersionCommandInput extends CreatePolicyVersionRequest {
    }
    export interface CreatePolicyVersionCommandOutput extends CreatePolicyVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new version of the specified IoT policy. To update a policy, create a
        *          new policy version. A managed policy can have up to five versions. If the policy has five
        *          versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
        *          before you create a new one.</p>
        *          <p>Optionally, you can set the new version as the policy's default version. The default
        *          version is the operative version (that is, the version that is in effect for the
        *          certificates to which the policy is attached).</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreatePolicyVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreatePolicyVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreatePolicyVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreatePolicyVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePolicyVersionCommandInput} for command's `input` shape.
        * @see {@link CreatePolicyVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreatePolicyVersionCommand extends $Command<CreatePolicyVersionCommandInput, CreatePolicyVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreatePolicyVersionCommandInput;
            constructor(input: CreatePolicyVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePolicyVersionCommandInput, CreatePolicyVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningClaimCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateProvisioningClaimRequest, CreateProvisioningClaimResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateProvisioningClaimCommandInput extends CreateProvisioningClaimRequest {
    }
    export interface CreateProvisioningClaimCommandOutput extends CreateProvisioningClaimResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a provisioning claim.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningClaim</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateProvisioningClaimCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateProvisioningClaimCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateProvisioningClaimCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProvisioningClaimCommandInput} for command's `input` shape.
        * @see {@link CreateProvisioningClaimCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateProvisioningClaimCommand extends $Command<CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateProvisioningClaimCommandInput;
            constructor(input: CreateProvisioningClaimCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateProvisioningTemplateRequest, CreateProvisioningTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateProvisioningTemplateCommandInput extends CreateProvisioningTemplateRequest {
    }
    export interface CreateProvisioningTemplateCommandOutput extends CreateProvisioningTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a fleet provisioning template.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningTemplate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateProvisioningTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateProvisioningTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateProvisioningTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProvisioningTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateProvisioningTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateProvisioningTemplateCommand extends $Command<CreateProvisioningTemplateCommandInput, CreateProvisioningTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateProvisioningTemplateCommandInput;
            constructor(input: CreateProvisioningTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningTemplateCommandInput, CreateProvisioningTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateProvisioningTemplateVersionRequest, CreateProvisioningTemplateVersionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateProvisioningTemplateVersionCommandInput extends CreateProvisioningTemplateVersionRequest {
    }
    export interface CreateProvisioningTemplateVersionCommandOutput extends CreateProvisioningTemplateVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new version of a fleet provisioning template.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateProvisioningTemplateVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateProvisioningTemplateVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateProvisioningTemplateVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateProvisioningTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProvisioningTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link CreateProvisioningTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateProvisioningTemplateVersionCommand extends $Command<CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateProvisioningTemplateVersionCommandInput;
            constructor(input: CreateProvisioningTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateRoleAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateRoleAliasRequest, CreateRoleAliasResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateRoleAliasCommandInput extends CreateRoleAliasRequest {
    }
    export interface CreateRoleAliasCommandOutput extends CreateRoleAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a role alias.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateRoleAlias</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateRoleAliasCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateRoleAliasCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateRoleAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRoleAliasCommandInput} for command's `input` shape.
        * @see {@link CreateRoleAliasCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateRoleAliasCommand extends $Command<CreateRoleAliasCommandInput, CreateRoleAliasCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateRoleAliasCommandInput;
            constructor(input: CreateRoleAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRoleAliasCommandInput, CreateRoleAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateScheduledAuditCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateScheduledAuditRequest, CreateScheduledAuditResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateScheduledAuditCommandInput extends CreateScheduledAuditRequest {
    }
    export interface CreateScheduledAuditCommandOutput extends CreateScheduledAuditResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a scheduled audit that is run at a specified
        *           time interval.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateScheduledAudit</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateScheduledAuditCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateScheduledAuditCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateScheduledAuditCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateScheduledAuditCommandInput} for command's `input` shape.
        * @see {@link CreateScheduledAuditCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateScheduledAuditCommand extends $Command<CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateScheduledAuditCommandInput;
            constructor(input: CreateScheduledAuditCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateSecurityProfileRequest, CreateSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateSecurityProfileCommandInput extends CreateSecurityProfileRequest {
    }
    export interface CreateSecurityProfileCommandOutput extends CreateSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link CreateSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateSecurityProfileCommand extends $Command<CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateSecurityProfileCommandInput;
            constructor(input: CreateSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateStreamCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateStreamRequest, CreateStreamResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateStreamCommandInput extends CreateStreamRequest {
    }
    export interface CreateStreamCommandOutput extends CreateStreamResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data
        *             bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files
        *             associated with a stream.</p>
        *     	    <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateStream</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateStreamCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateStreamCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateStreamCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateStreamCommandInput} for command's `input` shape.
        * @see {@link CreateStreamCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateStreamCommand extends $Command<CreateStreamCommandInput, CreateStreamCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateStreamCommandInput;
            constructor(input: CreateStreamCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateStreamCommandInput, CreateStreamCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateThingRequest, CreateThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateThingCommandInput extends CreateThingRequest {
    }
    export interface CreateThingCommandOutput extends CreateThingResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a thing record in the registry. If this call is made multiple times using
        * 			the same thing name and configuration, the call will succeed. If this call is made with
        * 			the same thing name but different configuration a
        * 				<code>ResourceAlreadyExistsException</code> is thrown.</p>
        * 		       <note>
        * 			         <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for
        * 				information about authorizing control plane actions.</p>
        * 		       </note>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateThingCommandInput} for command's `input` shape.
        * @see {@link CreateThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateThingCommand extends $Command<CreateThingCommandInput, CreateThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateThingCommandInput;
            constructor(input: CreateThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateThingCommandInput, CreateThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateThingGroupRequest, CreateThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateThingGroupCommandInput extends CreateThingGroupRequest {
    }
    export interface CreateThingGroupCommandOutput extends CreateThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Create a thing group.</p>
        * 		       <note>
        * 			         <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a> for
        * 				information about authorizing control plane actions.</p>
        * 		       </note>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateThingGroupCommandInput} for command's `input` shape.
        * @see {@link CreateThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateThingGroupCommand extends $Command<CreateThingGroupCommandInput, CreateThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateThingGroupCommandInput;
            constructor(input: CreateThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateThingGroupCommandInput, CreateThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateThingTypeRequest, CreateThingTypeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateThingTypeCommandInput extends CreateThingTypeRequest {
    }
    export interface CreateThingTypeCommandOutput extends CreateThingTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new thing type.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateThingType</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateThingTypeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateThingTypeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateThingTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateThingTypeCommandInput} for command's `input` shape.
        * @see {@link CreateThingTypeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateThingTypeCommand extends $Command<CreateThingTypeCommandInput, CreateThingTypeCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateThingTypeCommandInput;
            constructor(input: CreateThingTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateThingTypeCommandInput, CreateThingTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateTopicRuleRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateTopicRuleCommandInput extends CreateTopicRuleRequest {
    }
    export interface CreateTopicRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Creates a rule. Creating rules is an administrator-level action. Any user who has
        *          permission to create rules will be able to access data processed by the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTopicRuleCommandInput} for command's `input` shape.
        * @see {@link CreateTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateTopicRuleCommand extends $Command<CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateTopicRuleCommandInput;
            constructor(input: CreateTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { CreateTopicRuleDestinationRequest, CreateTopicRuleDestinationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface CreateTopicRuleDestinationCommandInput extends CreateTopicRuleDestinationRequest {
    }
    export interface CreateTopicRuleDestinationCommandOutput extends CreateTopicRuleDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a topic rule destination. The destination must be confirmed prior to use.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateTopicRuleDestination</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, CreateTopicRuleDestinationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, CreateTopicRuleDestinationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new CreateTopicRuleDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTopicRuleDestinationCommandInput} for command's `input` shape.
        * @see {@link CreateTopicRuleDestinationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class CreateTopicRuleDestinationCommand extends $Command<CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
            readonly input: CreateTopicRuleDestinationCommandInput;
            constructor(input: CreateTopicRuleDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAccountAuditConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteAccountAuditConfigurationRequest, DeleteAccountAuditConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteAccountAuditConfigurationCommandInput extends DeleteAccountAuditConfigurationRequest {
    }
    export interface DeleteAccountAuditConfigurationCommandOutput extends DeleteAccountAuditConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Restores the default settings for Device Defender audits for this account. Any
        *           configuration data you entered is deleted and all audit checks are reset to
        *           disabled.  </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAccountAuditConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteAccountAuditConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteAccountAuditConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteAccountAuditConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccountAuditConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteAccountAuditConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteAccountAuditConfigurationCommand extends $Command<DeleteAccountAuditConfigurationCommandInput, DeleteAccountAuditConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteAccountAuditConfigurationCommandInput;
            constructor(input: DeleteAccountAuditConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccountAuditConfigurationCommandInput, DeleteAccountAuditConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuditSuppressionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteAuditSuppressionRequest, DeleteAuditSuppressionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteAuditSuppressionCommandInput extends DeleteAuditSuppressionRequest {
    }
    export interface DeleteAuditSuppressionCommandOutput extends DeleteAuditSuppressionResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Deletes a Device Defender audit suppression.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAuditSuppression</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteAuditSuppressionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteAuditSuppressionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteAuditSuppressionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAuditSuppressionCommandInput} for command's `input` shape.
        * @see {@link DeleteAuditSuppressionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteAuditSuppressionCommand extends $Command<DeleteAuditSuppressionCommandInput, DeleteAuditSuppressionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteAuditSuppressionCommandInput;
            constructor(input: DeleteAuditSuppressionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAuditSuppressionCommandInput, DeleteAuditSuppressionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteAuthorizerRequest, DeleteAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteAuthorizerCommandInput extends DeleteAuthorizerRequest {
    }
    export interface DeleteAuthorizerCommandOutput extends DeleteAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAuthorizerCommandInput} for command's `input` shape.
        * @see {@link DeleteAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteAuthorizerCommand extends $Command<DeleteAuthorizerCommandInput, DeleteAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteAuthorizerCommandInput;
            constructor(input: DeleteAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAuthorizerCommandInput, DeleteAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteBillingGroupRequest, DeleteBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteBillingGroupCommandInput extends DeleteBillingGroupRequest {
    }
    export interface DeleteBillingGroupCommandOutput extends DeleteBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBillingGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteBillingGroupCommand extends $Command<DeleteBillingGroupCommandInput, DeleteBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteBillingGroupCommandInput;
            constructor(input: DeleteBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBillingGroupCommandInput, DeleteBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCACertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteCACertificateRequest, DeleteCACertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteCACertificateCommandInput extends DeleteCACertificateRequest {
    }
    export interface DeleteCACertificateCommandOutput extends DeleteCACertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a registered CA certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCACertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteCACertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteCACertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteCACertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteCACertificateCommandInput} for command's `input` shape.
        * @see {@link DeleteCACertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteCACertificateCommand extends $Command<DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteCACertificateCommandInput;
            constructor(input: DeleteCACertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteCertificateRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteCertificateCommandInput extends DeleteCertificateRequest {
    }
    export interface DeleteCertificateCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified certificate.</p>
        *          <p>A certificate cannot be deleted if it has a policy or IoT thing attached to it or if
        *          its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPolicy</a> action to detach all policies. Next, use the <a>UpdateCertificate</a> action to set the certificate to the INACTIVE
        *          status.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteCertificateCommandInput} for command's `input` shape.
        * @see {@link DeleteCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteCertificateCommand extends $Command<DeleteCertificateCommandInput, DeleteCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteCertificateCommandInput;
            constructor(input: DeleteCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteCertificateCommandInput, DeleteCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCustomMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteCustomMetricRequest, DeleteCustomMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteCustomMetricCommandInput extends DeleteCustomMetricRequest {
    }
    export interface DeleteCustomMetricCommandOutput extends DeleteCustomMetricResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Deletes a Device Defender detect custom metric.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteCustomMetric</a> action.</p>
        *          <note>
        *             <p>Before you can delete a custom metric, you must first remove the custom metric from all
        *       security profiles it's a part of.
        *       The
        *       security
        *       profile associated with the custom metric can be found using the <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html">ListSecurityProfiles</a>
        *       API with <code>metricName</code> set to your custom metric name.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteCustomMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteCustomMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteCustomMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteCustomMetricCommandInput} for command's `input` shape.
        * @see {@link DeleteCustomMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteCustomMetricCommand extends $Command<DeleteCustomMetricCommandInput, DeleteCustomMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteCustomMetricCommandInput;
            constructor(input: DeleteCustomMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteCustomMetricCommandInput, DeleteCustomMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDimensionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteDimensionRequest, DeleteDimensionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteDimensionCommandInput extends DeleteDimensionRequest {
    }
    export interface DeleteDimensionCommandOutput extends DeleteDimensionResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the specified dimension from your Amazon Web Services accounts.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDimension</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteDimensionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteDimensionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteDimensionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDimensionCommandInput} for command's `input` shape.
        * @see {@link DeleteDimensionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteDimensionCommand extends $Command<DeleteDimensionCommandInput, DeleteDimensionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteDimensionCommandInput;
            constructor(input: DeleteDimensionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDimensionCommandInput, DeleteDimensionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDomainConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteDomainConfigurationRequest, DeleteDomainConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteDomainConfigurationCommandInput extends DeleteDomainConfigurationRequest {
    }
    export interface DeleteDomainConfigurationCommandOutput extends DeleteDomainConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified domain configuration.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDomainConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteDomainConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteDomainConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteDomainConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDomainConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteDomainConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteDomainConfigurationCommand extends $Command<DeleteDomainConfigurationCommandInput, DeleteDomainConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteDomainConfigurationCommandInput;
            constructor(input: DeleteDomainConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDomainConfigurationCommandInput, DeleteDomainConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDynamicThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteDynamicThingGroupRequest, DeleteDynamicThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteDynamicThingGroupCommandInput extends DeleteDynamicThingGroupRequest {
    }
    export interface DeleteDynamicThingGroupCommandOutput extends DeleteDynamicThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a dynamic thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteDynamicThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteDynamicThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteDynamicThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteDynamicThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDynamicThingGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteDynamicThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteDynamicThingGroupCommand extends $Command<DeleteDynamicThingGroupCommandInput, DeleteDynamicThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteDynamicThingGroupCommandInput;
            constructor(input: DeleteDynamicThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDynamicThingGroupCommandInput, DeleteDynamicThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteFleetMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteFleetMetricRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteFleetMetricCommandInput extends DeleteFleetMetricRequest {
    }
    export interface DeleteFleetMetricCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified fleet metric.
        *         Returns successfully with no error if the deletion is successful or you specify a fleet metric that doesn't exist.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteFleetMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteFleetMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteFleetMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteFleetMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteFleetMetricCommandInput} for command's `input` shape.
        * @see {@link DeleteFleetMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteFleetMetricCommand extends $Command<DeleteFleetMetricCommandInput, DeleteFleetMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteFleetMetricCommandInput;
            constructor(input: DeleteFleetMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteFleetMetricCommandInput, DeleteFleetMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteJobRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteJobCommandInput extends DeleteJobRequest {
    }
    export interface DeleteJobCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a job and its related job executions.</p>
        *          <p>Deleting a job may take time, depending on the number of job
        *         executions created for the job and various other factors. While the job
        *         is being deleted, the status of the job will be shown as
        *         "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status
        *         is already "DELETION_IN_PROGRESS" will result in an error.</p>
        *          <p>Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or
        *         a LimitExceededException will occur.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteJobCommandInput} for command's `input` shape.
        * @see {@link DeleteJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteJobCommand extends $Command<DeleteJobCommandInput, DeleteJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteJobCommandInput;
            constructor(input: DeleteJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteJobCommandInput, DeleteJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobExecutionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteJobExecutionRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteJobExecutionCommandInput extends DeleteJobExecutionRequest {
    }
    export interface DeleteJobExecutionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a job execution.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteJobExecution</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteJobExecutionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteJobExecutionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteJobExecutionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteJobExecutionCommandInput} for command's `input` shape.
        * @see {@link DeleteJobExecutionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteJobExecutionCommand extends $Command<DeleteJobExecutionCommandInput, DeleteJobExecutionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteJobExecutionCommandInput;
            constructor(input: DeleteJobExecutionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteJobExecutionCommandInput, DeleteJobExecutionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteJobTemplateRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteJobTemplateCommandInput extends DeleteJobTemplateRequest {
    }
    export interface DeleteJobTemplateCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified job template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteJobTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteJobTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteJobTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteJobTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteJobTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteJobTemplateCommand extends $Command<DeleteJobTemplateCommandInput, DeleteJobTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteJobTemplateCommandInput;
            constructor(input: DeleteJobTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteJobTemplateCommandInput, DeleteJobTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteMitigationActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteMitigationActionRequest, DeleteMitigationActionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteMitigationActionCommandInput extends DeleteMitigationActionRequest {
    }
    export interface DeleteMitigationActionCommandOutput extends DeleteMitigationActionResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a defined mitigation action from your Amazon Web Services accounts.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteMitigationAction</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteMitigationActionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteMitigationActionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteMitigationActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMitigationActionCommandInput} for command's `input` shape.
        * @see {@link DeleteMitigationActionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteMitigationActionCommand extends $Command<DeleteMitigationActionCommandInput, DeleteMitigationActionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteMitigationActionCommandInput;
            constructor(input: DeleteMitigationActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMitigationActionCommandInput, DeleteMitigationActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteOTAUpdateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteOTAUpdateRequest, DeleteOTAUpdateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteOTAUpdateCommandInput extends DeleteOTAUpdateRequest {
    }
    export interface DeleteOTAUpdateCommandOutput extends DeleteOTAUpdateResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an OTA update.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteOTAUpdate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteOTAUpdateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteOTAUpdateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteOTAUpdateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteOTAUpdateCommandInput} for command's `input` shape.
        * @see {@link DeleteOTAUpdateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteOTAUpdateCommand extends $Command<DeleteOTAUpdateCommandInput, DeleteOTAUpdateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteOTAUpdateCommandInput;
            constructor(input: DeleteOTAUpdateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteOTAUpdateCommandInput, DeleteOTAUpdateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeletePolicyRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeletePolicyCommandInput extends DeletePolicyRequest {
    }
    export interface DeletePolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified policy.</p>
        *          <p>A policy cannot be deleted if it has non-default versions or it is attached to any
        *          certificate.</p>
        *          <p>To delete a policy, use the <a>DeletePolicyVersion</a> action to delete all non-default
        *          versions of the policy; use the <a>DetachPolicy</a> action to detach the policy from any
        *          certificate; and then use the DeletePolicy action to delete the policy.</p>
        *          <p>When a policy is deleted using DeletePolicy, its default version is deleted with
        *          it.</p>
        *          <note>
        *             <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after
        *          a policy is detached before it's ready to be deleted.</p>
        *          </note>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeletePolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeletePolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeletePolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeletePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePolicyCommandInput} for command's `input` shape.
        * @see {@link DeletePolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeletePolicyCommand extends $Command<DeletePolicyCommandInput, DeletePolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeletePolicyCommandInput;
            constructor(input: DeletePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePolicyCommandInput, DeletePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeletePolicyVersionRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeletePolicyVersionCommandInput extends DeletePolicyVersionRequest {
    }
    export interface DeletePolicyVersionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified version of the specified policy. You cannot delete the default
        *          version of a policy using this action. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
        *          version, use ListPolicyVersions.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeletePolicyVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeletePolicyVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeletePolicyVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeletePolicyVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePolicyVersionCommandInput} for command's `input` shape.
        * @see {@link DeletePolicyVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeletePolicyVersionCommand extends $Command<DeletePolicyVersionCommandInput, DeletePolicyVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeletePolicyVersionCommandInput;
            constructor(input: DeletePolicyVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePolicyVersionCommandInput, DeletePolicyVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteProvisioningTemplateRequest, DeleteProvisioningTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteProvisioningTemplateCommandInput extends DeleteProvisioningTemplateRequest {
    }
    export interface DeleteProvisioningTemplateCommandOutput extends DeleteProvisioningTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a fleet provisioning template.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteProvisioningTemplate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteProvisioningTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteProvisioningTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteProvisioningTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProvisioningTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteProvisioningTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteProvisioningTemplateCommand extends $Command<DeleteProvisioningTemplateCommandInput, DeleteProvisioningTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteProvisioningTemplateCommandInput;
            constructor(input: DeleteProvisioningTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProvisioningTemplateCommandInput, DeleteProvisioningTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteProvisioningTemplateVersionRequest, DeleteProvisioningTemplateVersionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteProvisioningTemplateVersionCommandInput extends DeleteProvisioningTemplateVersionRequest {
    }
    export interface DeleteProvisioningTemplateVersionCommandOutput extends DeleteProvisioningTemplateVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a fleet provisioning template version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteProvisioningTemplateVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteProvisioningTemplateVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteProvisioningTemplateVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteProvisioningTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProvisioningTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link DeleteProvisioningTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteProvisioningTemplateVersionCommand extends $Command<DeleteProvisioningTemplateVersionCommandInput, DeleteProvisioningTemplateVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteProvisioningTemplateVersionCommandInput;
            constructor(input: DeleteProvisioningTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProvisioningTemplateVersionCommandInput, DeleteProvisioningTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRegistrationCodeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteRegistrationCodeRequest, DeleteRegistrationCodeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteRegistrationCodeCommandInput extends DeleteRegistrationCodeRequest {
    }
    export interface DeleteRegistrationCodeCommandOutput extends DeleteRegistrationCodeResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a CA certificate registration code.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteRegistrationCode</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteRegistrationCodeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteRegistrationCodeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteRegistrationCodeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRegistrationCodeCommandInput} for command's `input` shape.
        * @see {@link DeleteRegistrationCodeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteRegistrationCodeCommand extends $Command<DeleteRegistrationCodeCommandInput, DeleteRegistrationCodeCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteRegistrationCodeCommandInput;
            constructor(input: DeleteRegistrationCodeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRegistrationCodeCommandInput, DeleteRegistrationCodeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRoleAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteRoleAliasRequest, DeleteRoleAliasResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteRoleAliasCommandInput extends DeleteRoleAliasRequest {
    }
    export interface DeleteRoleAliasCommandOutput extends DeleteRoleAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a role alias</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteRoleAlias</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteRoleAliasCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteRoleAliasCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteRoleAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRoleAliasCommandInput} for command's `input` shape.
        * @see {@link DeleteRoleAliasCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteRoleAliasCommand extends $Command<DeleteRoleAliasCommandInput, DeleteRoleAliasCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteRoleAliasCommandInput;
            constructor(input: DeleteRoleAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRoleAliasCommandInput, DeleteRoleAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteScheduledAuditCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteScheduledAuditRequest, DeleteScheduledAuditResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteScheduledAuditCommandInput extends DeleteScheduledAuditRequest {
    }
    export interface DeleteScheduledAuditCommandOutput extends DeleteScheduledAuditResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a scheduled audit.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteScheduledAudit</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteScheduledAuditCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteScheduledAuditCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteScheduledAuditCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteScheduledAuditCommandInput} for command's `input` shape.
        * @see {@link DeleteScheduledAuditCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteScheduledAuditCommand extends $Command<DeleteScheduledAuditCommandInput, DeleteScheduledAuditCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteScheduledAuditCommandInput;
            constructor(input: DeleteScheduledAuditCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteScheduledAuditCommandInput, DeleteScheduledAuditCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteSecurityProfileRequest, DeleteSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteSecurityProfileCommandInput extends DeleteSecurityProfileRequest {
    }
    export interface DeleteSecurityProfileCommandOutput extends DeleteSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link DeleteSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteSecurityProfileCommand extends $Command<DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteSecurityProfileCommandInput;
            constructor(input: DeleteSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteStreamCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteStreamRequest, DeleteStreamResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteStreamCommandInput extends DeleteStreamRequest {
    }
    export interface DeleteStreamCommandOutput extends DeleteStreamResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a stream.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteStream</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteStreamCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteStreamCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteStreamCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteStreamCommandInput} for command's `input` shape.
        * @see {@link DeleteStreamCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteStreamCommand extends $Command<DeleteStreamCommandInput, DeleteStreamCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteStreamCommandInput;
            constructor(input: DeleteStreamCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteStreamCommandInput, DeleteStreamCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteThingRequest, DeleteThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteThingCommandInput extends DeleteThingRequest {
    }
    export interface DeleteThingCommandOutput extends DeleteThingResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified thing. Returns successfully with no error if the deletion is
        * 			successful or you specify a thing that doesn't exist.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteThingCommandInput} for command's `input` shape.
        * @see {@link DeleteThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteThingCommand extends $Command<DeleteThingCommandInput, DeleteThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteThingCommandInput;
            constructor(input: DeleteThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteThingCommandInput, DeleteThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteThingGroupRequest, DeleteThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteThingGroupCommandInput extends DeleteThingGroupRequest {
    }
    export interface DeleteThingGroupCommandOutput extends DeleteThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteThingGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteThingGroupCommand extends $Command<DeleteThingGroupCommandInput, DeleteThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteThingGroupCommandInput;
            constructor(input: DeleteThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteThingGroupCommandInput, DeleteThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteThingTypeRequest, DeleteThingTypeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteThingTypeCommandInput extends DeleteThingTypeRequest {
    }
    export interface DeleteThingTypeCommandOutput extends DeleteThingTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified thing type. You cannot delete a thing type if it has things
        * 			associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and
        * 			finally use <a>DeleteThingType</a> to delete the thing type.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingType</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteThingTypeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteThingTypeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteThingTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteThingTypeCommandInput} for command's `input` shape.
        * @see {@link DeleteThingTypeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteThingTypeCommand extends $Command<DeleteThingTypeCommandInput, DeleteThingTypeCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteThingTypeCommandInput;
            constructor(input: DeleteThingTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteThingTypeCommandInput, DeleteThingTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteTopicRuleRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteTopicRuleCommandInput extends DeleteTopicRuleRequest {
    }
    export interface DeleteTopicRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTopicRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteTopicRuleCommand extends $Command<DeleteTopicRuleCommandInput, DeleteTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteTopicRuleCommandInput;
            constructor(input: DeleteTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTopicRuleCommandInput, DeleteTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteTopicRuleDestinationRequest, DeleteTopicRuleDestinationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteTopicRuleDestinationCommandInput extends DeleteTopicRuleDestinationRequest {
    }
    export interface DeleteTopicRuleDestinationCommandOutput extends DeleteTopicRuleDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a topic rule destination.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteTopicRuleDestination</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteTopicRuleDestinationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteTopicRuleDestinationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteTopicRuleDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTopicRuleDestinationCommandInput} for command's `input` shape.
        * @see {@link DeleteTopicRuleDestinationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteTopicRuleDestinationCommand extends $Command<DeleteTopicRuleDestinationCommandInput, DeleteTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteTopicRuleDestinationCommandInput;
            constructor(input: DeleteTopicRuleDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTopicRuleDestinationCommandInput, DeleteTopicRuleDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteV2LoggingLevelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeleteV2LoggingLevelRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeleteV2LoggingLevelCommandInput extends DeleteV2LoggingLevelRequest {
    }
    export interface DeleteV2LoggingLevelCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a logging level.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteV2LoggingLevel</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeleteV2LoggingLevelCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeleteV2LoggingLevelCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeleteV2LoggingLevelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteV2LoggingLevelCommandInput} for command's `input` shape.
        * @see {@link DeleteV2LoggingLevelCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeleteV2LoggingLevelCommand extends $Command<DeleteV2LoggingLevelCommandInput, DeleteV2LoggingLevelCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeleteV2LoggingLevelCommandInput;
            constructor(input: DeleteV2LoggingLevelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteV2LoggingLevelCommandInput, DeleteV2LoggingLevelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeprecateThingTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DeprecateThingTypeRequest, DeprecateThingTypeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DeprecateThingTypeCommandInput extends DeprecateThingTypeRequest {
    }
    export interface DeprecateThingTypeCommandOutput extends DeprecateThingTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Deprecates a thing type. You can not associate new things with deprecated thing
        * 			type.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeprecateThingType</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DeprecateThingTypeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DeprecateThingTypeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DeprecateThingTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeprecateThingTypeCommandInput} for command's `input` shape.
        * @see {@link DeprecateThingTypeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DeprecateThingTypeCommand extends $Command<DeprecateThingTypeCommandInput, DeprecateThingTypeCommandOutput, IoTClientResolvedConfig> {
            readonly input: DeprecateThingTypeCommandInput;
            constructor(input: DeprecateThingTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeprecateThingTypeCommandInput, DeprecateThingTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAccountAuditConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAccountAuditConfigurationRequest, DescribeAccountAuditConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAccountAuditConfigurationCommandInput extends DescribeAccountAuditConfigurationRequest {
    }
    export interface DescribeAccountAuditConfigurationCommandOutput extends DescribeAccountAuditConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the Device Defender audit settings for this account.
        *           Settings include how audit notifications are sent and which audit checks are
        *           enabled or disabled.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAccountAuditConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAccountAuditConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAccountAuditConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAccountAuditConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAccountAuditConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeAccountAuditConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAccountAuditConfigurationCommand extends $Command<DescribeAccountAuditConfigurationCommandInput, DescribeAccountAuditConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAccountAuditConfigurationCommandInput;
            constructor(input: DescribeAccountAuditConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAccountAuditConfigurationCommandInput, DescribeAccountAuditConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditFindingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAuditFindingRequest, DescribeAuditFindingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAuditFindingCommandInput extends DescribeAuditFindingRequest {
    }
    export interface DescribeAuditFindingCommandOutput extends DescribeAuditFindingResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a single audit finding. Properties include the reason for
        *       noncompliance, the severity of the issue,
        *       and the start time
        *       when the audit that returned the
        *       finding.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuditFinding</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAuditFindingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAuditFindingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAuditFindingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuditFindingCommandInput} for command's `input` shape.
        * @see {@link DescribeAuditFindingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAuditFindingCommand extends $Command<DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAuditFindingCommandInput;
            constructor(input: DescribeAuditFindingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAuditMitigationActionsTaskRequest, DescribeAuditMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAuditMitigationActionsTaskCommandInput extends DescribeAuditMitigationActionsTaskRequest {
    }
    export interface DescribeAuditMitigationActionsTaskCommandOutput extends DescribeAuditMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they're being applied, the task status, and aggregated task statistics.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAuditMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAuditMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAuditMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuditMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link DescribeAuditMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAuditMitigationActionsTaskCommand extends $Command<DescribeAuditMitigationActionsTaskCommandInput, DescribeAuditMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAuditMitigationActionsTaskCommandInput;
            constructor(input: DescribeAuditMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditMitigationActionsTaskCommandInput, DescribeAuditMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditSuppressionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAuditSuppressionRequest, DescribeAuditSuppressionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAuditSuppressionCommandInput extends DescribeAuditSuppressionRequest {
    }
    export interface DescribeAuditSuppressionCommandOutput extends DescribeAuditSuppressionResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Gets information about a Device Defender audit suppression.
        *     </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAuditSuppressionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAuditSuppressionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAuditSuppressionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuditSuppressionCommandInput} for command's `input` shape.
        * @see {@link DescribeAuditSuppressionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAuditSuppressionCommand extends $Command<DescribeAuditSuppressionCommandInput, DescribeAuditSuppressionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAuditSuppressionCommandInput;
            constructor(input: DescribeAuditSuppressionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditSuppressionCommandInput, DescribeAuditSuppressionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAuditTaskRequest, DescribeAuditTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAuditTaskCommandInput extends DescribeAuditTaskRequest {
    }
    export interface DescribeAuditTaskCommandOutput extends DescribeAuditTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a Device Defender audit.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuditTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAuditTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAuditTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAuditTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuditTaskCommandInput} for command's `input` shape.
        * @see {@link DescribeAuditTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAuditTaskCommand extends $Command<DescribeAuditTaskCommandInput, DescribeAuditTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAuditTaskCommandInput;
            constructor(input: DescribeAuditTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditTaskCommandInput, DescribeAuditTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeAuthorizerRequest, DescribeAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeAuthorizerCommandInput extends DescribeAuthorizerRequest {
    }
    export interface DescribeAuthorizerCommandOutput extends DescribeAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Describes an authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuthorizerCommandInput} for command's `input` shape.
        * @see {@link DescribeAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeAuthorizerCommand extends $Command<DescribeAuthorizerCommandInput, DescribeAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeAuthorizerCommandInput;
            constructor(input: DescribeAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuthorizerCommandInput, DescribeAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeBillingGroupRequest, DescribeBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeBillingGroupCommandInput extends DescribeBillingGroupRequest {
    }
    export interface DescribeBillingGroupCommandOutput extends DescribeBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about a billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeBillingGroupCommandInput} for command's `input` shape.
        * @see {@link DescribeBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeBillingGroupCommand extends $Command<DescribeBillingGroupCommandInput, DescribeBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeBillingGroupCommandInput;
            constructor(input: DescribeBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeBillingGroupCommandInput, DescribeBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCACertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeCACertificateRequest, DescribeCACertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeCACertificateCommandInput extends DescribeCACertificateRequest {
    }
    export interface DescribeCACertificateCommandOutput extends DescribeCACertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a registered CA certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCACertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeCACertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeCACertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeCACertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCACertificateCommandInput} for command's `input` shape.
        * @see {@link DescribeCACertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeCACertificateCommand extends $Command<DescribeCACertificateCommandInput, DescribeCACertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeCACertificateCommandInput;
            constructor(input: DescribeCACertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCACertificateCommandInput, DescribeCACertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeCertificateRequest, DescribeCertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeCertificateCommandInput extends DescribeCertificateRequest {
    }
    export interface DescribeCertificateCommandOutput extends DescribeCertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCertificateCommandInput} for command's `input` shape.
        * @see {@link DescribeCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeCertificateCommand extends $Command<DescribeCertificateCommandInput, DescribeCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeCertificateCommandInput;
            constructor(input: DescribeCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCertificateCommandInput, DescribeCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCustomMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeCustomMetricRequest, DescribeCustomMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeCustomMetricCommandInput extends DescribeCustomMetricRequest {
    }
    export interface DescribeCustomMetricCommandOutput extends DescribeCustomMetricResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Gets information about a Device Defender detect custom metric.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeCustomMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeCustomMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeCustomMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeCustomMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCustomMetricCommandInput} for command's `input` shape.
        * @see {@link DescribeCustomMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeCustomMetricCommand extends $Command<DescribeCustomMetricCommandInput, DescribeCustomMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeCustomMetricCommandInput;
            constructor(input: DescribeCustomMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCustomMetricCommandInput, DescribeCustomMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDefaultAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeDefaultAuthorizerRequest, DescribeDefaultAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeDefaultAuthorizerCommandInput extends DescribeDefaultAuthorizerRequest {
    }
    export interface DescribeDefaultAuthorizerCommandOutput extends DescribeDefaultAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the default authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDefaultAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeDefaultAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeDefaultAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeDefaultAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDefaultAuthorizerCommandInput} for command's `input` shape.
        * @see {@link DescribeDefaultAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeDefaultAuthorizerCommand extends $Command<DescribeDefaultAuthorizerCommandInput, DescribeDefaultAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeDefaultAuthorizerCommandInput;
            constructor(input: DescribeDefaultAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDefaultAuthorizerCommandInput, DescribeDefaultAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDetectMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeDetectMitigationActionsTaskRequest, DescribeDetectMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeDetectMitigationActionsTaskCommandInput extends DescribeDetectMitigationActionsTaskRequest {
    }
    export interface DescribeDetectMitigationActionsTaskCommandOutput extends DescribeDetectMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Gets information about a Device Defender ML Detect mitigation action.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDetectMitigationActionsTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeDetectMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeDetectMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeDetectMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDetectMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link DescribeDetectMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeDetectMitigationActionsTaskCommand extends $Command<DescribeDetectMitigationActionsTaskCommandInput, DescribeDetectMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeDetectMitigationActionsTaskCommandInput;
            constructor(input: DescribeDetectMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDetectMitigationActionsTaskCommandInput, DescribeDetectMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDimensionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeDimensionRequest, DescribeDimensionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeDimensionCommandInput extends DescribeDimensionRequest {
    }
    export interface DescribeDimensionCommandOutput extends DescribeDimensionResponse, __MetadataBearer {
    }
    /**
        * <p>Provides details about a dimension that is defined in your Amazon Web Services accounts.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDimension</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeDimensionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeDimensionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeDimensionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDimensionCommandInput} for command's `input` shape.
        * @see {@link DescribeDimensionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeDimensionCommand extends $Command<DescribeDimensionCommandInput, DescribeDimensionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeDimensionCommandInput;
            constructor(input: DescribeDimensionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDimensionCommandInput, DescribeDimensionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDomainConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeDomainConfigurationRequest, DescribeDomainConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeDomainConfigurationCommandInput extends DescribeDomainConfigurationRequest {
    }
    export interface DescribeDomainConfigurationCommandOutput extends DescribeDomainConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets summary information about a domain configuration.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeDomainConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeDomainConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeDomainConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeDomainConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDomainConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeDomainConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeDomainConfigurationCommand extends $Command<DescribeDomainConfigurationCommandInput, DescribeDomainConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeDomainConfigurationCommandInput;
            constructor(input: DescribeDomainConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDomainConfigurationCommandInput, DescribeDomainConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEndpointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeEndpointRequest, DescribeEndpointResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeEndpointCommandInput extends DescribeEndpointRequest {
    }
    export interface DescribeEndpointCommandOutput extends DescribeEndpointResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a unique endpoint specific to the Amazon Web Services account making the call.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeEndpoint</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeEndpointCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeEndpointCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeEndpointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEndpointCommandInput} for command's `input` shape.
        * @see {@link DescribeEndpointCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeEndpointCommand extends $Command<DescribeEndpointCommandInput, DescribeEndpointCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeEndpointCommandInput;
            constructor(input: DescribeEndpointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEndpointCommandInput, DescribeEndpointCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEventConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeEventConfigurationsRequest, DescribeEventConfigurationsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeEventConfigurationsCommandInput extends DescribeEventConfigurationsRequest {
    }
    export interface DescribeEventConfigurationsCommandOutput extends DescribeEventConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes event configurations.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeEventConfigurations</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeEventConfigurationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeEventConfigurationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeEventConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventConfigurationsCommandInput} for command's `input` shape.
        * @see {@link DescribeEventConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeEventConfigurationsCommand extends $Command<DescribeEventConfigurationsCommandInput, DescribeEventConfigurationsCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeEventConfigurationsCommandInput;
            constructor(input: DescribeEventConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventConfigurationsCommandInput, DescribeEventConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeFleetMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeFleetMetricRequest, DescribeFleetMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeFleetMetricCommandInput extends DescribeFleetMetricRequest {
    }
    export interface DescribeFleetMetricCommandOutput extends DescribeFleetMetricResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified fleet metric.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeFleetMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeFleetMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeFleetMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeFleetMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFleetMetricCommandInput} for command's `input` shape.
        * @see {@link DescribeFleetMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeFleetMetricCommand extends $Command<DescribeFleetMetricCommandInput, DescribeFleetMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeFleetMetricCommandInput;
            constructor(input: DescribeFleetMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFleetMetricCommandInput, DescribeFleetMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeIndexCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeIndexRequest, DescribeIndexResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeIndexCommandInput extends DescribeIndexRequest {
    }
    export interface DescribeIndexCommandOutput extends DescribeIndexResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a search index.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeIndex</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeIndexCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeIndexCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeIndexCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeIndexCommandInput} for command's `input` shape.
        * @see {@link DescribeIndexCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeIndexCommand extends $Command<DescribeIndexCommandInput, DescribeIndexCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeIndexCommandInput;
            constructor(input: DescribeIndexCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeIndexCommandInput, DescribeIndexCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeJobRequest, DescribeJobResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeJobCommandInput extends DescribeJobRequest {
    }
    export interface DescribeJobCommandOutput extends DescribeJobResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a job.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeJobCommandInput} for command's `input` shape.
        * @see {@link DescribeJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeJobCommand extends $Command<DescribeJobCommandInput, DescribeJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeJobCommandInput;
            constructor(input: DescribeJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJobCommandInput, DescribeJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobExecutionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeJobExecutionRequest, DescribeJobExecutionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeJobExecutionCommandInput extends DescribeJobExecutionRequest {
    }
    export interface DescribeJobExecutionCommandOutput extends DescribeJobExecutionResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a job execution.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeJobExecution</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeJobExecutionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeJobExecutionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeJobExecutionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeJobExecutionCommandInput} for command's `input` shape.
        * @see {@link DescribeJobExecutionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeJobExecutionCommand extends $Command<DescribeJobExecutionCommandInput, DescribeJobExecutionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeJobExecutionCommandInput;
            constructor(input: DescribeJobExecutionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJobExecutionCommandInput, DescribeJobExecutionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeJobTemplateRequest, DescribeJobTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeJobTemplateCommandInput extends DescribeJobTemplateRequest {
    }
    export interface DescribeJobTemplateCommandOutput extends DescribeJobTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about a job template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeJobTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeJobTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeJobTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeJobTemplateCommandInput} for command's `input` shape.
        * @see {@link DescribeJobTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeJobTemplateCommand extends $Command<DescribeJobTemplateCommandInput, DescribeJobTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeJobTemplateCommandInput;
            constructor(input: DescribeJobTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJobTemplateCommandInput, DescribeJobTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeManagedJobTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeManagedJobTemplateRequest, DescribeManagedJobTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeManagedJobTemplateCommandInput extends DescribeManagedJobTemplateRequest {
    }
    export interface DescribeManagedJobTemplateCommandOutput extends DescribeManagedJobTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>View details of a managed job template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeManagedJobTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeManagedJobTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeManagedJobTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeManagedJobTemplateCommandInput} for command's `input` shape.
        * @see {@link DescribeManagedJobTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeManagedJobTemplateCommand extends $Command<DescribeManagedJobTemplateCommandInput, DescribeManagedJobTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeManagedJobTemplateCommandInput;
            constructor(input: DescribeManagedJobTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeManagedJobTemplateCommandInput, DescribeManagedJobTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeMitigationActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeMitigationActionRequest, DescribeMitigationActionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeMitigationActionCommandInput extends DescribeMitigationActionRequest {
    }
    export interface DescribeMitigationActionCommandOutput extends DescribeMitigationActionResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a mitigation action.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeMitigationAction</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeMitigationActionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeMitigationActionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeMitigationActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeMitigationActionCommandInput} for command's `input` shape.
        * @see {@link DescribeMitigationActionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeMitigationActionCommand extends $Command<DescribeMitigationActionCommandInput, DescribeMitigationActionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeMitigationActionCommandInput;
            constructor(input: DescribeMitigationActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeMitigationActionCommandInput, DescribeMitigationActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeProvisioningTemplateRequest, DescribeProvisioningTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeProvisioningTemplateCommandInput extends DescribeProvisioningTemplateRequest {
    }
    export interface DescribeProvisioningTemplateCommandOutput extends DescribeProvisioningTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about a fleet provisioning template.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeProvisioningTemplate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeProvisioningTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeProvisioningTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeProvisioningTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisioningTemplateCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisioningTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeProvisioningTemplateCommand extends $Command<DescribeProvisioningTemplateCommandInput, DescribeProvisioningTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeProvisioningTemplateCommandInput;
            constructor(input: DescribeProvisioningTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisioningTemplateCommandInput, DescribeProvisioningTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeProvisioningTemplateVersionRequest, DescribeProvisioningTemplateVersionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeProvisioningTemplateVersionCommandInput extends DescribeProvisioningTemplateVersionRequest {
    }
    export interface DescribeProvisioningTemplateVersionCommandOutput extends DescribeProvisioningTemplateVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about a fleet provisioning template version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeProvisioningTemplateVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeProvisioningTemplateVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeProvisioningTemplateVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeProvisioningTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisioningTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisioningTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeProvisioningTemplateVersionCommand extends $Command<DescribeProvisioningTemplateVersionCommandInput, DescribeProvisioningTemplateVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeProvisioningTemplateVersionCommandInput;
            constructor(input: DescribeProvisioningTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisioningTemplateVersionCommandInput, DescribeProvisioningTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeRoleAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeRoleAliasRequest, DescribeRoleAliasResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeRoleAliasCommandInput extends DescribeRoleAliasRequest {
    }
    export interface DescribeRoleAliasCommandOutput extends DescribeRoleAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a role alias.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeRoleAlias</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeRoleAliasCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeRoleAliasCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeRoleAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeRoleAliasCommandInput} for command's `input` shape.
        * @see {@link DescribeRoleAliasCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeRoleAliasCommand extends $Command<DescribeRoleAliasCommandInput, DescribeRoleAliasCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeRoleAliasCommandInput;
            constructor(input: DescribeRoleAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeRoleAliasCommandInput, DescribeRoleAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeScheduledAuditCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeScheduledAuditRequest, DescribeScheduledAuditResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeScheduledAuditCommandInput extends DescribeScheduledAuditRequest {
    }
    export interface DescribeScheduledAuditCommandOutput extends DescribeScheduledAuditResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a scheduled audit.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeScheduledAudit</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeScheduledAuditCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeScheduledAuditCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeScheduledAuditCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeScheduledAuditCommandInput} for command's `input` shape.
        * @see {@link DescribeScheduledAuditCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeScheduledAuditCommand extends $Command<DescribeScheduledAuditCommandInput, DescribeScheduledAuditCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeScheduledAuditCommandInput;
            constructor(input: DescribeScheduledAuditCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeScheduledAuditCommandInput, DescribeScheduledAuditCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeSecurityProfileRequest, DescribeSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeSecurityProfileCommandInput extends DescribeSecurityProfileRequest {
    }
    export interface DescribeSecurityProfileCommandOutput extends DescribeSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link DescribeSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeSecurityProfileCommand extends $Command<DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeSecurityProfileCommandInput;
            constructor(input: DescribeSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeStreamCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeStreamRequest, DescribeStreamResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeStreamCommandInput extends DescribeStreamRequest {
    }
    export interface DescribeStreamCommandOutput extends DescribeStreamResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a stream.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeStream</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeStreamCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeStreamCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeStreamCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeStreamCommandInput} for command's `input` shape.
        * @see {@link DescribeStreamCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeStreamCommand extends $Command<DescribeStreamCommandInput, DescribeStreamCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeStreamCommandInput;
            constructor(input: DescribeStreamCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeStreamCommandInput, DescribeStreamCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeThingRequest, DescribeThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeThingCommandInput extends DescribeThingRequest {
    }
    export interface DescribeThingCommandOutput extends DescribeThingResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified thing.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeThingCommandInput} for command's `input` shape.
        * @see {@link DescribeThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeThingCommand extends $Command<DescribeThingCommandInput, DescribeThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeThingCommandInput;
            constructor(input: DescribeThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeThingCommandInput, DescribeThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeThingGroupRequest, DescribeThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeThingGroupCommandInput extends DescribeThingGroupRequest {
    }
    export interface DescribeThingGroupCommandOutput extends DescribeThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Describe a thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeThingGroupCommandInput} for command's `input` shape.
        * @see {@link DescribeThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeThingGroupCommand extends $Command<DescribeThingGroupCommandInput, DescribeThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeThingGroupCommandInput;
            constructor(input: DescribeThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeThingGroupCommandInput, DescribeThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingRegistrationTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeThingRegistrationTaskRequest, DescribeThingRegistrationTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeThingRegistrationTaskCommandInput extends DescribeThingRegistrationTaskRequest {
    }
    export interface DescribeThingRegistrationTaskCommandOutput extends DescribeThingRegistrationTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a bulk thing provisioning task.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingRegistrationTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeThingRegistrationTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeThingRegistrationTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeThingRegistrationTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeThingRegistrationTaskCommandInput} for command's `input` shape.
        * @see {@link DescribeThingRegistrationTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeThingRegistrationTaskCommand extends $Command<DescribeThingRegistrationTaskCommandInput, DescribeThingRegistrationTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeThingRegistrationTaskCommandInput;
            constructor(input: DescribeThingRegistrationTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeThingRegistrationTaskCommandInput, DescribeThingRegistrationTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DescribeThingTypeRequest, DescribeThingTypeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DescribeThingTypeCommandInput extends DescribeThingTypeRequest {
    }
    export interface DescribeThingTypeCommandOutput extends DescribeThingTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified thing type.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeThingType</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DescribeThingTypeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DescribeThingTypeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DescribeThingTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeThingTypeCommandInput} for command's `input` shape.
        * @see {@link DescribeThingTypeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DescribeThingTypeCommand extends $Command<DescribeThingTypeCommandInput, DescribeThingTypeCommandOutput, IoTClientResolvedConfig> {
            readonly input: DescribeThingTypeCommandInput;
            constructor(input: DescribeThingTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeThingTypeCommandInput, DescribeThingTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DetachPolicyRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DetachPolicyCommandInput extends DetachPolicyRequest {
    }
    export interface DetachPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Detaches a policy from the specified target.</p>
        *          <note>
        *             <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after
        *          a policy is detached before it's ready to be deleted.</p>
        *          </note>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DetachPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DetachPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DetachPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DetachPolicyCommandInput} for command's `input` shape.
        * @see {@link DetachPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DetachPolicyCommand extends $Command<DetachPolicyCommandInput, DetachPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: DetachPolicyCommandInput;
            constructor(input: DetachPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetachPolicyCommandInput, DetachPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPrincipalPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DetachPrincipalPolicyRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DetachPrincipalPolicyCommandInput extends DetachPrincipalPolicyRequest {
    }
    export interface DetachPrincipalPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Removes the specified policy from the specified certificate.</p>
        *          <note>
        *             <p>This action is deprecated. Please use <a>DetachPolicy</a> instead.</p>
        *          </note>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachPrincipalPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DetachPrincipalPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DetachPrincipalPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DetachPrincipalPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DetachPrincipalPolicyCommandInput} for command's `input` shape.
        * @see {@link DetachPrincipalPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DetachPrincipalPolicyCommand extends $Command<DetachPrincipalPolicyCommandInput, DetachPrincipalPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: DetachPrincipalPolicyCommandInput;
            constructor(input: DetachPrincipalPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetachPrincipalPolicyCommandInput, DetachPrincipalPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DetachSecurityProfileRequest, DetachSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DetachSecurityProfileCommandInput extends DetachSecurityProfileRequest {
    }
    export interface DetachSecurityProfileCommandOutput extends DetachSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates a Device Defender security profile from a thing group or from this account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DetachSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DetachSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DetachSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DetachSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link DetachSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DetachSecurityProfileCommand extends $Command<DetachSecurityProfileCommandInput, DetachSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: DetachSecurityProfileCommandInput;
            constructor(input: DetachSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetachSecurityProfileCommandInput, DetachSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachThingPrincipalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DetachThingPrincipalRequest, DetachThingPrincipalResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DetachThingPrincipalCommandInput extends DetachThingPrincipalRequest {
    }
    export interface DetachThingPrincipalCommandOutput extends DetachThingPrincipalResponse, __MetadataBearer {
    }
    /**
        * <p>Detaches the specified principal from the specified thing. A principal can be X.509
        * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
        * 			identities.</p>
        * 		       <note>
        * 			         <p>This call is asynchronous. It might take several seconds for the detachment to
        * 				propagate.</p>
        * 		       </note>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DetachThingPrincipal</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DetachThingPrincipalCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DetachThingPrincipalCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DetachThingPrincipalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DetachThingPrincipalCommandInput} for command's `input` shape.
        * @see {@link DetachThingPrincipalCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DetachThingPrincipalCommand extends $Command<DetachThingPrincipalCommandInput, DetachThingPrincipalCommandOutput, IoTClientResolvedConfig> {
            readonly input: DetachThingPrincipalCommandInput;
            constructor(input: DetachThingPrincipalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetachThingPrincipalCommandInput, DetachThingPrincipalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DisableTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { DisableTopicRuleRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface DisableTopicRuleCommandInput extends DisableTopicRuleRequest {
    }
    export interface DisableTopicRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disables the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DisableTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, DisableTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, DisableTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new DisableTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisableTopicRuleCommandInput} for command's `input` shape.
        * @see {@link DisableTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class DisableTopicRuleCommand extends $Command<DisableTopicRuleCommandInput, DisableTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: DisableTopicRuleCommandInput;
            constructor(input: DisableTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableTopicRuleCommandInput, DisableTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/EnableTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { EnableTopicRuleRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface EnableTopicRuleCommandInput extends EnableTopicRuleRequest {
    }
    export interface EnableTopicRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Enables the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">EnableTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, EnableTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, EnableTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new EnableTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableTopicRuleCommandInput} for command's `input` shape.
        * @see {@link EnableTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class EnableTopicRuleCommand extends $Command<EnableTopicRuleCommandInput, EnableTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: EnableTopicRuleCommandInput;
            constructor(input: EnableTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableTopicRuleCommandInput, EnableTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBehaviorModelTrainingSummariesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetBehaviorModelTrainingSummariesRequest, GetBehaviorModelTrainingSummariesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetBehaviorModelTrainingSummariesCommandInput extends GetBehaviorModelTrainingSummariesRequest {
    }
    export interface GetBehaviorModelTrainingSummariesCommandOutput extends GetBehaviorModelTrainingSummariesResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Returns a Device Defender's ML Detect Security Profile training model's status.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetBehaviorModelTrainingSummaries</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetBehaviorModelTrainingSummariesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetBehaviorModelTrainingSummariesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetBehaviorModelTrainingSummariesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBehaviorModelTrainingSummariesCommandInput} for command's `input` shape.
        * @see {@link GetBehaviorModelTrainingSummariesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetBehaviorModelTrainingSummariesCommand extends $Command<GetBehaviorModelTrainingSummariesCommandInput, GetBehaviorModelTrainingSummariesCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetBehaviorModelTrainingSummariesCommandInput;
            constructor(input: GetBehaviorModelTrainingSummariesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBehaviorModelTrainingSummariesCommandInput, GetBehaviorModelTrainingSummariesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBucketsAggregationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetBucketsAggregationRequest, GetBucketsAggregationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetBucketsAggregationCommandInput extends GetBucketsAggregationRequest {
    }
    export interface GetBucketsAggregationCommandOutput extends GetBucketsAggregationResponse, __MetadataBearer {
    }
    /**
        * <p>Aggregates on indexed data with search queries pertaining to particular fields. </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetBucketsAggregation</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetBucketsAggregationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetBucketsAggregationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetBucketsAggregationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBucketsAggregationCommandInput} for command's `input` shape.
        * @see {@link GetBucketsAggregationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetBucketsAggregationCommand extends $Command<GetBucketsAggregationCommandInput, GetBucketsAggregationCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetBucketsAggregationCommandInput;
            constructor(input: GetBucketsAggregationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBucketsAggregationCommandInput, GetBucketsAggregationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetCardinalityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetCardinalityRequest, GetCardinalityResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetCardinalityCommandInput extends GetCardinalityRequest {
    }
    export interface GetCardinalityCommandOutput extends GetCardinalityResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the approximate count of unique values that match the query.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetCardinality</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetCardinalityCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetCardinalityCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetCardinalityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetCardinalityCommandInput} for command's `input` shape.
        * @see {@link GetCardinalityCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetCardinalityCommand extends $Command<GetCardinalityCommandInput, GetCardinalityCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetCardinalityCommandInput;
            constructor(input: GetCardinalityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCardinalityCommandInput, GetCardinalityCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetEffectivePoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetEffectivePoliciesRequest, GetEffectivePoliciesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetEffectivePoliciesCommandInput extends GetEffectivePoliciesRequest {
    }
    export interface GetEffectivePoliciesCommandOutput extends GetEffectivePoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a list of the policies that have an effect on the authorization behavior of the
        *          specified device when it connects to the IoT device gateway.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetEffectivePolicies</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetEffectivePoliciesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetEffectivePoliciesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetEffectivePoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEffectivePoliciesCommandInput} for command's `input` shape.
        * @see {@link GetEffectivePoliciesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetEffectivePoliciesCommand extends $Command<GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetEffectivePoliciesCommandInput;
            constructor(input: GetEffectivePoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetIndexingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetIndexingConfigurationRequest, GetIndexingConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetIndexingConfigurationCommandInput extends GetIndexingConfigurationRequest {
    }
    export interface GetIndexingConfigurationCommandOutput extends GetIndexingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the indexing configuration.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetIndexingConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetIndexingConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetIndexingConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetIndexingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetIndexingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetIndexingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetIndexingConfigurationCommand extends $Command<GetIndexingConfigurationCommandInput, GetIndexingConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetIndexingConfigurationCommandInput;
            constructor(input: GetIndexingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetIndexingConfigurationCommandInput, GetIndexingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetJobDocumentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetJobDocumentRequest, GetJobDocumentResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetJobDocumentCommandInput extends GetJobDocumentRequest {
    }
    export interface GetJobDocumentCommandOutput extends GetJobDocumentResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a job document.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetJobDocument</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetJobDocumentCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetJobDocumentCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetJobDocumentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetJobDocumentCommandInput} for command's `input` shape.
        * @see {@link GetJobDocumentCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetJobDocumentCommand extends $Command<GetJobDocumentCommandInput, GetJobDocumentCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetJobDocumentCommandInput;
            constructor(input: GetJobDocumentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetJobDocumentCommandInput, GetJobDocumentCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetLoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetLoggingOptionsRequest, GetLoggingOptionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetLoggingOptionsCommandInput extends GetLoggingOptionsRequest {
    }
    export interface GetLoggingOptionsCommandOutput extends GetLoggingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the logging options.</p>
        *          <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code>
        *          instead.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetLoggingOptions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetLoggingOptionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetLoggingOptionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetLoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetLoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link GetLoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetLoggingOptionsCommand extends $Command<GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetLoggingOptionsCommandInput;
            constructor(input: GetLoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetOTAUpdateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetOTAUpdateRequest, GetOTAUpdateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetOTAUpdateCommandInput extends GetOTAUpdateRequest {
    }
    export interface GetOTAUpdateCommandOutput extends GetOTAUpdateResponse, __MetadataBearer {
    }
    /**
        * <p>Gets an OTA update.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetOTAUpdate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetOTAUpdateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetOTAUpdateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetOTAUpdateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetOTAUpdateCommandInput} for command's `input` shape.
        * @see {@link GetOTAUpdateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetOTAUpdateCommand extends $Command<GetOTAUpdateCommandInput, GetOTAUpdateCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetOTAUpdateCommandInput;
            constructor(input: GetOTAUpdateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetOTAUpdateCommandInput, GetOTAUpdateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPercentilesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetPercentilesRequest, GetPercentilesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetPercentilesCommandInput extends GetPercentilesRequest {
    }
    export interface GetPercentilesCommandOutput extends GetPercentilesResponse, __MetadataBearer {
    }
    /**
        * <p>Groups the aggregated values that match the query into percentile groupings. The default
        *         percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own
        *         when you call <code>GetPercentiles</code>. This function returns a value for each
        *         percentile group specified (or the default percentile groupings). The percentile group
        *         "1" contains the aggregated field value that occurs in approximately one percent of the
        *         values that match the query. The percentile group "5" contains the aggregated field value
        *         that occurs in approximately five percent of the values that match the query, and so on.
        *         The result is an approximation, the more values that match the query, the more accurate
        *         the percentile values.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPercentiles</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetPercentilesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetPercentilesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetPercentilesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPercentilesCommandInput} for command's `input` shape.
        * @see {@link GetPercentilesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetPercentilesCommand extends $Command<GetPercentilesCommandInput, GetPercentilesCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetPercentilesCommandInput;
            constructor(input: GetPercentilesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPercentilesCommandInput, GetPercentilesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetPolicyRequest, GetPolicyResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetPolicyCommandInput extends GetPolicyRequest {
    }
    export interface GetPolicyCommandOutput extends GetPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified policy with the policy document of the default
        *          version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPolicyCommandInput} for command's `input` shape.
        * @see {@link GetPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetPolicyCommand extends $Command<GetPolicyCommandInput, GetPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetPolicyCommandInput;
            constructor(input: GetPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPolicyCommandInput, GetPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetPolicyVersionRequest, GetPolicyVersionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetPolicyVersionCommandInput extends GetPolicyVersionRequest {
    }
    export interface GetPolicyVersionCommandOutput extends GetPolicyVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified policy version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetPolicyVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetPolicyVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetPolicyVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetPolicyVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPolicyVersionCommandInput} for command's `input` shape.
        * @see {@link GetPolicyVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetPolicyVersionCommand extends $Command<GetPolicyVersionCommandInput, GetPolicyVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetPolicyVersionCommandInput;
            constructor(input: GetPolicyVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPolicyVersionCommandInput, GetPolicyVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetRegistrationCodeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetRegistrationCodeRequest, GetRegistrationCodeResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetRegistrationCodeCommandInput extends GetRegistrationCodeRequest {
    }
    export interface GetRegistrationCodeCommandOutput extends GetRegistrationCodeResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a registration code used to register a CA certificate with IoT.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetRegistrationCode</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetRegistrationCodeCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetRegistrationCodeCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetRegistrationCodeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRegistrationCodeCommandInput} for command's `input` shape.
        * @see {@link GetRegistrationCodeCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetRegistrationCodeCommand extends $Command<GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetRegistrationCodeCommandInput;
            constructor(input: GetRegistrationCodeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetStatisticsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetStatisticsRequest, GetStatisticsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetStatisticsCommandInput extends GetStatisticsRequest {
    }
    export interface GetStatisticsCommandOutput extends GetStatisticsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the count, average, sum, minimum, maximum, sum of squares, variance,
        *       and standard deviation for the specified aggregated field. If the aggregation field is of type
        *       <code>String</code>, only the count statistic is returned.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetStatistics</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetStatisticsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetStatisticsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetStatisticsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetStatisticsCommandInput} for command's `input` shape.
        * @see {@link GetStatisticsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetStatisticsCommand extends $Command<GetStatisticsCommandInput, GetStatisticsCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetStatisticsCommandInput;
            constructor(input: GetStatisticsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStatisticsCommandInput, GetStatisticsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetTopicRuleRequest, GetTopicRuleResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetTopicRuleCommandInput extends GetTopicRuleRequest {
    }
    export interface GetTopicRuleCommandOutput extends GetTopicRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTopicRuleCommandInput} for command's `input` shape.
        * @see {@link GetTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetTopicRuleCommand extends $Command<GetTopicRuleCommandInput, GetTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetTopicRuleCommandInput;
            constructor(input: GetTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTopicRuleCommandInput, GetTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetTopicRuleDestinationRequest, GetTopicRuleDestinationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetTopicRuleDestinationCommandInput extends GetTopicRuleDestinationRequest {
    }
    export interface GetTopicRuleDestinationCommandOutput extends GetTopicRuleDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a topic rule destination.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetTopicRuleDestination</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetTopicRuleDestinationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetTopicRuleDestinationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetTopicRuleDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTopicRuleDestinationCommandInput} for command's `input` shape.
        * @see {@link GetTopicRuleDestinationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetTopicRuleDestinationCommand extends $Command<GetTopicRuleDestinationCommandInput, GetTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetTopicRuleDestinationCommandInput;
            constructor(input: GetTopicRuleDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTopicRuleDestinationCommandInput, GetTopicRuleDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetV2LoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { GetV2LoggingOptionsRequest, GetV2LoggingOptionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface GetV2LoggingOptionsCommandInput extends GetV2LoggingOptionsRequest {
    }
    export interface GetV2LoggingOptionsCommandOutput extends GetV2LoggingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the fine grained logging options.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetV2LoggingOptions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, GetV2LoggingOptionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, GetV2LoggingOptionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new GetV2LoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetV2LoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link GetV2LoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class GetV2LoggingOptionsCommand extends $Command<GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: GetV2LoggingOptionsCommandInput;
            constructor(input: GetV2LoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListActiveViolationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListActiveViolationsRequest, ListActiveViolationsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListActiveViolationsCommandInput extends ListActiveViolationsRequest {
    }
    export interface ListActiveViolationsCommandOutput extends ListActiveViolationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the active violations for a given Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListActiveViolations</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListActiveViolationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListActiveViolationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListActiveViolationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListActiveViolationsCommandInput} for command's `input` shape.
        * @see {@link ListActiveViolationsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListActiveViolationsCommand extends $Command<ListActiveViolationsCommandInput, ListActiveViolationsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListActiveViolationsCommandInput;
            constructor(input: ListActiveViolationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListActiveViolationsCommandInput, ListActiveViolationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAttachedPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAttachedPoliciesRequest, ListAttachedPoliciesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAttachedPoliciesCommandInput extends ListAttachedPoliciesRequest {
    }
    export interface ListAttachedPoliciesCommandOutput extends ListAttachedPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the policies attached to the specified thing group.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAttachedPolicies</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAttachedPoliciesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAttachedPoliciesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAttachedPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAttachedPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListAttachedPoliciesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAttachedPoliciesCommand extends $Command<ListAttachedPoliciesCommandInput, ListAttachedPoliciesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAttachedPoliciesCommandInput;
            constructor(input: ListAttachedPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAttachedPoliciesCommandInput, ListAttachedPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditFindingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuditFindingsRequest, ListAuditFindingsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuditFindingsCommandInput extends ListAuditFindingsRequest {
    }
    export interface ListAuditFindingsCommandOutput extends ListAuditFindingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the findings (results) of a Device Defender audit or of the audits
        *         performed during a specified time period. (Findings are retained for 90 days.)</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditFindings</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuditFindingsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuditFindingsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuditFindingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuditFindingsCommandInput} for command's `input` shape.
        * @see {@link ListAuditFindingsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuditFindingsCommand extends $Command<ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuditFindingsCommandInput;
            constructor(input: ListAuditFindingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsExecutionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuditMitigationActionsExecutionsRequest, ListAuditMitigationActionsExecutionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuditMitigationActionsExecutionsCommandInput extends ListAuditMitigationActionsExecutionsRequest {
    }
    export interface ListAuditMitigationActionsExecutionsCommandOutput extends ListAuditMitigationActionsExecutionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the status of audit mitigation action tasks that were
        *       executed.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditMitigationActionsExecutions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuditMitigationActionsExecutionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuditMitigationActionsExecutionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuditMitigationActionsExecutionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuditMitigationActionsExecutionsCommandInput} for command's `input` shape.
        * @see {@link ListAuditMitigationActionsExecutionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuditMitigationActionsExecutionsCommand extends $Command<ListAuditMitigationActionsExecutionsCommandInput, ListAuditMitigationActionsExecutionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuditMitigationActionsExecutionsCommandInput;
            constructor(input: ListAuditMitigationActionsExecutionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditMitigationActionsExecutionsCommandInput, ListAuditMitigationActionsExecutionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsTasksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuditMitigationActionsTasksRequest, ListAuditMitigationActionsTasksResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuditMitigationActionsTasksCommandInput extends ListAuditMitigationActionsTasksRequest {
    }
    export interface ListAuditMitigationActionsTasksCommandOutput extends ListAuditMitigationActionsTasksResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a list of audit mitigation action tasks that match the specified filters.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditMitigationActionsTasks</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuditMitigationActionsTasksCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuditMitigationActionsTasksCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuditMitigationActionsTasksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuditMitigationActionsTasksCommandInput} for command's `input` shape.
        * @see {@link ListAuditMitigationActionsTasksCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuditMitigationActionsTasksCommand extends $Command<ListAuditMitigationActionsTasksCommandInput, ListAuditMitigationActionsTasksCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuditMitigationActionsTasksCommandInput;
            constructor(input: ListAuditMitigationActionsTasksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditMitigationActionsTasksCommandInput, ListAuditMitigationActionsTasksCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditSuppressionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuditSuppressionsRequest, ListAuditSuppressionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuditSuppressionsCommandInput extends ListAuditSuppressionsRequest {
    }
    export interface ListAuditSuppressionsCommandOutput extends ListAuditSuppressionsResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Lists your Device Defender audit listings.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditSuppressions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuditSuppressionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuditSuppressionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuditSuppressionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuditSuppressionsCommandInput} for command's `input` shape.
        * @see {@link ListAuditSuppressionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuditSuppressionsCommand extends $Command<ListAuditSuppressionsCommandInput, ListAuditSuppressionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuditSuppressionsCommandInput;
            constructor(input: ListAuditSuppressionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditSuppressionsCommandInput, ListAuditSuppressionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditTasksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuditTasksRequest, ListAuditTasksResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuditTasksCommandInput extends ListAuditTasksRequest {
    }
    export interface ListAuditTasksCommandOutput extends ListAuditTasksResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Device Defender audits that have been performed during a given
        *           time period.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuditTasks</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuditTasksCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuditTasksCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuditTasksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuditTasksCommandInput} for command's `input` shape.
        * @see {@link ListAuditTasksCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuditTasksCommand extends $Command<ListAuditTasksCommandInput, ListAuditTasksCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuditTasksCommandInput;
            constructor(input: ListAuditTasksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditTasksCommandInput, ListAuditTasksCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuthorizersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListAuthorizersRequest, ListAuthorizersResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListAuthorizersCommandInput extends ListAuthorizersRequest {
    }
    export interface ListAuthorizersCommandOutput extends ListAuthorizersResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the authorizers registered in your account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListAuthorizers</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListAuthorizersCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListAuthorizersCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListAuthorizersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAuthorizersCommandInput} for command's `input` shape.
        * @see {@link ListAuthorizersCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListAuthorizersCommand extends $Command<ListAuthorizersCommandInput, ListAuthorizersCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListAuthorizersCommandInput;
            constructor(input: ListAuthorizersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuthorizersCommandInput, ListAuthorizersCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListBillingGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListBillingGroupsRequest, ListBillingGroupsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListBillingGroupsCommandInput extends ListBillingGroupsRequest {
    }
    export interface ListBillingGroupsCommandOutput extends ListBillingGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the billing groups you have created.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListBillingGroups</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListBillingGroupsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListBillingGroupsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListBillingGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBillingGroupsCommandInput} for command's `input` shape.
        * @see {@link ListBillingGroupsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListBillingGroupsCommand extends $Command<ListBillingGroupsCommandInput, ListBillingGroupsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListBillingGroupsCommandInput;
            constructor(input: ListBillingGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBillingGroupsCommandInput, ListBillingGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCACertificatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListCACertificatesRequest, ListCACertificatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListCACertificatesCommandInput extends ListCACertificatesRequest {
    }
    export interface ListCACertificatesCommandOutput extends ListCACertificatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the CA certificates registered for your Amazon Web Services account.</p>
        *          <p>The results are paginated with a default page size of 25. You can use the returned
        *          marker to retrieve additional results.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCACertificates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListCACertificatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListCACertificatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListCACertificatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCACertificatesCommandInput} for command's `input` shape.
        * @see {@link ListCACertificatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListCACertificatesCommand extends $Command<ListCACertificatesCommandInput, ListCACertificatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListCACertificatesCommandInput;
            constructor(input: ListCACertificatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCACertificatesCommandInput, ListCACertificatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesByCACommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListCertificatesByCARequest, ListCertificatesByCAResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListCertificatesByCACommandInput extends ListCertificatesByCARequest {
    }
    export interface ListCertificatesByCACommandOutput extends ListCertificatesByCAResponse, __MetadataBearer {
    }
    /**
        * <p>List the device certificates signed by the specified CA certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCertificatesByCA</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListCertificatesByCACommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListCertificatesByCACommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListCertificatesByCACommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCertificatesByCACommandInput} for command's `input` shape.
        * @see {@link ListCertificatesByCACommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListCertificatesByCACommand extends $Command<ListCertificatesByCACommandInput, ListCertificatesByCACommandOutput, IoTClientResolvedConfig> {
            readonly input: ListCertificatesByCACommandInput;
            constructor(input: ListCertificatesByCACommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCertificatesByCACommandInput, ListCertificatesByCACommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListCertificatesRequest, ListCertificatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListCertificatesCommandInput extends ListCertificatesRequest {
    }
    export interface ListCertificatesCommandOutput extends ListCertificatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the certificates registered in your Amazon Web Services account.</p>
        *          <p>The results are paginated with a default page size of 25. You can use the returned
        *          marker to retrieve additional results.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCertificates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListCertificatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListCertificatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListCertificatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCertificatesCommandInput} for command's `input` shape.
        * @see {@link ListCertificatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListCertificatesCommand extends $Command<ListCertificatesCommandInput, ListCertificatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListCertificatesCommandInput;
            constructor(input: ListCertificatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCertificatesCommandInput, ListCertificatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCustomMetricsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListCustomMetricsRequest, ListCustomMetricsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListCustomMetricsCommandInput extends ListCustomMetricsRequest {
    }
    export interface ListCustomMetricsCommandOutput extends ListCustomMetricsResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Lists your Device Defender detect custom metrics.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListCustomMetrics</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListCustomMetricsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListCustomMetricsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListCustomMetricsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCustomMetricsCommandInput} for command's `input` shape.
        * @see {@link ListCustomMetricsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListCustomMetricsCommand extends $Command<ListCustomMetricsCommandInput, ListCustomMetricsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListCustomMetricsCommandInput;
            constructor(input: ListCustomMetricsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCustomMetricsCommandInput, ListCustomMetricsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsExecutionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListDetectMitigationActionsExecutionsRequest, ListDetectMitigationActionsExecutionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListDetectMitigationActionsExecutionsCommandInput extends ListDetectMitigationActionsExecutionsRequest {
    }
    export interface ListDetectMitigationActionsExecutionsCommandOutput extends ListDetectMitigationActionsExecutionsResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Lists mitigation actions executions for a Device Defender ML Detect Security Profile.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDetectMitigationActionsExecutions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListDetectMitigationActionsExecutionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListDetectMitigationActionsExecutionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListDetectMitigationActionsExecutionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDetectMitigationActionsExecutionsCommandInput} for command's `input` shape.
        * @see {@link ListDetectMitigationActionsExecutionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListDetectMitigationActionsExecutionsCommand extends $Command<ListDetectMitigationActionsExecutionsCommandInput, ListDetectMitigationActionsExecutionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListDetectMitigationActionsExecutionsCommandInput;
            constructor(input: ListDetectMitigationActionsExecutionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDetectMitigationActionsExecutionsCommandInput, ListDetectMitigationActionsExecutionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsTasksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListDetectMitigationActionsTasksRequest, ListDetectMitigationActionsTasksResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListDetectMitigationActionsTasksCommandInput extends ListDetectMitigationActionsTasksRequest {
    }
    export interface ListDetectMitigationActionsTasksCommandOutput extends ListDetectMitigationActionsTasksResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       List of Device Defender ML Detect mitigation actions tasks.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDetectMitigationActionsTasks</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListDetectMitigationActionsTasksCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListDetectMitigationActionsTasksCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListDetectMitigationActionsTasksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDetectMitigationActionsTasksCommandInput} for command's `input` shape.
        * @see {@link ListDetectMitigationActionsTasksCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListDetectMitigationActionsTasksCommand extends $Command<ListDetectMitigationActionsTasksCommandInput, ListDetectMitigationActionsTasksCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListDetectMitigationActionsTasksCommandInput;
            constructor(input: ListDetectMitigationActionsTasksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDetectMitigationActionsTasksCommandInput, ListDetectMitigationActionsTasksCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDimensionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListDimensionsRequest, ListDimensionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListDimensionsCommandInput extends ListDimensionsRequest {
    }
    export interface ListDimensionsCommandOutput extends ListDimensionsResponse, __MetadataBearer {
    }
    /**
        * <p>List the set of dimensions that are defined for your Amazon Web Services accounts.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDimensions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListDimensionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListDimensionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListDimensionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDimensionsCommandInput} for command's `input` shape.
        * @see {@link ListDimensionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListDimensionsCommand extends $Command<ListDimensionsCommandInput, ListDimensionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListDimensionsCommandInput;
            constructor(input: ListDimensionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDimensionsCommandInput, ListDimensionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDomainConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListDomainConfigurationsRequest, ListDomainConfigurationsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListDomainConfigurationsCommandInput extends ListDomainConfigurationsRequest {
    }
    export interface ListDomainConfigurationsCommandOutput extends ListDomainConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a list of domain configurations for the user. This list is sorted
        *          alphabetically by domain configuration name.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListDomainConfigurations</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListDomainConfigurationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListDomainConfigurationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListDomainConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDomainConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListDomainConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListDomainConfigurationsCommand extends $Command<ListDomainConfigurationsCommandInput, ListDomainConfigurationsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListDomainConfigurationsCommandInput;
            constructor(input: ListDomainConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDomainConfigurationsCommandInput, ListDomainConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListFleetMetricsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListFleetMetricsRequest, ListFleetMetricsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListFleetMetricsCommandInput extends ListFleetMetricsRequest {
    }
    export interface ListFleetMetricsCommandOutput extends ListFleetMetricsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all your fleet metrics. </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListFleetMetrics</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListFleetMetricsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListFleetMetricsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListFleetMetricsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFleetMetricsCommandInput} for command's `input` shape.
        * @see {@link ListFleetMetricsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListFleetMetricsCommand extends $Command<ListFleetMetricsCommandInput, ListFleetMetricsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListFleetMetricsCommandInput;
            constructor(input: ListFleetMetricsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFleetMetricsCommandInput, ListFleetMetricsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListIndicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListIndicesRequest, ListIndicesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListIndicesCommandInput extends ListIndicesRequest {
    }
    export interface ListIndicesCommandOutput extends ListIndicesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the search indices.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListIndices</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListIndicesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListIndicesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListIndicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListIndicesCommandInput} for command's `input` shape.
        * @see {@link ListIndicesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListIndicesCommand extends $Command<ListIndicesCommandInput, ListIndicesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListIndicesCommandInput;
            constructor(input: ListIndicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListIndicesCommandInput, ListIndicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListJobExecutionsForJobRequest, ListJobExecutionsForJobResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListJobExecutionsForJobCommandInput extends ListJobExecutionsForJobRequest {
    }
    export interface ListJobExecutionsForJobCommandOutput extends ListJobExecutionsForJobResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the job executions for a job.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobExecutionsForJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListJobExecutionsForJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListJobExecutionsForJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListJobExecutionsForJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobExecutionsForJobCommandInput} for command's `input` shape.
        * @see {@link ListJobExecutionsForJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListJobExecutionsForJobCommand extends $Command<ListJobExecutionsForJobCommandInput, ListJobExecutionsForJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListJobExecutionsForJobCommandInput;
            constructor(input: ListJobExecutionsForJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobExecutionsForJobCommandInput, ListJobExecutionsForJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListJobExecutionsForThingRequest, ListJobExecutionsForThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListJobExecutionsForThingCommandInput extends ListJobExecutionsForThingRequest {
    }
    export interface ListJobExecutionsForThingCommandOutput extends ListJobExecutionsForThingResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the job executions for the specified thing.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobExecutionsForThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListJobExecutionsForThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListJobExecutionsForThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListJobExecutionsForThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobExecutionsForThingCommandInput} for command's `input` shape.
        * @see {@link ListJobExecutionsForThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListJobExecutionsForThingCommand extends $Command<ListJobExecutionsForThingCommandInput, ListJobExecutionsForThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListJobExecutionsForThingCommandInput;
            constructor(input: ListJobExecutionsForThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobExecutionsForThingCommandInput, ListJobExecutionsForThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListJobsRequest, ListJobsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListJobsCommandInput extends ListJobsRequest {
    }
    export interface ListJobsCommandOutput extends ListJobsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists jobs.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobs</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListJobsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListJobsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobsCommandInput} for command's `input` shape.
        * @see {@link ListJobsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListJobsCommand extends $Command<ListJobsCommandInput, ListJobsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListJobsCommandInput;
            constructor(input: ListJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobsCommandInput, ListJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListJobTemplatesRequest, ListJobTemplatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListJobTemplatesCommandInput extends ListJobTemplatesRequest {
    }
    export interface ListJobTemplatesCommandOutput extends ListJobTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of job templates.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListJobTemplates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListJobTemplatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListJobTemplatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListJobTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListJobTemplatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListJobTemplatesCommand extends $Command<ListJobTemplatesCommandInput, ListJobTemplatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListJobTemplatesCommandInput;
            constructor(input: ListJobTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobTemplatesCommandInput, ListJobTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListManagedJobTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListManagedJobTemplatesRequest, ListManagedJobTemplatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListManagedJobTemplatesCommandInput extends ListManagedJobTemplatesRequest {
    }
    export interface ListManagedJobTemplatesCommandOutput extends ListManagedJobTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of managed job templates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListManagedJobTemplatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListManagedJobTemplatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListManagedJobTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListManagedJobTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListManagedJobTemplatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListManagedJobTemplatesCommand extends $Command<ListManagedJobTemplatesCommandInput, ListManagedJobTemplatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListManagedJobTemplatesCommandInput;
            constructor(input: ListManagedJobTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListManagedJobTemplatesCommandInput, ListManagedJobTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMetricValuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListMetricValuesRequest, ListMetricValuesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListMetricValuesCommandInput extends ListMetricValuesRequest {
    }
    export interface ListMetricValuesCommandOutput extends ListMetricValuesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric)
        *       by the given thing during the specified time period.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListMetricValuesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListMetricValuesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListMetricValuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMetricValuesCommandInput} for command's `input` shape.
        * @see {@link ListMetricValuesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListMetricValuesCommand extends $Command<ListMetricValuesCommandInput, ListMetricValuesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListMetricValuesCommandInput;
            constructor(input: ListMetricValuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMetricValuesCommandInput, ListMetricValuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMitigationActionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListMitigationActionsRequest, ListMitigationActionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListMitigationActionsCommandInput extends ListMitigationActionsRequest {
    }
    export interface ListMitigationActionsCommandOutput extends ListMitigationActionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a list of all mitigation actions that match the specified filter criteria.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListMitigationActions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListMitigationActionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListMitigationActionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListMitigationActionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMitigationActionsCommandInput} for command's `input` shape.
        * @see {@link ListMitigationActionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListMitigationActionsCommand extends $Command<ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListMitigationActionsCommandInput;
            constructor(input: ListMitigationActionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOTAUpdatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListOTAUpdatesRequest, ListOTAUpdatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListOTAUpdatesCommandInput extends ListOTAUpdatesRequest {
    }
    export interface ListOTAUpdatesCommandOutput extends ListOTAUpdatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists OTA updates.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListOTAUpdates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListOTAUpdatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListOTAUpdatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListOTAUpdatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOTAUpdatesCommandInput} for command's `input` shape.
        * @see {@link ListOTAUpdatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListOTAUpdatesCommand extends $Command<ListOTAUpdatesCommandInput, ListOTAUpdatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListOTAUpdatesCommandInput;
            constructor(input: ListOTAUpdatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOTAUpdatesCommandInput, ListOTAUpdatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOutgoingCertificatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListOutgoingCertificatesRequest, ListOutgoingCertificatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListOutgoingCertificatesCommandInput extends ListOutgoingCertificatesRequest {
    }
    export interface ListOutgoingCertificatesCommandOutput extends ListOutgoingCertificatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists certificates that are being transferred but not yet accepted.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListOutgoingCertificates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListOutgoingCertificatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListOutgoingCertificatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListOutgoingCertificatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOutgoingCertificatesCommandInput} for command's `input` shape.
        * @see {@link ListOutgoingCertificatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListOutgoingCertificatesCommand extends $Command<ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListOutgoingCertificatesCommandInput;
            constructor(input: ListOutgoingCertificatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListPoliciesRequest, ListPoliciesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListPoliciesCommandInput extends ListPoliciesRequest {
    }
    export interface ListPoliciesCommandOutput extends ListPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists your policies.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicies</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListPoliciesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListPoliciesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListPoliciesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListPoliciesCommand extends $Command<ListPoliciesCommandInput, ListPoliciesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListPoliciesCommandInput;
            constructor(input: ListPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPoliciesCommandInput, ListPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyPrincipalsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListPolicyPrincipalsRequest, ListPolicyPrincipalsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListPolicyPrincipalsCommandInput extends ListPolicyPrincipalsRequest {
    }
    export interface ListPolicyPrincipalsCommandOutput extends ListPolicyPrincipalsResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Lists the principals associated with the specified policy.</p>
        *          <p>
        *             <b>Note:</b> This action is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicyPrincipals</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListPolicyPrincipalsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListPolicyPrincipalsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListPolicyPrincipalsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPolicyPrincipalsCommandInput} for command's `input` shape.
        * @see {@link ListPolicyPrincipalsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListPolicyPrincipalsCommand extends $Command<ListPolicyPrincipalsCommandInput, ListPolicyPrincipalsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListPolicyPrincipalsCommandInput;
            constructor(input: ListPolicyPrincipalsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPolicyPrincipalsCommandInput, ListPolicyPrincipalsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListPolicyVersionsRequest, ListPolicyVersionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListPolicyVersionsCommandInput extends ListPolicyVersionsRequest {
    }
    export interface ListPolicyVersionsCommandOutput extends ListPolicyVersionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the versions of the specified policy and identifies the default
        *          version.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPolicyVersions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListPolicyVersionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListPolicyVersionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListPolicyVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPolicyVersionsCommandInput} for command's `input` shape.
        * @see {@link ListPolicyVersionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListPolicyVersionsCommand extends $Command<ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListPolicyVersionsCommandInput;
            constructor(input: ListPolicyVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListPrincipalPoliciesRequest, ListPrincipalPoliciesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListPrincipalPoliciesCommandInput extends ListPrincipalPoliciesRequest {
    }
    export interface ListPrincipalPoliciesCommandOutput extends ListPrincipalPoliciesResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Lists the policies attached to the specified principal. If you use an Cognito
        *          identity, the ID must be in <a href="https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito Identity format</a>.</p>
        *          <p>
        *             <b>Note:</b> This action is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPrincipalPolicies</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListPrincipalPoliciesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListPrincipalPoliciesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListPrincipalPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPrincipalPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListPrincipalPoliciesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListPrincipalPoliciesCommand extends $Command<ListPrincipalPoliciesCommandInput, ListPrincipalPoliciesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListPrincipalPoliciesCommandInput;
            constructor(input: ListPrincipalPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPrincipalPoliciesCommandInput, ListPrincipalPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalThingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListPrincipalThingsRequest, ListPrincipalThingsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListPrincipalThingsCommandInput extends ListPrincipalThingsRequest {
    }
    export interface ListPrincipalThingsCommandOutput extends ListPrincipalThingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the things associated with the specified principal. A principal can be X.509
        * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
        * 			identities. </p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListPrincipalThings</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListPrincipalThingsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListPrincipalThingsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListPrincipalThingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPrincipalThingsCommandInput} for command's `input` shape.
        * @see {@link ListPrincipalThingsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListPrincipalThingsCommand extends $Command<ListPrincipalThingsCommandInput, ListPrincipalThingsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListPrincipalThingsCommandInput;
            constructor(input: ListPrincipalThingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPrincipalThingsCommandInput, ListPrincipalThingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListProvisioningTemplatesRequest, ListProvisioningTemplatesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListProvisioningTemplatesCommandInput extends ListProvisioningTemplatesRequest {
    }
    export interface ListProvisioningTemplatesCommandOutput extends ListProvisioningTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the fleet provisioning templates in your Amazon Web Services account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListProvisioningTemplates</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListProvisioningTemplatesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListProvisioningTemplatesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListProvisioningTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisioningTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListProvisioningTemplatesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListProvisioningTemplatesCommand extends $Command<ListProvisioningTemplatesCommandInput, ListProvisioningTemplatesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListProvisioningTemplatesCommandInput;
            constructor(input: ListProvisioningTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisioningTemplatesCommandInput, ListProvisioningTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplateVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListProvisioningTemplateVersionsRequest, ListProvisioningTemplateVersionsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListProvisioningTemplateVersionsCommandInput extends ListProvisioningTemplateVersionsRequest {
    }
    export interface ListProvisioningTemplateVersionsCommandOutput extends ListProvisioningTemplateVersionsResponse, __MetadataBearer {
    }
    /**
        * <p>A list of fleet provisioning template versions.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListProvisioningTemplateVersions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListProvisioningTemplateVersionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListProvisioningTemplateVersionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListProvisioningTemplateVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisioningTemplateVersionsCommandInput} for command's `input` shape.
        * @see {@link ListProvisioningTemplateVersionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListProvisioningTemplateVersionsCommand extends $Command<ListProvisioningTemplateVersionsCommandInput, ListProvisioningTemplateVersionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListProvisioningTemplateVersionsCommandInput;
            constructor(input: ListProvisioningTemplateVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisioningTemplateVersionsCommandInput, ListProvisioningTemplateVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListRoleAliasesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListRoleAliasesRequest, ListRoleAliasesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListRoleAliasesCommandInput extends ListRoleAliasesRequest {
    }
    export interface ListRoleAliasesCommandOutput extends ListRoleAliasesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the role aliases registered in your account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListRoleAliases</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListRoleAliasesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListRoleAliasesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListRoleAliasesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRoleAliasesCommandInput} for command's `input` shape.
        * @see {@link ListRoleAliasesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListRoleAliasesCommand extends $Command<ListRoleAliasesCommandInput, ListRoleAliasesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListRoleAliasesCommandInput;
            constructor(input: ListRoleAliasesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRoleAliasesCommandInput, ListRoleAliasesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListScheduledAuditsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListScheduledAuditsRequest, ListScheduledAuditsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListScheduledAuditsCommandInput extends ListScheduledAuditsRequest {
    }
    export interface ListScheduledAuditsCommandOutput extends ListScheduledAuditsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all of your scheduled audits.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListScheduledAudits</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListScheduledAuditsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListScheduledAuditsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListScheduledAuditsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListScheduledAuditsCommandInput} for command's `input` shape.
        * @see {@link ListScheduledAuditsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListScheduledAuditsCommand extends $Command<ListScheduledAuditsCommandInput, ListScheduledAuditsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListScheduledAuditsCommandInput;
            constructor(input: ListScheduledAuditsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListScheduledAuditsCommandInput, ListScheduledAuditsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListSecurityProfilesRequest, ListSecurityProfilesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListSecurityProfilesCommandInput extends ListSecurityProfilesRequest {
    }
    export interface ListSecurityProfilesCommandOutput extends ListSecurityProfilesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Device Defender security profiles
        *       you've
        *       created. You can filter security profiles by dimension or custom metric.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListSecurityProfiles</a> action.</p>
        *          <note>
        *             <p>
        *                <code>dimensionName</code> and <code>metricName</code> cannot be used in the same request.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListSecurityProfilesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListSecurityProfilesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListSecurityProfilesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSecurityProfilesCommandInput} for command's `input` shape.
        * @see {@link ListSecurityProfilesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListSecurityProfilesCommand extends $Command<ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListSecurityProfilesCommandInput;
            constructor(input: ListSecurityProfilesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesForTargetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListSecurityProfilesForTargetRequest, ListSecurityProfilesForTargetResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListSecurityProfilesForTargetCommandInput extends ListSecurityProfilesForTargetRequest {
    }
    export interface ListSecurityProfilesForTargetCommandOutput extends ListSecurityProfilesForTargetResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Device Defender security profiles attached to a target (thing group).</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListSecurityProfilesForTarget</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListSecurityProfilesForTargetCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListSecurityProfilesForTargetCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListSecurityProfilesForTargetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSecurityProfilesForTargetCommandInput} for command's `input` shape.
        * @see {@link ListSecurityProfilesForTargetCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListSecurityProfilesForTargetCommand extends $Command<ListSecurityProfilesForTargetCommandInput, ListSecurityProfilesForTargetCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListSecurityProfilesForTargetCommandInput;
            constructor(input: ListSecurityProfilesForTargetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSecurityProfilesForTargetCommandInput, ListSecurityProfilesForTargetCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListStreamsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListStreamsRequest, ListStreamsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListStreamsCommandInput extends ListStreamsRequest {
    }
    export interface ListStreamsCommandOutput extends ListStreamsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all of the streams in your Amazon Web Services account.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListStreams</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListStreamsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListStreamsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListStreamsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListStreamsCommandInput} for command's `input` shape.
        * @see {@link ListStreamsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListStreamsCommand extends $Command<ListStreamsCommandInput, ListStreamsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListStreamsCommandInput;
            constructor(input: ListStreamsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListStreamsCommandInput, ListStreamsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags (metadata) you have assigned to the resource.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTagsForResource</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListTagsForResourceCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListTagsForResourceCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListTargetsForPolicyRequest, ListTargetsForPolicyResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListTargetsForPolicyCommandInput extends ListTargetsForPolicyRequest {
    }
    export interface ListTargetsForPolicyCommandOutput extends ListTargetsForPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>List targets for the specified policy.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTargetsForPolicy</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListTargetsForPolicyCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListTargetsForPolicyCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListTargetsForPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTargetsForPolicyCommandInput} for command's `input` shape.
        * @see {@link ListTargetsForPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListTargetsForPolicyCommand extends $Command<ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListTargetsForPolicyCommandInput;
            constructor(input: ListTargetsForPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListTargetsForSecurityProfileRequest, ListTargetsForSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListTargetsForSecurityProfileCommandInput extends ListTargetsForSecurityProfileRequest {
    }
    export interface ListTargetsForSecurityProfileCommandOutput extends ListTargetsForSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the targets (thing groups) associated with a given Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTargetsForSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListTargetsForSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListTargetsForSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListTargetsForSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTargetsForSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link ListTargetsForSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListTargetsForSecurityProfileCommand extends $Command<ListTargetsForSecurityProfileCommandInput, ListTargetsForSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListTargetsForSecurityProfileCommandInput;
            constructor(input: ListTargetsForSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTargetsForSecurityProfileCommandInput, ListTargetsForSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingGroupsRequest, ListThingGroupsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListThingGroupsCommandInput extends ListThingGroupsRequest {
    }
    export interface ListThingGroupsCommandOutput extends ListThingGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>List the thing groups in your account.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingGroups</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingGroupsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingGroupsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingGroupsCommandInput} for command's `input` shape.
        * @see {@link ListThingGroupsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingGroupsCommand extends $Command<ListThingGroupsCommandInput, ListThingGroupsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingGroupsCommandInput;
            constructor(input: ListThingGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingGroupsCommandInput, ListThingGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsForThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingGroupsForThingRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    import { ListThingGroupsForThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingGroupsForThingCommandInput extends ListThingGroupsForThingRequest {
    }
    export interface ListThingGroupsForThingCommandOutput extends ListThingGroupsForThingResponse, __MetadataBearer {
    }
    /**
        * <p>List the thing groups to which the specified thing belongs.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingGroupsForThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingGroupsForThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingGroupsForThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingGroupsForThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingGroupsForThingCommandInput} for command's `input` shape.
        * @see {@link ListThingGroupsForThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingGroupsForThingCommand extends $Command<ListThingGroupsForThingCommandInput, ListThingGroupsForThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingGroupsForThingCommandInput;
            constructor(input: ListThingGroupsForThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingGroupsForThingCommandInput, ListThingGroupsForThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingPrincipalsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingPrincipalsRequest, ListThingPrincipalsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingPrincipalsCommandInput extends ListThingPrincipalsRequest {
    }
    export interface ListThingPrincipalsCommandOutput extends ListThingPrincipalsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the principals associated with the specified thing. A principal can be X.509
        * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
        * 			identities.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingPrincipals</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingPrincipalsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingPrincipalsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingPrincipalsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingPrincipalsCommandInput} for command's `input` shape.
        * @see {@link ListThingPrincipalsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingPrincipalsCommand extends $Command<ListThingPrincipalsCommandInput, ListThingPrincipalsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingPrincipalsCommandInput;
            constructor(input: ListThingPrincipalsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingPrincipalsCommandInput, ListThingPrincipalsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTaskReportsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingRegistrationTaskReportsRequest, ListThingRegistrationTaskReportsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingRegistrationTaskReportsCommandInput extends ListThingRegistrationTaskReportsRequest {
    }
    export interface ListThingRegistrationTaskReportsCommandOutput extends ListThingRegistrationTaskReportsResponse, __MetadataBearer {
    }
    /**
        * <p>Information about the thing registration tasks.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingRegistrationTaskReportsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingRegistrationTaskReportsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingRegistrationTaskReportsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingRegistrationTaskReportsCommandInput} for command's `input` shape.
        * @see {@link ListThingRegistrationTaskReportsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingRegistrationTaskReportsCommand extends $Command<ListThingRegistrationTaskReportsCommandInput, ListThingRegistrationTaskReportsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingRegistrationTaskReportsCommandInput;
            constructor(input: ListThingRegistrationTaskReportsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingRegistrationTaskReportsCommandInput, ListThingRegistrationTaskReportsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTasksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingRegistrationTasksRequest, ListThingRegistrationTasksResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingRegistrationTasksCommandInput extends ListThingRegistrationTasksRequest {
    }
    export interface ListThingRegistrationTasksCommandOutput extends ListThingRegistrationTasksResponse, __MetadataBearer {
    }
    /**
        * <p>List bulk thing provisioning tasks.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingRegistrationTasks</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingRegistrationTasksCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingRegistrationTasksCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingRegistrationTasksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingRegistrationTasksCommandInput} for command's `input` shape.
        * @see {@link ListThingRegistrationTasksCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingRegistrationTasksCommand extends $Command<ListThingRegistrationTasksCommandInput, ListThingRegistrationTasksCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingRegistrationTasksCommandInput;
            constructor(input: ListThingRegistrationTasksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingRegistrationTasksCommandInput, ListThingRegistrationTasksCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingsRequest, ListThingsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingsCommandInput extends ListThingsRequest {
    }
    export interface ListThingsCommandOutput extends ListThingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists your things. Use the <b>attributeName</b> and
        * 				<b>attributeValue</b> parameters to filter your things.
        * 			For example, calling <code>ListThings</code> with attributeName=Color and
        * 			attributeValue=Red retrieves all things in the registry that contain an attribute
        * 				<b>Color</b> with the value <b>Red</b>. </p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThings</a> action.</p>
        *
        * 		       <note>
        * 			         <p>You will not be charged for calling this API if an <code>Access denied</code> error is returned. You will also not be charged if no attributes or pagination token was provided in request and no pagination token and no results were returned.</p>
        * 		       </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingsCommandInput} for command's `input` shape.
        * @see {@link ListThingsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingsCommand extends $Command<ListThingsCommandInput, ListThingsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingsCommandInput;
            constructor(input: ListThingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingsCommandInput, ListThingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingsInBillingGroupRequest, ListThingsInBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingsInBillingGroupCommandInput extends ListThingsInBillingGroupRequest {
    }
    export interface ListThingsInBillingGroupCommandOutput extends ListThingsInBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the things you have added to the given billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingsInBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingsInBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingsInBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingsInBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingsInBillingGroupCommandInput} for command's `input` shape.
        * @see {@link ListThingsInBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingsInBillingGroupCommand extends $Command<ListThingsInBillingGroupCommandInput, ListThingsInBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingsInBillingGroupCommandInput;
            constructor(input: ListThingsInBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingsInBillingGroupCommandInput, ListThingsInBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingsInThingGroupRequest, ListThingsInThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingsInThingGroupCommandInput extends ListThingsInThingGroupRequest {
    }
    export interface ListThingsInThingGroupCommandOutput extends ListThingsInThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the things in the specified group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingsInThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingsInThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingsInThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingsInThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingsInThingGroupCommandInput} for command's `input` shape.
        * @see {@link ListThingsInThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingsInThingGroupCommand extends $Command<ListThingsInThingGroupCommandInput, ListThingsInThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingsInThingGroupCommandInput;
            constructor(input: ListThingsInThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingsInThingGroupCommandInput, ListThingsInThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingTypesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListThingTypesRequest, ListThingTypesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListThingTypesCommandInput extends ListThingTypesRequest {
    }
    export interface ListThingTypesCommandOutput extends ListThingTypesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the existing thing types.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListThingTypes</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListThingTypesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListThingTypesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListThingTypesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListThingTypesCommandInput} for command's `input` shape.
        * @see {@link ListThingTypesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListThingTypesCommand extends $Command<ListThingTypesCommandInput, ListThingTypesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListThingTypesCommandInput;
            constructor(input: ListThingTypesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListThingTypesCommandInput, ListThingTypesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRuleDestinationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListTopicRuleDestinationsRequest, ListTopicRuleDestinationsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListTopicRuleDestinationsCommandInput extends ListTopicRuleDestinationsRequest {
    }
    export interface ListTopicRuleDestinationsCommandOutput extends ListTopicRuleDestinationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the topic rule destinations in your Amazon Web Services account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTopicRuleDestinations</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListTopicRuleDestinationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListTopicRuleDestinationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListTopicRuleDestinationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTopicRuleDestinationsCommandInput} for command's `input` shape.
        * @see {@link ListTopicRuleDestinationsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListTopicRuleDestinationsCommand extends $Command<ListTopicRuleDestinationsCommandInput, ListTopicRuleDestinationsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListTopicRuleDestinationsCommandInput;
            constructor(input: ListTopicRuleDestinationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTopicRuleDestinationsCommandInput, ListTopicRuleDestinationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListTopicRulesRequest, ListTopicRulesResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListTopicRulesCommandInput extends ListTopicRulesRequest {
    }
    export interface ListTopicRulesCommandOutput extends ListTopicRulesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the rules for the specific topic.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListTopicRules</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListTopicRulesCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListTopicRulesCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListTopicRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTopicRulesCommandInput} for command's `input` shape.
        * @see {@link ListTopicRulesCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListTopicRulesCommand extends $Command<ListTopicRulesCommandInput, ListTopicRulesCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListTopicRulesCommandInput;
            constructor(input: ListTopicRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTopicRulesCommandInput, ListTopicRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListV2LoggingLevelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListV2LoggingLevelsRequest, ListV2LoggingLevelsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListV2LoggingLevelsCommandInput extends ListV2LoggingLevelsRequest {
    }
    export interface ListV2LoggingLevelsCommandOutput extends ListV2LoggingLevelsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists logging levels.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListV2LoggingLevels</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListV2LoggingLevelsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListV2LoggingLevelsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListV2LoggingLevelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListV2LoggingLevelsCommandInput} for command's `input` shape.
        * @see {@link ListV2LoggingLevelsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListV2LoggingLevelsCommand extends $Command<ListV2LoggingLevelsCommandInput, ListV2LoggingLevelsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListV2LoggingLevelsCommandInput;
            constructor(input: ListV2LoggingLevelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListV2LoggingLevelsCommandInput, ListV2LoggingLevelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListViolationEventsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ListViolationEventsRequest, ListViolationEventsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ListViolationEventsCommandInput extends ListViolationEventsRequest {
    }
    export interface ListViolationEventsCommandOutput extends ListViolationEventsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Device Defender security profile violations discovered during the given time period.
        *       You can use filters to limit the results to those alerts issued for a particular security profile,
        *       behavior, or thing (device).</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListViolationEvents</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ListViolationEventsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ListViolationEventsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ListViolationEventsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListViolationEventsCommandInput} for command's `input` shape.
        * @see {@link ListViolationEventsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ListViolationEventsCommand extends $Command<ListViolationEventsCommandInput, ListViolationEventsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ListViolationEventsCommandInput;
            constructor(input: ListViolationEventsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListViolationEventsCommandInput, ListViolationEventsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/PutVerificationStateOnViolationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { PutVerificationStateOnViolationRequest, PutVerificationStateOnViolationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface PutVerificationStateOnViolationCommandInput extends PutVerificationStateOnViolationRequest {
    }
    export interface PutVerificationStateOnViolationCommandOutput extends PutVerificationStateOnViolationResponse, __MetadataBearer {
    }
    /**
        * <p>Set a verification state and provide a description of that verification state on a violation (detect alarm).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, PutVerificationStateOnViolationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, PutVerificationStateOnViolationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new PutVerificationStateOnViolationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVerificationStateOnViolationCommandInput} for command's `input` shape.
        * @see {@link PutVerificationStateOnViolationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class PutVerificationStateOnViolationCommand extends $Command<PutVerificationStateOnViolationCommandInput, PutVerificationStateOnViolationCommandOutput, IoTClientResolvedConfig> {
            readonly input: PutVerificationStateOnViolationCommandInput;
            constructor(input: PutVerificationStateOnViolationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVerificationStateOnViolationCommandInput, PutVerificationStateOnViolationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCACertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RegisterCACertificateRequest, RegisterCACertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RegisterCACertificateCommandInput extends RegisterCACertificateRequest {
    }
    export interface RegisterCACertificateCommandOutput extends RegisterCACertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Registers a CA certificate with Amazon Web Services IoT Core. There is no limit to the number of CA
        *          certificates you can register in your Amazon Web Services account. You can register up to 10 CA
        *          certificates with the same <code>CA subject field</code> per Amazon Web Services account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterCACertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RegisterCACertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RegisterCACertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RegisterCACertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterCACertificateCommandInput} for command's `input` shape.
        * @see {@link RegisterCACertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RegisterCACertificateCommand extends $Command<RegisterCACertificateCommandInput, RegisterCACertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: RegisterCACertificateCommandInput;
            constructor(input: RegisterCACertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterCACertificateCommandInput, RegisterCACertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RegisterCertificateRequest, RegisterCertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RegisterCertificateCommandInput extends RegisterCertificateRequest {
    }
    export interface RegisterCertificateCommandOutput extends RegisterCertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Registers a device certificate with IoT in the same <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode">certificate mode</a> as the signing CA. If you have more than one CA certificate that has the same subject field, you must
        *          specify the CA certificate that was used to sign the device certificate being
        *          registered.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterCertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RegisterCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RegisterCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RegisterCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterCertificateCommandInput} for command's `input` shape.
        * @see {@link RegisterCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RegisterCertificateCommand extends $Command<RegisterCertificateCommandInput, RegisterCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: RegisterCertificateCommandInput;
            constructor(input: RegisterCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterCertificateCommandInput, RegisterCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateWithoutCACommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RegisterCertificateWithoutCARequest, RegisterCertificateWithoutCAResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RegisterCertificateWithoutCACommandInput extends RegisterCertificateWithoutCARequest {
    }
    export interface RegisterCertificateWithoutCACommandOutput extends RegisterCertificateWithoutCAResponse, __MetadataBearer {
    }
    /**
        * <p>Register a certificate that does not have a certificate authority (CA).
        *          For supported certificates, consult <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms">
        *          Certificate signing algorithms supported by IoT</a>.
        *       </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RegisterCertificateWithoutCACommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RegisterCertificateWithoutCACommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RegisterCertificateWithoutCACommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterCertificateWithoutCACommandInput} for command's `input` shape.
        * @see {@link RegisterCertificateWithoutCACommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RegisterCertificateWithoutCACommand extends $Command<RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput, IoTClientResolvedConfig> {
            readonly input: RegisterCertificateWithoutCACommandInput;
            constructor(input: RegisterCertificateWithoutCACommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RegisterThingRequest, RegisterThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RegisterThingCommandInput extends RegisterThingRequest {
    }
    export interface RegisterThingCommandOutput extends RegisterThingResponse, __MetadataBearer {
    }
    /**
        * <p>Provisions a thing in the device registry. RegisterThing calls other IoT control
        *          plane APIs. These calls might exceed your account level <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot">
        *             IoT Throttling Limits</a> and cause throttle errors. Please contact <a href="https://console.aws.amazon.com/support/home">Amazon Web Services Customer Support</a> to raise
        *          your throttling limits if necessary.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RegisterThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RegisterThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RegisterThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RegisterThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterThingCommandInput} for command's `input` shape.
        * @see {@link RegisterThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RegisterThingCommand extends $Command<RegisterThingCommandInput, RegisterThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: RegisterThingCommandInput;
            constructor(input: RegisterThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterThingCommandInput, RegisterThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RejectCertificateTransferCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RejectCertificateTransferRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RejectCertificateTransferCommandInput extends RejectCertificateTransferRequest {
    }
    export interface RejectCertificateTransferCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Rejects a pending certificate transfer. After IoT rejects a certificate transfer,
        *          the certificate status changes from <b>PENDING_TRANSFER</b> to
        *             <b>INACTIVE</b>.</p>
        *          <p>To check for pending certificate transfers, call <a>ListCertificates</a>
        *          to enumerate your certificates.</p>
        *          <p>This operation can only be called by the transfer destination. After it is called,
        *          the certificate will be returned to the source's account in the INACTIVE state.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RejectCertificateTransfer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RejectCertificateTransferCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RejectCertificateTransferCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RejectCertificateTransferCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RejectCertificateTransferCommandInput} for command's `input` shape.
        * @see {@link RejectCertificateTransferCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RejectCertificateTransferCommand extends $Command<RejectCertificateTransferCommandInput, RejectCertificateTransferCommandOutput, IoTClientResolvedConfig> {
            readonly input: RejectCertificateTransferCommandInput;
            constructor(input: RejectCertificateTransferCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectCertificateTransferCommandInput, RejectCertificateTransferCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RemoveThingFromBillingGroupRequest, RemoveThingFromBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RemoveThingFromBillingGroupCommandInput extends RemoveThingFromBillingGroupRequest {
    }
    export interface RemoveThingFromBillingGroupCommandOutput extends RemoveThingFromBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the given thing from the billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RemoveThingFromBillingGroup</a> action.</p>
        * 		       <note>
        *             <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RemoveThingFromBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RemoveThingFromBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RemoveThingFromBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveThingFromBillingGroupCommandInput} for command's `input` shape.
        * @see {@link RemoveThingFromBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RemoveThingFromBillingGroupCommand extends $Command<RemoveThingFromBillingGroupCommandInput, RemoveThingFromBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: RemoveThingFromBillingGroupCommandInput;
            constructor(input: RemoveThingFromBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveThingFromBillingGroupCommandInput, RemoveThingFromBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { RemoveThingFromThingGroupRequest, RemoveThingFromThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface RemoveThingFromThingGroupCommandInput extends RemoveThingFromThingGroupRequest {
    }
    export interface RemoveThingFromThingGroupCommandOutput extends RemoveThingFromThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Remove the specified thing from the specified group.</p>
        * 		       <p>You must specify either a <code>thingGroupArn</code> or a
        * 			<code>thingGroupName</code> to identify the thing group and
        * 			either a <code>thingArn</code> or a <code>thingName</code> to
        * 			identify the thing to remove from the thing group.
        * 		</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">RemoveThingFromThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, RemoveThingFromThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, RemoveThingFromThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new RemoveThingFromThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveThingFromThingGroupCommandInput} for command's `input` shape.
        * @see {@link RemoveThingFromThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class RemoveThingFromThingGroupCommand extends $Command<RemoveThingFromThingGroupCommandInput, RemoveThingFromThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: RemoveThingFromThingGroupCommandInput;
            constructor(input: RemoveThingFromThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveThingFromThingGroupCommandInput, RemoveThingFromThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ReplaceTopicRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ReplaceTopicRuleRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ReplaceTopicRuleCommandInput extends ReplaceTopicRuleRequest {
    }
    export interface ReplaceTopicRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Replaces the rule. You must specify all parameters for the new rule. Creating rules
        *          is an administrator-level action. Any user who has permission to create rules will be able
        *          to access data processed by the rule.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ReplaceTopicRule</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ReplaceTopicRuleCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ReplaceTopicRuleCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ReplaceTopicRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ReplaceTopicRuleCommandInput} for command's `input` shape.
        * @see {@link ReplaceTopicRuleCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ReplaceTopicRuleCommand extends $Command<ReplaceTopicRuleCommandInput, ReplaceTopicRuleCommandOutput, IoTClientResolvedConfig> {
            readonly input: ReplaceTopicRuleCommandInput;
            constructor(input: ReplaceTopicRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ReplaceTopicRuleCommandInput, ReplaceTopicRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SearchIndexCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SearchIndexRequest, SearchIndexResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SearchIndexCommandInput extends SearchIndexRequest {
    }
    export interface SearchIndexCommandOutput extends SearchIndexResponse, __MetadataBearer {
    }
    /**
        * <p>The query search index.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SearchIndex</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SearchIndexCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SearchIndexCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SearchIndexCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchIndexCommandInput} for command's `input` shape.
        * @see {@link SearchIndexCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SearchIndexCommand extends $Command<SearchIndexCommandInput, SearchIndexCommandOutput, IoTClientResolvedConfig> {
            readonly input: SearchIndexCommandInput;
            constructor(input: SearchIndexCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchIndexCommandInput, SearchIndexCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SetDefaultAuthorizerRequest, SetDefaultAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SetDefaultAuthorizerCommandInput extends SetDefaultAuthorizerRequest {
    }
    export interface SetDefaultAuthorizerCommandOutput extends SetDefaultAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Sets the default authorizer. This will be used if a websocket connection is made
        *          without specifying an authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetDefaultAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SetDefaultAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SetDefaultAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SetDefaultAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetDefaultAuthorizerCommandInput} for command's `input` shape.
        * @see {@link SetDefaultAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SetDefaultAuthorizerCommand extends $Command<SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: SetDefaultAuthorizerCommandInput;
            constructor(input: SetDefaultAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultPolicyVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SetDefaultPolicyVersionRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SetDefaultPolicyVersionCommandInput extends SetDefaultPolicyVersionRequest {
    }
    export interface SetDefaultPolicyVersionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sets the specified version of the specified policy as the policy's default
        *          (operative) version. This action affects all certificates to which the policy is attached.
        *          To list the principals the policy is attached to, use the <a>ListPrincipalPolicies</a>
        *          action.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetDefaultPolicyVersion</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SetDefaultPolicyVersionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SetDefaultPolicyVersionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SetDefaultPolicyVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetDefaultPolicyVersionCommandInput} for command's `input` shape.
        * @see {@link SetDefaultPolicyVersionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SetDefaultPolicyVersionCommand extends $Command<SetDefaultPolicyVersionCommandInput, SetDefaultPolicyVersionCommandOutput, IoTClientResolvedConfig> {
            readonly input: SetDefaultPolicyVersionCommandInput;
            constructor(input: SetDefaultPolicyVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetDefaultPolicyVersionCommandInput, SetDefaultPolicyVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetLoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SetLoggingOptionsRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SetLoggingOptionsCommandInput extends SetLoggingOptionsRequest {
    }
    export interface SetLoggingOptionsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sets the logging options.</p>
        *          <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code>
        *          instead.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetLoggingOptions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SetLoggingOptionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SetLoggingOptionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SetLoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetLoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link SetLoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SetLoggingOptionsCommand extends $Command<SetLoggingOptionsCommandInput, SetLoggingOptionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: SetLoggingOptionsCommandInput;
            constructor(input: SetLoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetLoggingOptionsCommandInput, SetLoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingLevelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SetV2LoggingLevelRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SetV2LoggingLevelCommandInput extends SetV2LoggingLevelRequest {
    }
    export interface SetV2LoggingLevelCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sets the logging level.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetV2LoggingLevel</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SetV2LoggingLevelCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SetV2LoggingLevelCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SetV2LoggingLevelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetV2LoggingLevelCommandInput} for command's `input` shape.
        * @see {@link SetV2LoggingLevelCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SetV2LoggingLevelCommand extends $Command<SetV2LoggingLevelCommandInput, SetV2LoggingLevelCommandOutput, IoTClientResolvedConfig> {
            readonly input: SetV2LoggingLevelCommandInput;
            constructor(input: SetV2LoggingLevelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetV2LoggingLevelCommandInput, SetV2LoggingLevelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { SetV2LoggingOptionsRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface SetV2LoggingOptionsCommandInput extends SetV2LoggingOptionsRequest {
    }
    export interface SetV2LoggingOptionsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sets the logging options for the V2 logging service.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">SetV2LoggingOptions</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, SetV2LoggingOptionsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, SetV2LoggingOptionsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new SetV2LoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetV2LoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link SetV2LoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class SetV2LoggingOptionsCommand extends $Command<SetV2LoggingOptionsCommandInput, SetV2LoggingOptionsCommandOutput, IoTClientResolvedConfig> {
            readonly input: SetV2LoggingOptionsCommandInput;
            constructor(input: SetV2LoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetV2LoggingOptionsCommandInput, SetV2LoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartAuditMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { StartAuditMitigationActionsTaskRequest, StartAuditMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface StartAuditMitigationActionsTaskCommandInput extends StartAuditMitigationActionsTaskRequest {
    }
    export interface StartAuditMitigationActionsTaskCommandOutput extends StartAuditMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Starts a task that applies a set of mitigation actions to the specified target.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartAuditMitigationActionsTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, StartAuditMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, StartAuditMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new StartAuditMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartAuditMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link StartAuditMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class StartAuditMitigationActionsTaskCommand extends $Command<StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: StartAuditMitigationActionsTaskCommandInput;
            constructor(input: StartAuditMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartDetectMitigationActionsTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { StartDetectMitigationActionsTaskRequest, StartDetectMitigationActionsTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface StartDetectMitigationActionsTaskCommandInput extends StartDetectMitigationActionsTaskRequest {
    }
    export interface StartDetectMitigationActionsTaskCommandOutput extends StartDetectMitigationActionsTaskResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Starts a Device Defender ML Detect mitigation actions task.
        *     </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartDetectMitigationActionsTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, StartDetectMitigationActionsTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, StartDetectMitigationActionsTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new StartDetectMitigationActionsTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartDetectMitigationActionsTaskCommandInput} for command's `input` shape.
        * @see {@link StartDetectMitigationActionsTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class StartDetectMitigationActionsTaskCommand extends $Command<StartDetectMitigationActionsTaskCommandInput, StartDetectMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: StartDetectMitigationActionsTaskCommandInput;
            constructor(input: StartDetectMitigationActionsTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartDetectMitigationActionsTaskCommandInput, StartDetectMitigationActionsTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartOnDemandAuditTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { StartOnDemandAuditTaskRequest, StartOnDemandAuditTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface StartOnDemandAuditTaskCommandInput extends StartOnDemandAuditTaskRequest {
    }
    export interface StartOnDemandAuditTaskCommandOutput extends StartOnDemandAuditTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Starts an on-demand Device Defender audit.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartOnDemandAuditTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, StartOnDemandAuditTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, StartOnDemandAuditTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new StartOnDemandAuditTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartOnDemandAuditTaskCommandInput} for command's `input` shape.
        * @see {@link StartOnDemandAuditTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class StartOnDemandAuditTaskCommand extends $Command<StartOnDemandAuditTaskCommandInput, StartOnDemandAuditTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: StartOnDemandAuditTaskCommandInput;
            constructor(input: StartOnDemandAuditTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartOnDemandAuditTaskCommandInput, StartOnDemandAuditTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartThingRegistrationTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { StartThingRegistrationTaskRequest, StartThingRegistrationTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface StartThingRegistrationTaskCommandInput extends StartThingRegistrationTaskRequest {
    }
    export interface StartThingRegistrationTaskCommandOutput extends StartThingRegistrationTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a bulk thing provisioning task.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StartThingRegistrationTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, StartThingRegistrationTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, StartThingRegistrationTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new StartThingRegistrationTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartThingRegistrationTaskCommandInput} for command's `input` shape.
        * @see {@link StartThingRegistrationTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class StartThingRegistrationTaskCommand extends $Command<StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: StartThingRegistrationTaskCommandInput;
            constructor(input: StartThingRegistrationTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StopThingRegistrationTaskCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { StopThingRegistrationTaskRequest, StopThingRegistrationTaskResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface StopThingRegistrationTaskCommandInput extends StopThingRegistrationTaskRequest {
    }
    export interface StopThingRegistrationTaskCommandOutput extends StopThingRegistrationTaskResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels a bulk thing provisioning task.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">StopThingRegistrationTask</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, StopThingRegistrationTaskCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, StopThingRegistrationTaskCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new StopThingRegistrationTaskCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopThingRegistrationTaskCommandInput} for command's `input` shape.
        * @see {@link StopThingRegistrationTaskCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class StopThingRegistrationTaskCommand extends $Command<StopThingRegistrationTaskCommandInput, StopThingRegistrationTaskCommandOutput, IoTClientResolvedConfig> {
            readonly input: StopThingRegistrationTaskCommandInput;
            constructor(input: StopThingRegistrationTaskCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopThingRegistrationTaskCommandInput, StopThingRegistrationTaskCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Adds to or modifies the tags of the given resource. Tags are metadata which can be
        * 			used to manage a resource.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TagResource</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, TagResourceCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, TagResourceCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, IoTClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestAuthorizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { TestAuthorizationRequest, TestAuthorizationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface TestAuthorizationCommandInput extends TestAuthorizationRequest {
    }
    export interface TestAuthorizationCommandOutput extends TestAuthorizationResponse, __MetadataBearer {
    }
    /**
        * <p>Tests if a specified principal is authorized to perform an IoT action on a
        *          specified resource. Use this to test and debug the authorization behavior of devices that
        *          connect to the IoT device gateway.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TestAuthorization</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, TestAuthorizationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, TestAuthorizationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new TestAuthorizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TestAuthorizationCommandInput} for command's `input` shape.
        * @see {@link TestAuthorizationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class TestAuthorizationCommand extends $Command<TestAuthorizationCommandInput, TestAuthorizationCommandOutput, IoTClientResolvedConfig> {
            readonly input: TestAuthorizationCommandInput;
            constructor(input: TestAuthorizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TestAuthorizationCommandInput, TestAuthorizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestInvokeAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { TestInvokeAuthorizerRequest, TestInvokeAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface TestInvokeAuthorizerCommandInput extends TestInvokeAuthorizerRequest {
    }
    export interface TestInvokeAuthorizerCommandOutput extends TestInvokeAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Tests a custom authorization behavior by invoking a specified custom authorizer. Use
        *          this to test and debug the custom authorization behavior of devices that connect to the IoT
        *          device gateway.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TestInvokeAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, TestInvokeAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, TestInvokeAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new TestInvokeAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TestInvokeAuthorizerCommandInput} for command's `input` shape.
        * @see {@link TestInvokeAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class TestInvokeAuthorizerCommand extends $Command<TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: TestInvokeAuthorizerCommandInput;
            constructor(input: TestInvokeAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TransferCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { TransferCertificateRequest, TransferCertificateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface TransferCertificateCommandInput extends TransferCertificateRequest {
    }
    export interface TransferCertificateCommandOutput extends TransferCertificateResponse, __MetadataBearer {
    }
    /**
        * <p>Transfers the specified certificate to the specified Amazon Web Services account.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">TransferCertificate</a> action.</p>
        *
        *          <p>You can cancel the transfer until it is acknowledged by the recipient.</p>
        *          <p>No notification is sent to the transfer destination's account. It is up to the caller
        *          to notify the transfer target.</p>
        *          <p>The certificate being transferred must not be in the ACTIVE state. You can use the
        *          <a>UpdateCertificate</a> action to deactivate it.</p>
        *          <p>The certificate must not have any policies attached to it. You can use the
        *          <a>DetachPolicy</a> action to detach them.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, TransferCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, TransferCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new TransferCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TransferCertificateCommandInput} for command's `input` shape.
        * @see {@link TransferCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class TransferCertificateCommand extends $Command<TransferCertificateCommandInput, TransferCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: TransferCertificateCommandInput;
            constructor(input: TransferCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TransferCertificateCommandInput, TransferCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the given tags (metadata) from the resource.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UntagResource</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UntagResourceCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UntagResourceCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, IoTClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAccountAuditConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateAccountAuditConfigurationRequest, UpdateAccountAuditConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateAccountAuditConfigurationCommandInput extends UpdateAccountAuditConfigurationRequest {
    }
    export interface UpdateAccountAuditConfigurationCommandOutput extends UpdateAccountAuditConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Configures or reconfigures the Device Defender audit settings for this account.
        *           Settings include how audit notifications are sent and which audit checks are
        *           enabled or disabled.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateAccountAuditConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateAccountAuditConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateAccountAuditConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateAccountAuditConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAccountAuditConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateAccountAuditConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateAccountAuditConfigurationCommand extends $Command<UpdateAccountAuditConfigurationCommandInput, UpdateAccountAuditConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateAccountAuditConfigurationCommandInput;
            constructor(input: UpdateAccountAuditConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccountAuditConfigurationCommandInput, UpdateAccountAuditConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuditSuppressionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateAuditSuppressionRequest, UpdateAuditSuppressionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateAuditSuppressionCommandInput extends UpdateAuditSuppressionRequest {
    }
    export interface UpdateAuditSuppressionCommandOutput extends UpdateAuditSuppressionResponse, __MetadataBearer {
    }
    /**
        * <p>
        *       Updates a Device Defender audit suppression.
        *     </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateAuditSuppressionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateAuditSuppressionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateAuditSuppressionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAuditSuppressionCommandInput} for command's `input` shape.
        * @see {@link UpdateAuditSuppressionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateAuditSuppressionCommand extends $Command<UpdateAuditSuppressionCommandInput, UpdateAuditSuppressionCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateAuditSuppressionCommandInput;
            constructor(input: UpdateAuditSuppressionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAuditSuppressionCommandInput, UpdateAuditSuppressionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuthorizerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateAuthorizerRequest, UpdateAuthorizerResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateAuthorizerCommandInput extends UpdateAuthorizerRequest {
    }
    export interface UpdateAuthorizerCommandOutput extends UpdateAuthorizerResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an authorizer.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateAuthorizer</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateAuthorizerCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateAuthorizerCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateAuthorizerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAuthorizerCommandInput} for command's `input` shape.
        * @see {@link UpdateAuthorizerCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateAuthorizerCommand extends $Command<UpdateAuthorizerCommandInput, UpdateAuthorizerCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateAuthorizerCommandInput;
            constructor(input: UpdateAuthorizerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAuthorizerCommandInput, UpdateAuthorizerCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateBillingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateBillingGroupRequest, UpdateBillingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateBillingGroupCommandInput extends UpdateBillingGroupRequest {
    }
    export interface UpdateBillingGroupCommandOutput extends UpdateBillingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Updates information about the billing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateBillingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateBillingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateBillingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateBillingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBillingGroupCommandInput} for command's `input` shape.
        * @see {@link UpdateBillingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateBillingGroupCommand extends $Command<UpdateBillingGroupCommandInput, UpdateBillingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateBillingGroupCommandInput;
            constructor(input: UpdateBillingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBillingGroupCommandInput, UpdateBillingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCACertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateCACertificateRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateCACertificateCommandInput extends UpdateCACertificateRequest {
    }
    export interface UpdateCACertificateCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates a registered CA certificate.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCACertificate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateCACertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateCACertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateCACertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateCACertificateCommandInput} for command's `input` shape.
        * @see {@link UpdateCACertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateCACertificateCommand extends $Command<UpdateCACertificateCommandInput, UpdateCACertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateCACertificateCommandInput;
            constructor(input: UpdateCACertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCACertificateCommandInput, UpdateCACertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCertificateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateCertificateRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateCertificateCommandInput extends UpdateCertificateRequest {
    }
    export interface UpdateCertificateCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the status of the specified certificate. This operation is
        *          idempotent.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCertificate</a> action.</p>
        *
        *          <p>Certificates must be in the ACTIVE state to authenticate devices that use
        *          a certificate to connect to IoT.</p>
        *          <p>Within a few minutes of updating a certificate from the ACTIVE state to any other
        *          state, IoT disconnects all devices that used that certificate to connect. Devices cannot
        *          use a certificate that is not in the ACTIVE state to reconnect.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateCertificateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateCertificateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateCertificateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateCertificateCommandInput} for command's `input` shape.
        * @see {@link UpdateCertificateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateCertificateCommand extends $Command<UpdateCertificateCommandInput, UpdateCertificateCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateCertificateCommandInput;
            constructor(input: UpdateCertificateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCertificateCommandInput, UpdateCertificateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCustomMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateCustomMetricRequest, UpdateCustomMetricResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateCustomMetricCommandInput extends UpdateCustomMetricRequest {
    }
    export interface UpdateCustomMetricCommandOutput extends UpdateCustomMetricResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a
        *       Device Defender detect custom metric. </p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateCustomMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateCustomMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateCustomMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateCustomMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateCustomMetricCommandInput} for command's `input` shape.
        * @see {@link UpdateCustomMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateCustomMetricCommand extends $Command<UpdateCustomMetricCommandInput, UpdateCustomMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateCustomMetricCommandInput;
            constructor(input: UpdateCustomMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCustomMetricCommandInput, UpdateCustomMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDimensionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateDimensionRequest, UpdateDimensionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateDimensionCommandInput extends UpdateDimensionRequest {
    }
    export interface UpdateDimensionCommandOutput extends UpdateDimensionResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the definition for a dimension. You
        *       cannot
        *       change the type of a dimension after
        *       it is created (you can delete it and
        *       recreate
        *       it).</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDimension</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateDimensionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateDimensionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateDimensionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDimensionCommandInput} for command's `input` shape.
        * @see {@link UpdateDimensionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateDimensionCommand extends $Command<UpdateDimensionCommandInput, UpdateDimensionCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateDimensionCommandInput;
            constructor(input: UpdateDimensionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDimensionCommandInput, UpdateDimensionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDomainConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateDomainConfigurationRequest, UpdateDomainConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateDomainConfigurationCommandInput extends UpdateDomainConfigurationRequest {
    }
    export interface UpdateDomainConfigurationCommandOutput extends UpdateDomainConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates values stored in the domain configuration. Domain configurations for default
        *          endpoints can't be updated.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDomainConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateDomainConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateDomainConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateDomainConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDomainConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateDomainConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateDomainConfigurationCommand extends $Command<UpdateDomainConfigurationCommandInput, UpdateDomainConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateDomainConfigurationCommandInput;
            constructor(input: UpdateDomainConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDomainConfigurationCommandInput, UpdateDomainConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDynamicThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateDynamicThingGroupRequest, UpdateDynamicThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateDynamicThingGroupCommandInput extends UpdateDynamicThingGroupRequest {
    }
    export interface UpdateDynamicThingGroupCommandOutput extends UpdateDynamicThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a dynamic thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateDynamicThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateDynamicThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateDynamicThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateDynamicThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDynamicThingGroupCommandInput} for command's `input` shape.
        * @see {@link UpdateDynamicThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateDynamicThingGroupCommand extends $Command<UpdateDynamicThingGroupCommandInput, UpdateDynamicThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateDynamicThingGroupCommandInput;
            constructor(input: UpdateDynamicThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDynamicThingGroupCommandInput, UpdateDynamicThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateEventConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateEventConfigurationsRequest, UpdateEventConfigurationsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateEventConfigurationsCommandInput extends UpdateEventConfigurationsRequest {
    }
    export interface UpdateEventConfigurationsCommandOutput extends UpdateEventConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the event configurations.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateEventConfigurations</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateEventConfigurationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateEventConfigurationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateEventConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEventConfigurationsCommandInput} for command's `input` shape.
        * @see {@link UpdateEventConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateEventConfigurationsCommand extends $Command<UpdateEventConfigurationsCommandInput, UpdateEventConfigurationsCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateEventConfigurationsCommandInput;
            constructor(input: UpdateEventConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEventConfigurationsCommandInput, UpdateEventConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateFleetMetricCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateFleetMetricRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateFleetMetricCommandInput extends UpdateFleetMetricRequest {
    }
    export interface UpdateFleetMetricCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the data for a fleet metric.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateFleetMetric</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateFleetMetricCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateFleetMetricCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateFleetMetricCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateFleetMetricCommandInput} for command's `input` shape.
        * @see {@link UpdateFleetMetricCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateFleetMetricCommand extends $Command<UpdateFleetMetricCommandInput, UpdateFleetMetricCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateFleetMetricCommandInput;
            constructor(input: UpdateFleetMetricCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateFleetMetricCommandInput, UpdateFleetMetricCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateIndexingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateIndexingConfigurationRequest, UpdateIndexingConfigurationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateIndexingConfigurationCommandInput extends UpdateIndexingConfigurationRequest {
    }
    export interface UpdateIndexingConfigurationCommandOutput extends UpdateIndexingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the search configuration.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateIndexingConfiguration</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateIndexingConfigurationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateIndexingConfigurationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateIndexingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateIndexingConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateIndexingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateIndexingConfigurationCommand extends $Command<UpdateIndexingConfigurationCommandInput, UpdateIndexingConfigurationCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateIndexingConfigurationCommandInput;
            constructor(input: UpdateIndexingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateIndexingConfigurationCommandInput, UpdateIndexingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateJobRequest } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateJobCommandInput extends UpdateJobRequest {
    }
    export interface UpdateJobCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates supported fields of the specified job.</p>
        *         <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateJob</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateJobCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateJobCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateJobCommandInput} for command's `input` shape.
        * @see {@link UpdateJobCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateJobCommand extends $Command<UpdateJobCommandInput, UpdateJobCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateJobCommandInput;
            constructor(input: UpdateJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateJobCommandInput, UpdateJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateMitigationActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateMitigationActionRequest, UpdateMitigationActionResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateMitigationActionCommandInput extends UpdateMitigationActionRequest {
    }
    export interface UpdateMitigationActionCommandOutput extends UpdateMitigationActionResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the definition for the specified mitigation action.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateMitigationAction</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateMitigationActionCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateMitigationActionCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateMitigationActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateMitigationActionCommandInput} for command's `input` shape.
        * @see {@link UpdateMitigationActionCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateMitigationActionCommand extends $Command<UpdateMitigationActionCommandInput, UpdateMitigationActionCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateMitigationActionCommandInput;
            constructor(input: UpdateMitigationActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateMitigationActionCommandInput, UpdateMitigationActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateProvisioningTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateProvisioningTemplateRequest, UpdateProvisioningTemplateResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateProvisioningTemplateCommandInput extends UpdateProvisioningTemplateRequest {
    }
    export interface UpdateProvisioningTemplateCommandOutput extends UpdateProvisioningTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a fleet provisioning template.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateProvisioningTemplate</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateProvisioningTemplateCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateProvisioningTemplateCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateProvisioningTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProvisioningTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateProvisioningTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateProvisioningTemplateCommand extends $Command<UpdateProvisioningTemplateCommandInput, UpdateProvisioningTemplateCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateProvisioningTemplateCommandInput;
            constructor(input: UpdateProvisioningTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProvisioningTemplateCommandInput, UpdateProvisioningTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateRoleAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateRoleAliasRequest, UpdateRoleAliasResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateRoleAliasCommandInput extends UpdateRoleAliasRequest {
    }
    export interface UpdateRoleAliasCommandOutput extends UpdateRoleAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a role alias.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateRoleAlias</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateRoleAliasCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateRoleAliasCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateRoleAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoleAliasCommandInput} for command's `input` shape.
        * @see {@link UpdateRoleAliasCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateRoleAliasCommand extends $Command<UpdateRoleAliasCommandInput, UpdateRoleAliasCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateRoleAliasCommandInput;
            constructor(input: UpdateRoleAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoleAliasCommandInput, UpdateRoleAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateScheduledAuditCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateScheduledAuditRequest, UpdateScheduledAuditResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateScheduledAuditCommandInput extends UpdateScheduledAuditRequest {
    }
    export interface UpdateScheduledAuditCommandOutput extends UpdateScheduledAuditResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a scheduled audit, including which checks are performed and
        *           how often the audit takes place.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateScheduledAudit</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateScheduledAuditCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateScheduledAuditCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateScheduledAuditCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateScheduledAuditCommandInput} for command's `input` shape.
        * @see {@link UpdateScheduledAuditCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateScheduledAuditCommand extends $Command<UpdateScheduledAuditCommandInput, UpdateScheduledAuditCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateScheduledAuditCommandInput;
            constructor(input: UpdateScheduledAuditCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateScheduledAuditCommandInput, UpdateScheduledAuditCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateSecurityProfileRequest, UpdateSecurityProfileResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateSecurityProfileCommandInput extends UpdateSecurityProfileRequest {
    }
    export interface UpdateSecurityProfileCommandOutput extends UpdateSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a Device Defender security profile.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateSecurityProfile</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateSecurityProfileCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateSecurityProfileCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link UpdateSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateSecurityProfileCommand extends $Command<UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateSecurityProfileCommandInput;
            constructor(input: UpdateSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateStreamCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateStreamRequest, UpdateStreamResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateStreamCommandInput extends UpdateStreamRequest {
    }
    export interface UpdateStreamCommandOutput extends UpdateStreamResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing stream. The stream version will be incremented by one.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateStream</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateStreamCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateStreamCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateStreamCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateStreamCommandInput} for command's `input` shape.
        * @see {@link UpdateStreamCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateStreamCommand extends $Command<UpdateStreamCommandInput, UpdateStreamCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateStreamCommandInput;
            constructor(input: UpdateStreamCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateStreamCommandInput, UpdateStreamCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateThingRequest, UpdateThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateThingCommandInput extends UpdateThingRequest {
    }
    export interface UpdateThingCommandOutput extends UpdateThingResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the data for a thing.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateThingCommandInput} for command's `input` shape.
        * @see {@link UpdateThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateThingCommand extends $Command<UpdateThingCommandInput, UpdateThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateThingCommandInput;
            constructor(input: UpdateThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateThingCommandInput, UpdateThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateThingGroupRequest, UpdateThingGroupResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateThingGroupCommandInput extends UpdateThingGroupRequest {
    }
    export interface UpdateThingGroupCommandOutput extends UpdateThingGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Update a thing group.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingGroup</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateThingGroupCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateThingGroupCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateThingGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateThingGroupCommandInput} for command's `input` shape.
        * @see {@link UpdateThingGroupCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateThingGroupCommand extends $Command<UpdateThingGroupCommandInput, UpdateThingGroupCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateThingGroupCommandInput;
            constructor(input: UpdateThingGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateThingGroupCommandInput, UpdateThingGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupsForThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateThingGroupsForThingRequest, UpdateThingGroupsForThingResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateThingGroupsForThingCommandInput extends UpdateThingGroupsForThingRequest {
    }
    export interface UpdateThingGroupsForThingCommandOutput extends UpdateThingGroupsForThingResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the groups to which the thing belongs.</p>
        * 		       <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingGroupsForThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateThingGroupsForThingCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateThingGroupsForThingCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateThingGroupsForThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateThingGroupsForThingCommandInput} for command's `input` shape.
        * @see {@link UpdateThingGroupsForThingCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateThingGroupsForThingCommand extends $Command<UpdateThingGroupsForThingCommandInput, UpdateThingGroupsForThingCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateThingGroupsForThingCommandInput;
            constructor(input: UpdateThingGroupsForThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateThingGroupsForThingCommandInput, UpdateThingGroupsForThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateTopicRuleDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { UpdateTopicRuleDestinationRequest, UpdateTopicRuleDestinationResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface UpdateTopicRuleDestinationCommandInput extends UpdateTopicRuleDestinationRequest {
    }
    export interface UpdateTopicRuleDestinationCommandOutput extends UpdateTopicRuleDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a topic rule destination. You use this to change the status, endpoint URL, or
        *          confirmation URL of the destination.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateTopicRuleDestination</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, UpdateTopicRuleDestinationCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, UpdateTopicRuleDestinationCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new UpdateTopicRuleDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateTopicRuleDestinationCommandInput} for command's `input` shape.
        * @see {@link UpdateTopicRuleDestinationCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class UpdateTopicRuleDestinationCommand extends $Command<UpdateTopicRuleDestinationCommandInput, UpdateTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
            readonly input: UpdateTopicRuleDestinationCommandInput;
            constructor(input: UpdateTopicRuleDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateTopicRuleDestinationCommandInput, UpdateTopicRuleDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ValidateSecurityProfileBehaviorsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient";
    import { ValidateSecurityProfileBehaviorsRequest, ValidateSecurityProfileBehaviorsResponse } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2";
    export interface ValidateSecurityProfileBehaviorsCommandInput extends ValidateSecurityProfileBehaviorsRequest {
    }
    export interface ValidateSecurityProfileBehaviorsCommandOutput extends ValidateSecurityProfileBehaviorsResponse, __MetadataBearer {
    }
    /**
        * <p>Validates a Device Defender security profile behaviors specification.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ValidateSecurityProfileBehaviors</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTClient, ValidateSecurityProfileBehaviorsCommand } from "@aws-sdk/client-iot"; // ES Modules import
        * // const { IoTClient, ValidateSecurityProfileBehaviorsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
        * const client = new IoTClient(config);
        * const command = new ValidateSecurityProfileBehaviorsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ValidateSecurityProfileBehaviorsCommandInput} for command's `input` shape.
        * @see {@link ValidateSecurityProfileBehaviorsCommandOutput} for command's `response` shape.
        * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
        *
        */
    export class ValidateSecurityProfileBehaviorsCommand extends $Command<ValidateSecurityProfileBehaviorsCommandInput, ValidateSecurityProfileBehaviorsCommandOutput, IoTClientResolvedConfig> {
            readonly input: ValidateSecurityProfileBehaviorsCommandInput;
            constructor(input: ValidateSecurityProfileBehaviorsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ValidateSecurityProfileBehaviorsCommandInput, ValidateSecurityProfileBehaviorsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/IoTClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AcceptCertificateTransferCommand";
    import { AddThingToBillingGroupCommandInput, AddThingToBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToBillingGroupCommand";
    import { AddThingToThingGroupCommandInput, AddThingToThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AddThingToThingGroupCommand";
    import { AssociateTargetsWithJobCommandInput, AssociateTargetsWithJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AssociateTargetsWithJobCommand";
    import { AttachPolicyCommandInput, AttachPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPolicyCommand";
    import { AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachPrincipalPolicyCommand";
    import { AttachSecurityProfileCommandInput, AttachSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachSecurityProfileCommand";
    import { AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/AttachThingPrincipalCommand";
    import { CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditMitigationActionsTaskCommand";
    import { CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelAuditTaskCommand";
    import { CancelCertificateTransferCommandInput, CancelCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelCertificateTransferCommand";
    import { CancelDetectMitigationActionsTaskCommandInput, CancelDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelDetectMitigationActionsTaskCommand";
    import { CancelJobCommandInput, CancelJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobCommand";
    import { CancelJobExecutionCommandInput, CancelJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CancelJobExecutionCommand";
    import { ClearDefaultAuthorizerCommandInput, ClearDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ClearDefaultAuthorizerCommand";
    import { ConfirmTopicRuleDestinationCommandInput, ConfirmTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ConfirmTopicRuleDestinationCommand";
    import { CreateAuditSuppressionCommandInput, CreateAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuditSuppressionCommand";
    import { CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateAuthorizerCommand";
    import { CreateBillingGroupCommandInput, CreateBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateBillingGroupCommand";
    import { CreateCertificateFromCsrCommandInput, CreateCertificateFromCsrCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCertificateFromCsrCommand";
    import { CreateCustomMetricCommandInput, CreateCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateCustomMetricCommand";
    import { CreateDimensionCommandInput, CreateDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDimensionCommand";
    import { CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDomainConfigurationCommand";
    import { CreateDynamicThingGroupCommandInput, CreateDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateDynamicThingGroupCommand";
    import { CreateFleetMetricCommandInput, CreateFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateFleetMetricCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobCommand";
    import { CreateJobTemplateCommandInput, CreateJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateJobTemplateCommand";
    import { CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateKeysAndCertificateCommand";
    import { CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateMitigationActionCommand";
    import { CreateOTAUpdateCommandInput, CreateOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateOTAUpdateCommand";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyCommand";
    import { CreatePolicyVersionCommandInput, CreatePolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreatePolicyVersionCommand";
    import { CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningClaimCommand";
    import { CreateProvisioningTemplateCommandInput, CreateProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateCommand";
    import { CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateProvisioningTemplateVersionCommand";
    import { CreateRoleAliasCommandInput, CreateRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateRoleAliasCommand";
    import { CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateScheduledAuditCommand";
    import { CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateSecurityProfileCommand";
    import { CreateStreamCommandInput, CreateStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateStreamCommand";
    import { CreateThingCommandInput, CreateThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingCommand";
    import { CreateThingGroupCommandInput, CreateThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingGroupCommand";
    import { CreateThingTypeCommandInput, CreateThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateThingTypeCommand";
    import { CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleCommand";
    import { CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/CreateTopicRuleDestinationCommand";
    import { DeleteAccountAuditConfigurationCommandInput, DeleteAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAccountAuditConfigurationCommand";
    import { DeleteAuditSuppressionCommandInput, DeleteAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuditSuppressionCommand";
    import { DeleteAuthorizerCommandInput, DeleteAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteAuthorizerCommand";
    import { DeleteBillingGroupCommandInput, DeleteBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteBillingGroupCommand";
    import { DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCACertificateCommand";
    import { DeleteCertificateCommandInput, DeleteCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCertificateCommand";
    import { DeleteCustomMetricCommandInput, DeleteCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteCustomMetricCommand";
    import { DeleteDimensionCommandInput, DeleteDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDimensionCommand";
    import { DeleteDomainConfigurationCommandInput, DeleteDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDomainConfigurationCommand";
    import { DeleteDynamicThingGroupCommandInput, DeleteDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteDynamicThingGroupCommand";
    import { DeleteFleetMetricCommandInput, DeleteFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteFleetMetricCommand";
    import { DeleteJobCommandInput, DeleteJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobCommand";
    import { DeleteJobExecutionCommandInput, DeleteJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobExecutionCommand";
    import { DeleteJobTemplateCommandInput, DeleteJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteJobTemplateCommand";
    import { DeleteMitigationActionCommandInput, DeleteMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteMitigationActionCommand";
    import { DeleteOTAUpdateCommandInput, DeleteOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteOTAUpdateCommand";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyCommand";
    import { DeletePolicyVersionCommandInput, DeletePolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeletePolicyVersionCommand";
    import { DeleteProvisioningTemplateCommandInput, DeleteProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateCommand";
    import { DeleteProvisioningTemplateVersionCommandInput, DeleteProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteProvisioningTemplateVersionCommand";
    import { DeleteRegistrationCodeCommandInput, DeleteRegistrationCodeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRegistrationCodeCommand";
    import { DeleteRoleAliasCommandInput, DeleteRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteRoleAliasCommand";
    import { DeleteScheduledAuditCommandInput, DeleteScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteScheduledAuditCommand";
    import { DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteSecurityProfileCommand";
    import { DeleteStreamCommandInput, DeleteStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteStreamCommand";
    import { DeleteThingCommandInput, DeleteThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingCommand";
    import { DeleteThingGroupCommandInput, DeleteThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingGroupCommand";
    import { DeleteThingTypeCommandInput, DeleteThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteThingTypeCommand";
    import { DeleteTopicRuleCommandInput, DeleteTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleCommand";
    import { DeleteTopicRuleDestinationCommandInput, DeleteTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteTopicRuleDestinationCommand";
    import { DeleteV2LoggingLevelCommandInput, DeleteV2LoggingLevelCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeleteV2LoggingLevelCommand";
    import { DeprecateThingTypeCommandInput, DeprecateThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DeprecateThingTypeCommand";
    import { DescribeAccountAuditConfigurationCommandInput, DescribeAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAccountAuditConfigurationCommand";
    import { DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditFindingCommand";
    import { DescribeAuditMitigationActionsTaskCommandInput, DescribeAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditMitigationActionsTaskCommand";
    import { DescribeAuditSuppressionCommandInput, DescribeAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditSuppressionCommand";
    import { DescribeAuditTaskCommandInput, DescribeAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuditTaskCommand";
    import { DescribeAuthorizerCommandInput, DescribeAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeAuthorizerCommand";
    import { DescribeBillingGroupCommandInput, DescribeBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeBillingGroupCommand";
    import { DescribeCACertificateCommandInput, DescribeCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCACertificateCommand";
    import { DescribeCertificateCommandInput, DescribeCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCertificateCommand";
    import { DescribeCustomMetricCommandInput, DescribeCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeCustomMetricCommand";
    import { DescribeDefaultAuthorizerCommandInput, DescribeDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDefaultAuthorizerCommand";
    import { DescribeDetectMitigationActionsTaskCommandInput, DescribeDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDetectMitigationActionsTaskCommand";
    import { DescribeDimensionCommandInput, DescribeDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDimensionCommand";
    import { DescribeDomainConfigurationCommandInput, DescribeDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeDomainConfigurationCommand";
    import { DescribeEndpointCommandInput, DescribeEndpointCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEndpointCommand";
    import { DescribeEventConfigurationsCommandInput, DescribeEventConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeEventConfigurationsCommand";
    import { DescribeFleetMetricCommandInput, DescribeFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeFleetMetricCommand";
    import { DescribeIndexCommandInput, DescribeIndexCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeIndexCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobCommand";
    import { DescribeJobExecutionCommandInput, DescribeJobExecutionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobExecutionCommand";
    import { DescribeJobTemplateCommandInput, DescribeJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeJobTemplateCommand";
    import { DescribeManagedJobTemplateCommandInput, DescribeManagedJobTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeManagedJobTemplateCommand";
    import { DescribeMitigationActionCommandInput, DescribeMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeMitigationActionCommand";
    import { DescribeProvisioningTemplateCommandInput, DescribeProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateCommand";
    import { DescribeProvisioningTemplateVersionCommandInput, DescribeProvisioningTemplateVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeProvisioningTemplateVersionCommand";
    import { DescribeRoleAliasCommandInput, DescribeRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeRoleAliasCommand";
    import { DescribeScheduledAuditCommandInput, DescribeScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeScheduledAuditCommand";
    import { DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeSecurityProfileCommand";
    import { DescribeStreamCommandInput, DescribeStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeStreamCommand";
    import { DescribeThingCommandInput, DescribeThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingCommand";
    import { DescribeThingGroupCommandInput, DescribeThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingGroupCommand";
    import { DescribeThingRegistrationTaskCommandInput, DescribeThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingRegistrationTaskCommand";
    import { DescribeThingTypeCommandInput, DescribeThingTypeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DescribeThingTypeCommand";
    import { DetachPolicyCommandInput, DetachPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPolicyCommand";
    import { DetachPrincipalPolicyCommandInput, DetachPrincipalPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachPrincipalPolicyCommand";
    import { DetachSecurityProfileCommandInput, DetachSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachSecurityProfileCommand";
    import { DetachThingPrincipalCommandInput, DetachThingPrincipalCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DetachThingPrincipalCommand";
    import { DisableTopicRuleCommandInput, DisableTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/DisableTopicRuleCommand";
    import { EnableTopicRuleCommandInput, EnableTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/EnableTopicRuleCommand";
    import { GetBehaviorModelTrainingSummariesCommandInput, GetBehaviorModelTrainingSummariesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBehaviorModelTrainingSummariesCommand";
    import { GetBucketsAggregationCommandInput, GetBucketsAggregationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetBucketsAggregationCommand";
    import { GetCardinalityCommandInput, GetCardinalityCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetCardinalityCommand";
    import { GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetEffectivePoliciesCommand";
    import { GetIndexingConfigurationCommandInput, GetIndexingConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetIndexingConfigurationCommand";
    import { GetJobDocumentCommandInput, GetJobDocumentCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetJobDocumentCommand";
    import { GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetLoggingOptionsCommand";
    import { GetOTAUpdateCommandInput, GetOTAUpdateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetOTAUpdateCommand";
    import { GetPercentilesCommandInput, GetPercentilesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPercentilesCommand";
    import { GetPolicyCommandInput, GetPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyCommand";
    import { GetPolicyVersionCommandInput, GetPolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetPolicyVersionCommand";
    import { GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetRegistrationCodeCommand";
    import { GetStatisticsCommandInput, GetStatisticsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetStatisticsCommand";
    import { GetTopicRuleCommandInput, GetTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleCommand";
    import { GetTopicRuleDestinationCommandInput, GetTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetTopicRuleDestinationCommand";
    import { GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/GetV2LoggingOptionsCommand";
    import { ListActiveViolationsCommandInput, ListActiveViolationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListActiveViolationsCommand";
    import { ListAttachedPoliciesCommandInput, ListAttachedPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAttachedPoliciesCommand";
    import { ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditFindingsCommand";
    import { ListAuditMitigationActionsExecutionsCommandInput, ListAuditMitigationActionsExecutionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsExecutionsCommand";
    import { ListAuditMitigationActionsTasksCommandInput, ListAuditMitigationActionsTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditMitigationActionsTasksCommand";
    import { ListAuditSuppressionsCommandInput, ListAuditSuppressionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditSuppressionsCommand";
    import { ListAuditTasksCommandInput, ListAuditTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuditTasksCommand";
    import { ListAuthorizersCommandInput, ListAuthorizersCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListAuthorizersCommand";
    import { ListBillingGroupsCommandInput, ListBillingGroupsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListBillingGroupsCommand";
    import { ListCACertificatesCommandInput, ListCACertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCACertificatesCommand";
    import { ListCertificatesByCACommandInput, ListCertificatesByCACommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesByCACommand";
    import { ListCertificatesCommandInput, ListCertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCertificatesCommand";
    import { ListCustomMetricsCommandInput, ListCustomMetricsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListCustomMetricsCommand";
    import { ListDetectMitigationActionsExecutionsCommandInput, ListDetectMitigationActionsExecutionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsExecutionsCommand";
    import { ListDetectMitigationActionsTasksCommandInput, ListDetectMitigationActionsTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDetectMitigationActionsTasksCommand";
    import { ListDimensionsCommandInput, ListDimensionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDimensionsCommand";
    import { ListDomainConfigurationsCommandInput, ListDomainConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListDomainConfigurationsCommand";
    import { ListFleetMetricsCommandInput, ListFleetMetricsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListFleetMetricsCommand";
    import { ListIndicesCommandInput, ListIndicesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListIndicesCommand";
    import { ListJobExecutionsForJobCommandInput, ListJobExecutionsForJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForJobCommand";
    import { ListJobExecutionsForThingCommandInput, ListJobExecutionsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobExecutionsForThingCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobsCommand";
    import { ListJobTemplatesCommandInput, ListJobTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListJobTemplatesCommand";
    import { ListManagedJobTemplatesCommandInput, ListManagedJobTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListManagedJobTemplatesCommand";
    import { ListMetricValuesCommandInput, ListMetricValuesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMetricValuesCommand";
    import { ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListMitigationActionsCommand";
    import { ListOTAUpdatesCommandInput, ListOTAUpdatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOTAUpdatesCommand";
    import { ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListOutgoingCertificatesCommand";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPoliciesCommand";
    import { ListPolicyPrincipalsCommandInput, ListPolicyPrincipalsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyPrincipalsCommand";
    import { ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPolicyVersionsCommand";
    import { ListPrincipalPoliciesCommandInput, ListPrincipalPoliciesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalPoliciesCommand";
    import { ListPrincipalThingsCommandInput, ListPrincipalThingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListPrincipalThingsCommand";
    import { ListProvisioningTemplatesCommandInput, ListProvisioningTemplatesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplatesCommand";
    import { ListProvisioningTemplateVersionsCommandInput, ListProvisioningTemplateVersionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListProvisioningTemplateVersionsCommand";
    import { ListRoleAliasesCommandInput, ListRoleAliasesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListRoleAliasesCommand";
    import { ListScheduledAuditsCommandInput, ListScheduledAuditsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListScheduledAuditsCommand";
    import { ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesCommand";
    import { ListSecurityProfilesForTargetCommandInput, ListSecurityProfilesForTargetCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListSecurityProfilesForTargetCommand";
    import { ListStreamsCommandInput, ListStreamsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListStreamsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTagsForResourceCommand";
    import { ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForPolicyCommand";
    import { ListTargetsForSecurityProfileCommandInput, ListTargetsForSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTargetsForSecurityProfileCommand";
    import { ListThingGroupsCommandInput, ListThingGroupsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsCommand";
    import { ListThingGroupsForThingCommandInput, ListThingGroupsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingGroupsForThingCommand";
    import { ListThingPrincipalsCommandInput, ListThingPrincipalsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingPrincipalsCommand";
    import { ListThingRegistrationTaskReportsCommandInput, ListThingRegistrationTaskReportsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTaskReportsCommand";
    import { ListThingRegistrationTasksCommandInput, ListThingRegistrationTasksCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingRegistrationTasksCommand";
    import { ListThingsCommandInput, ListThingsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsCommand";
    import { ListThingsInBillingGroupCommandInput, ListThingsInBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInBillingGroupCommand";
    import { ListThingsInThingGroupCommandInput, ListThingsInThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingsInThingGroupCommand";
    import { ListThingTypesCommandInput, ListThingTypesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListThingTypesCommand";
    import { ListTopicRuleDestinationsCommandInput, ListTopicRuleDestinationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRuleDestinationsCommand";
    import { ListTopicRulesCommandInput, ListTopicRulesCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListTopicRulesCommand";
    import { ListV2LoggingLevelsCommandInput, ListV2LoggingLevelsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListV2LoggingLevelsCommand";
    import { ListViolationEventsCommandInput, ListViolationEventsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ListViolationEventsCommand";
    import { PutVerificationStateOnViolationCommandInput, PutVerificationStateOnViolationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/PutVerificationStateOnViolationCommand";
    import { RegisterCACertificateCommandInput, RegisterCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCACertificateCommand";
    import { RegisterCertificateCommandInput, RegisterCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateCommand";
    import { RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterCertificateWithoutCACommand";
    import { RegisterThingCommandInput, RegisterThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RegisterThingCommand";
    import { RejectCertificateTransferCommandInput, RejectCertificateTransferCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RejectCertificateTransferCommand";
    import { RemoveThingFromBillingGroupCommandInput, RemoveThingFromBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromBillingGroupCommand";
    import { RemoveThingFromThingGroupCommandInput, RemoveThingFromThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/RemoveThingFromThingGroupCommand";
    import { ReplaceTopicRuleCommandInput, ReplaceTopicRuleCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ReplaceTopicRuleCommand";
    import { SearchIndexCommandInput, SearchIndexCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SearchIndexCommand";
    import { SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultAuthorizerCommand";
    import { SetDefaultPolicyVersionCommandInput, SetDefaultPolicyVersionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetDefaultPolicyVersionCommand";
    import { SetLoggingOptionsCommandInput, SetLoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetLoggingOptionsCommand";
    import { SetV2LoggingLevelCommandInput, SetV2LoggingLevelCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingLevelCommand";
    import { SetV2LoggingOptionsCommandInput, SetV2LoggingOptionsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/SetV2LoggingOptionsCommand";
    import { StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartAuditMitigationActionsTaskCommand";
    import { StartDetectMitigationActionsTaskCommandInput, StartDetectMitigationActionsTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartDetectMitigationActionsTaskCommand";
    import { StartOnDemandAuditTaskCommandInput, StartOnDemandAuditTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartOnDemandAuditTaskCommand";
    import { StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StartThingRegistrationTaskCommand";
    import { StopThingRegistrationTaskCommandInput, StopThingRegistrationTaskCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/StopThingRegistrationTaskCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TagResourceCommand";
    import { TestAuthorizationCommandInput, TestAuthorizationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestAuthorizationCommand";
    import { TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TestInvokeAuthorizerCommand";
    import { TransferCertificateCommandInput, TransferCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/TransferCertificateCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountAuditConfigurationCommandInput, UpdateAccountAuditConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAccountAuditConfigurationCommand";
    import { UpdateAuditSuppressionCommandInput, UpdateAuditSuppressionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuditSuppressionCommand";
    import { UpdateAuthorizerCommandInput, UpdateAuthorizerCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateAuthorizerCommand";
    import { UpdateBillingGroupCommandInput, UpdateBillingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateBillingGroupCommand";
    import { UpdateCACertificateCommandInput, UpdateCACertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCACertificateCommand";
    import { UpdateCertificateCommandInput, UpdateCertificateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCertificateCommand";
    import { UpdateCustomMetricCommandInput, UpdateCustomMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateCustomMetricCommand";
    import { UpdateDimensionCommandInput, UpdateDimensionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDimensionCommand";
    import { UpdateDomainConfigurationCommandInput, UpdateDomainConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDomainConfigurationCommand";
    import { UpdateDynamicThingGroupCommandInput, UpdateDynamicThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateDynamicThingGroupCommand";
    import { UpdateEventConfigurationsCommandInput, UpdateEventConfigurationsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateEventConfigurationsCommand";
    import { UpdateFleetMetricCommandInput, UpdateFleetMetricCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateFleetMetricCommand";
    import { UpdateIndexingConfigurationCommandInput, UpdateIndexingConfigurationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateIndexingConfigurationCommand";
    import { UpdateJobCommandInput, UpdateJobCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateJobCommand";
    import { UpdateMitigationActionCommandInput, UpdateMitigationActionCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateMitigationActionCommand";
    import { UpdateProvisioningTemplateCommandInput, UpdateProvisioningTemplateCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateProvisioningTemplateCommand";
    import { UpdateRoleAliasCommandInput, UpdateRoleAliasCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateRoleAliasCommand";
    import { UpdateScheduledAuditCommandInput, UpdateScheduledAuditCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateScheduledAuditCommand";
    import { UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateSecurityProfileCommand";
    import { UpdateStreamCommandInput, UpdateStreamCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateStreamCommand";
    import { UpdateThingCommandInput, UpdateThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingCommand";
    import { UpdateThingGroupCommandInput, UpdateThingGroupCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupCommand";
    import { UpdateThingGroupsForThingCommandInput, UpdateThingGroupsForThingCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateThingGroupsForThingCommand";
    import { UpdateTopicRuleDestinationCommandInput, UpdateTopicRuleDestinationCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/UpdateTopicRuleDestinationCommand";
    import { ValidateSecurityProfileBehaviorsCommandInput, ValidateSecurityProfileBehaviorsCommandOutput } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/commands/ValidateSecurityProfileBehaviorsCommand";
    export type ServiceInputTypes = AcceptCertificateTransferCommandInput | AddThingToBillingGroupCommandInput | AddThingToThingGroupCommandInput | AssociateTargetsWithJobCommandInput | AttachPolicyCommandInput | AttachPrincipalPolicyCommandInput | AttachSecurityProfileCommandInput | AttachThingPrincipalCommandInput | CancelAuditMitigationActionsTaskCommandInput | CancelAuditTaskCommandInput | CancelCertificateTransferCommandInput | CancelDetectMitigationActionsTaskCommandInput | CancelJobCommandInput | CancelJobExecutionCommandInput | ClearDefaultAuthorizerCommandInput | ConfirmTopicRuleDestinationCommandInput | CreateAuditSuppressionCommandInput | CreateAuthorizerCommandInput | CreateBillingGroupCommandInput | CreateCertificateFromCsrCommandInput | CreateCustomMetricCommandInput | CreateDimensionCommandInput | CreateDomainConfigurationCommandInput | CreateDynamicThingGroupCommandInput | CreateFleetMetricCommandInput | CreateJobCommandInput | CreateJobTemplateCommandInput | CreateKeysAndCertificateCommandInput | CreateMitigationActionCommandInput | CreateOTAUpdateCommandInput | CreatePolicyCommandInput | CreatePolicyVersionCommandInput | CreateProvisioningClaimCommandInput | CreateProvisioningTemplateCommandInput | CreateProvisioningTemplateVersionCommandInput | CreateRoleAliasCommandInput | CreateScheduledAuditCommandInput | CreateSecurityProfileCommandInput | CreateStreamCommandInput | CreateThingCommandInput | CreateThingGroupCommandInput | CreateThingTypeCommandInput | CreateTopicRuleCommandInput | CreateTopicRuleDestinationCommandInput | DeleteAccountAuditConfigurationCommandInput | DeleteAuditSuppressionCommandInput | DeleteAuthorizerCommandInput | DeleteBillingGroupCommandInput | DeleteCACertificateCommandInput | DeleteCertificateCommandInput | DeleteCustomMetricCommandInput | DeleteDimensionCommandInput | DeleteDomainConfigurationCommandInput | DeleteDynamicThingGroupCommandInput | DeleteFleetMetricCommandInput | DeleteJobCommandInput | DeleteJobExecutionCommandInput | DeleteJobTemplateCommandInput | DeleteMitigationActionCommandInput | DeleteOTAUpdateCommandInput | DeletePolicyCommandInput | DeletePolicyVersionCommandInput | DeleteProvisioningTemplateCommandInput | DeleteProvisioningTemplateVersionCommandInput | DeleteRegistrationCodeCommandInput | DeleteRoleAliasCommandInput | DeleteScheduledAuditCommandInput | DeleteSecurityProfileCommandInput | DeleteStreamCommandInput | DeleteThingCommandInput | DeleteThingGroupCommandInput | DeleteThingTypeCommandInput | DeleteTopicRuleCommandInput | DeleteTopicRuleDestinationCommandInput | DeleteV2LoggingLevelCommandInput | DeprecateThingTypeCommandInput | DescribeAccountAuditConfigurationCommandInput | DescribeAuditFindingCommandInput | DescribeAuditMitigationActionsTaskCommandInput | DescribeAuditSuppressionCommandInput | DescribeAuditTaskCommandInput | DescribeAuthorizerCommandInput | DescribeBillingGroupCommandInput | DescribeCACertificateCommandInput | DescribeCertificateCommandInput | DescribeCustomMetricCommandInput | DescribeDefaultAuthorizerCommandInput | DescribeDetectMitigationActionsTaskCommandInput | DescribeDimensionCommandInput | DescribeDomainConfigurationCommandInput | DescribeEndpointCommandInput | DescribeEventConfigurationsCommandInput | DescribeFleetMetricCommandInput | DescribeIndexCommandInput | DescribeJobCommandInput | DescribeJobExecutionCommandInput | DescribeJobTemplateCommandInput | DescribeManagedJobTemplateCommandInput | DescribeMitigationActionCommandInput | DescribeProvisioningTemplateCommandInput | DescribeProvisioningTemplateVersionCommandInput | DescribeRoleAliasCommandInput | DescribeScheduledAuditCommandInput | DescribeSecurityProfileCommandInput | DescribeStreamCommandInput | DescribeThingCommandInput | DescribeThingGroupCommandInput | DescribeThingRegistrationTaskCommandInput | DescribeThingTypeCommandInput | DetachPolicyCommandInput | DetachPrincipalPolicyCommandInput | DetachSecurityProfileCommandInput | DetachThingPrincipalCommandInput | DisableTopicRuleCommandInput | EnableTopicRuleCommandInput | GetBehaviorModelTrainingSummariesCommandInput | GetBucketsAggregationCommandInput | GetCardinalityCommandInput | GetEffectivePoliciesCommandInput | GetIndexingConfigurationCommandInput | GetJobDocumentCommandInput | GetLoggingOptionsCommandInput | GetOTAUpdateCommandInput | GetPercentilesCommandInput | GetPolicyCommandInput | GetPolicyVersionCommandInput | GetRegistrationCodeCommandInput | GetStatisticsCommandInput | GetTopicRuleCommandInput | GetTopicRuleDestinationCommandInput | GetV2LoggingOptionsCommandInput | ListActiveViolationsCommandInput | ListAttachedPoliciesCommandInput | ListAuditFindingsCommandInput | ListAuditMitigationActionsExecutionsCommandInput | ListAuditMitigationActionsTasksCommandInput | ListAuditSuppressionsCommandInput | ListAuditTasksCommandInput | ListAuthorizersCommandInput | ListBillingGroupsCommandInput | ListCACertificatesCommandInput | ListCertificatesByCACommandInput | ListCertificatesCommandInput | ListCustomMetricsCommandInput | ListDetectMitigationActionsExecutionsCommandInput | ListDetectMitigationActionsTasksCommandInput | ListDimensionsCommandInput | ListDomainConfigurationsCommandInput | ListFleetMetricsCommandInput | ListIndicesCommandInput | ListJobExecutionsForJobCommandInput | ListJobExecutionsForThingCommandInput | ListJobTemplatesCommandInput | ListJobsCommandInput | ListManagedJobTemplatesCommandInput | ListMetricValuesCommandInput | ListMitigationActionsCommandInput | ListOTAUpdatesCommandInput | ListOutgoingCertificatesCommandInput | ListPoliciesCommandInput | ListPolicyPrincipalsCommandInput | ListPolicyVersionsCommandInput | ListPrincipalPoliciesCommandInput | ListPrincipalThingsCommandInput | ListProvisioningTemplateVersionsCommandInput | ListProvisioningTemplatesCommandInput | ListRoleAliasesCommandInput | ListScheduledAuditsCommandInput | ListSecurityProfilesCommandInput | ListSecurityProfilesForTargetCommandInput | ListStreamsCommandInput | ListTagsForResourceCommandInput | ListTargetsForPolicyCommandInput | ListTargetsForSecurityProfileCommandInput | ListThingGroupsCommandInput | ListThingGroupsForThingCommandInput | ListThingPrincipalsCommandInput | ListThingRegistrationTaskReportsCommandInput | ListThingRegistrationTasksCommandInput | ListThingTypesCommandInput | ListThingsCommandInput | ListThingsInBillingGroupCommandInput | ListThingsInThingGroupCommandInput | ListTopicRuleDestinationsCommandInput | ListTopicRulesCommandInput | ListV2LoggingLevelsCommandInput | ListViolationEventsCommandInput | PutVerificationStateOnViolationCommandInput | RegisterCACertificateCommandInput | RegisterCertificateCommandInput | RegisterCertificateWithoutCACommandInput | RegisterThingCommandInput | RejectCertificateTransferCommandInput | RemoveThingFromBillingGroupCommandInput | RemoveThingFromThingGroupCommandInput | ReplaceTopicRuleCommandInput | SearchIndexCommandInput | SetDefaultAuthorizerCommandInput | SetDefaultPolicyVersionCommandInput | SetLoggingOptionsCommandInput | SetV2LoggingLevelCommandInput | SetV2LoggingOptionsCommandInput | StartAuditMitigationActionsTaskCommandInput | StartDetectMitigationActionsTaskCommandInput | StartOnDemandAuditTaskCommandInput | StartThingRegistrationTaskCommandInput | StopThingRegistrationTaskCommandInput | TagResourceCommandInput | TestAuthorizationCommandInput | TestInvokeAuthorizerCommandInput | TransferCertificateCommandInput | UntagResourceCommandInput | UpdateAccountAuditConfigurationCommandInput | UpdateAuditSuppressionCommandInput | UpdateAuthorizerCommandInput | UpdateBillingGroupCommandInput | UpdateCACertificateCommandInput | UpdateCertificateCommandInput | UpdateCustomMetricCommandInput | UpdateDimensionCommandInput | UpdateDomainConfigurationCommandInput | UpdateDynamicThingGroupCommandInput | UpdateEventConfigurationsCommandInput | UpdateFleetMetricCommandInput | UpdateIndexingConfigurationCommandInput | UpdateJobCommandInput | UpdateMitigationActionCommandInput | UpdateProvisioningTemplateCommandInput | UpdateRoleAliasCommandInput | UpdateScheduledAuditCommandInput | UpdateSecurityProfileCommandInput | UpdateStreamCommandInput | UpdateThingCommandInput | UpdateThingGroupCommandInput | UpdateThingGroupsForThingCommandInput | UpdateTopicRuleDestinationCommandInput | ValidateSecurityProfileBehaviorsCommandInput;
    export type ServiceOutputTypes = AcceptCertificateTransferCommandOutput | AddThingToBillingGroupCommandOutput | AddThingToThingGroupCommandOutput | AssociateTargetsWithJobCommandOutput | AttachPolicyCommandOutput | AttachPrincipalPolicyCommandOutput | AttachSecurityProfileCommandOutput | AttachThingPrincipalCommandOutput | CancelAuditMitigationActionsTaskCommandOutput | CancelAuditTaskCommandOutput | CancelCertificateTransferCommandOutput | CancelDetectMitigationActionsTaskCommandOutput | CancelJobCommandOutput | CancelJobExecutionCommandOutput | ClearDefaultAuthorizerCommandOutput | ConfirmTopicRuleDestinationCommandOutput | CreateAuditSuppressionCommandOutput | CreateAuthorizerCommandOutput | CreateBillingGroupCommandOutput | CreateCertificateFromCsrCommandOutput | CreateCustomMetricCommandOutput | CreateDimensionCommandOutput | CreateDomainConfigurationCommandOutput | CreateDynamicThingGroupCommandOutput | CreateFleetMetricCommandOutput | CreateJobCommandOutput | CreateJobTemplateCommandOutput | CreateKeysAndCertificateCommandOutput | CreateMitigationActionCommandOutput | CreateOTAUpdateCommandOutput | CreatePolicyCommandOutput | CreatePolicyVersionCommandOutput | CreateProvisioningClaimCommandOutput | CreateProvisioningTemplateCommandOutput | CreateProvisioningTemplateVersionCommandOutput | CreateRoleAliasCommandOutput | CreateScheduledAuditCommandOutput | CreateSecurityProfileCommandOutput | CreateStreamCommandOutput | CreateThingCommandOutput | CreateThingGroupCommandOutput | CreateThingTypeCommandOutput | CreateTopicRuleCommandOutput | CreateTopicRuleDestinationCommandOutput | DeleteAccountAuditConfigurationCommandOutput | DeleteAuditSuppressionCommandOutput | DeleteAuthorizerCommandOutput | DeleteBillingGroupCommandOutput | DeleteCACertificateCommandOutput | DeleteCertificateCommandOutput | DeleteCustomMetricCommandOutput | DeleteDimensionCommandOutput | DeleteDomainConfigurationCommandOutput | DeleteDynamicThingGroupCommandOutput | DeleteFleetMetricCommandOutput | DeleteJobCommandOutput | DeleteJobExecutionCommandOutput | DeleteJobTemplateCommandOutput | DeleteMitigationActionCommandOutput | DeleteOTAUpdateCommandOutput | DeletePolicyCommandOutput | DeletePolicyVersionCommandOutput | DeleteProvisioningTemplateCommandOutput | DeleteProvisioningTemplateVersionCommandOutput | DeleteRegistrationCodeCommandOutput | DeleteRoleAliasCommandOutput | DeleteScheduledAuditCommandOutput | DeleteSecurityProfileCommandOutput | DeleteStreamCommandOutput | DeleteThingCommandOutput | DeleteThingGroupCommandOutput | DeleteThingTypeCommandOutput | DeleteTopicRuleCommandOutput | DeleteTopicRuleDestinationCommandOutput | DeleteV2LoggingLevelCommandOutput | DeprecateThingTypeCommandOutput | DescribeAccountAuditConfigurationCommandOutput | DescribeAuditFindingCommandOutput | DescribeAuditMitigationActionsTaskCommandOutput | DescribeAuditSuppressionCommandOutput | DescribeAuditTaskCommandOutput | DescribeAuthorizerCommandOutput | DescribeBillingGroupCommandOutput | DescribeCACertificateCommandOutput | DescribeCertificateCommandOutput | DescribeCustomMetricCommandOutput | DescribeDefaultAuthorizerCommandOutput | DescribeDetectMitigationActionsTaskCommandOutput | DescribeDimensionCommandOutput | DescribeDomainConfigurationCommandOutput | DescribeEndpointCommandOutput | DescribeEventConfigurationsCommandOutput | DescribeFleetMetricCommandOutput | DescribeIndexCommandOutput | DescribeJobCommandOutput | DescribeJobExecutionCommandOutput | DescribeJobTemplateCommandOutput | DescribeManagedJobTemplateCommandOutput | DescribeMitigationActionCommandOutput | DescribeProvisioningTemplateCommandOutput | DescribeProvisioningTemplateVersionCommandOutput | DescribeRoleAliasCommandOutput | DescribeScheduledAuditCommandOutput | DescribeSecurityProfileCommandOutput | DescribeStreamCommandOutput | DescribeThingCommandOutput | DescribeThingGroupCommandOutput | DescribeThingRegistrationTaskCommandOutput | DescribeThingTypeCommandOutput | DetachPolicyCommandOutput | DetachPrincipalPolicyCommandOutput | DetachSecurityProfileCommandOutput | DetachThingPrincipalCommandOutput | DisableTopicRuleCommandOutput | EnableTopicRuleCommandOutput | GetBehaviorModelTrainingSummariesCommandOutput | GetBucketsAggregationCommandOutput | GetCardinalityCommandOutput | GetEffectivePoliciesCommandOutput | GetIndexingConfigurationCommandOutput | GetJobDocumentCommandOutput | GetLoggingOptionsCommandOutput | GetOTAUpdateCommandOutput | GetPercentilesCommandOutput | GetPolicyCommandOutput | GetPolicyVersionCommandOutput | GetRegistrationCodeCommandOutput | GetStatisticsCommandOutput | GetTopicRuleCommandOutput | GetTopicRuleDestinationCommandOutput | GetV2LoggingOptionsCommandOutput | ListActiveViolationsCommandOutput | ListAttachedPoliciesCommandOutput | ListAuditFindingsCommandOutput | ListAuditMitigationActionsExecutionsCommandOutput | ListAuditMitigationActionsTasksCommandOutput | ListAuditSuppressionsCommandOutput | ListAuditTasksCommandOutput | ListAuthorizersCommandOutput | ListBillingGroupsCommandOutput | ListCACertificatesCommandOutput | ListCertificatesByCACommandOutput | ListCertificatesCommandOutput | ListCustomMetricsCommandOutput | ListDetectMitigationActionsExecutionsCommandOutput | ListDetectMitigationActionsTasksCommandOutput | ListDimensionsCommandOutput | ListDomainConfigurationsCommandOutput | ListFleetMetricsCommandOutput | ListIndicesCommandOutput | ListJobExecutionsForJobCommandOutput | ListJobExecutionsForThingCommandOutput | ListJobTemplatesCommandOutput | ListJobsCommandOutput | ListManagedJobTemplatesCommandOutput | ListMetricValuesCommandOutput | ListMitigationActionsCommandOutput | ListOTAUpdatesCommandOutput | ListOutgoingCertificatesCommandOutput | ListPoliciesCommandOutput | ListPolicyPrincipalsCommandOutput | ListPolicyVersionsCommandOutput | ListPrincipalPoliciesCommandOutput | ListPrincipalThingsCommandOutput | ListProvisioningTemplateVersionsCommandOutput | ListProvisioningTemplatesCommandOutput | ListRoleAliasesCommandOutput | ListScheduledAuditsCommandOutput | ListSecurityProfilesCommandOutput | ListSecurityProfilesForTargetCommandOutput | ListStreamsCommandOutput | ListTagsForResourceCommandOutput | ListTargetsForPolicyCommandOutput | ListTargetsForSecurityProfileCommandOutput | ListThingGroupsCommandOutput | ListThingGroupsForThingCommandOutput | ListThingPrincipalsCommandOutput | ListThingRegistrationTaskReportsCommandOutput | ListThingRegistrationTasksCommandOutput | ListThingTypesCommandOutput | ListThingsCommandOutput | ListThingsInBillingGroupCommandOutput | ListThingsInThingGroupCommandOutput | ListTopicRuleDestinationsCommandOutput | ListTopicRulesCommandOutput | ListV2LoggingLevelsCommandOutput | ListViolationEventsCommandOutput | PutVerificationStateOnViolationCommandOutput | RegisterCACertificateCommandOutput | RegisterCertificateCommandOutput | RegisterCertificateWithoutCACommandOutput | RegisterThingCommandOutput | RejectCertificateTransferCommandOutput | RemoveThingFromBillingGroupCommandOutput | RemoveThingFromThingGroupCommandOutput | ReplaceTopicRuleCommandOutput | SearchIndexCommandOutput | SetDefaultAuthorizerCommandOutput | SetDefaultPolicyVersionCommandOutput | SetLoggingOptionsCommandOutput | SetV2LoggingLevelCommandOutput | SetV2LoggingOptionsCommandOutput | StartAuditMitigationActionsTaskCommandOutput | StartDetectMitigationActionsTaskCommandOutput | StartOnDemandAuditTaskCommandOutput | StartThingRegistrationTaskCommandOutput | StopThingRegistrationTaskCommandOutput | TagResourceCommandOutput | TestAuthorizationCommandOutput | TestInvokeAuthorizerCommandOutput | TransferCertificateCommandOutput | UntagResourceCommandOutput | UpdateAccountAuditConfigurationCommandOutput | UpdateAuditSuppressionCommandOutput | UpdateAuthorizerCommandOutput | UpdateBillingGroupCommandOutput | UpdateCACertificateCommandOutput | UpdateCertificateCommandOutput | UpdateCustomMetricCommandOutput | UpdateDimensionCommandOutput | UpdateDomainConfigurationCommandOutput | UpdateDynamicThingGroupCommandOutput | UpdateEventConfigurationsCommandOutput | UpdateFleetMetricCommandOutput | UpdateIndexingConfigurationCommandOutput | UpdateJobCommandOutput | UpdateMitigationActionCommandOutput | UpdateProvisioningTemplateCommandOutput | UpdateRoleAliasCommandOutput | UpdateScheduledAuditCommandOutput | UpdateSecurityProfileCommandOutput | UpdateStreamCommandOutput | UpdateThingCommandOutput | UpdateThingGroupCommandOutput | UpdateThingGroupsForThingCommandOutput | UpdateTopicRuleDestinationCommandOutput | ValidateSecurityProfileBehaviorsCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IoTClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IoTClient class constructor that set the region, credentials and other options.
        */
    export interface IoTClientConfig extends IoTClientConfigType {
    }
    type IoTClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IoTClient class. This is resolved and normalized from the {@link IoTClientConfig | constructor configuration interface}.
        */
    export interface IoTClientResolvedConfig extends IoTClientResolvedConfigType {
    }
    /**
        * <fullname>IoT</fullname>
        *         <p>IoT provides secure, bi-directional communication between Internet-connected
        *             devices (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services
        *             cloud. You can discover your custom IoT-Data endpoint to communicate with, configure
        *             rules for data processing and integration with other services, organize resources
        *             associated with each device (Registry), configure logging, and create and manage
        *             policies and credentials to authenticate devices.</p>
        *         <p>The service endpoints that expose this API are listed in
        *             <a href="https://docs.aws.amazon.com/general/latest/gr/iot-core.html">Amazon Web Services IoT Core Endpoints and Quotas</a>.
        *             You must use the endpoint for the region that has the resources you want to access.</p>
        *         <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Amazon Web Services
        *                 Signature Version 4</a> to sign the request is:
        *             <i>execute-api</i>.</p>
        *         <p>For more information about how IoT works, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer
        *             Guide</a>.</p>
        *         <p>For information about how to use the credentials provider for IoT, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html">Authorizing Direct Calls to Amazon Web Services Services</a>.</p>
        */
    export class IoTClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IoTClientResolvedConfig> {
            /**
                * The resolved configuration of IoTClient class. This is resolved and normalized from the {@link IoTClientConfig | constructor configuration interface}.
                */
            readonly config: IoTClientResolvedConfig;
            constructor(configuration: IoTClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTServiceException as __BaseException } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/IoTServiceException";
    export enum AbortAction {
            CANCEL = "CANCEL"
    }
    export enum JobExecutionFailureType {
            ALL = "ALL",
            FAILED = "FAILED",
            REJECTED = "REJECTED",
            TIMED_OUT = "TIMED_OUT"
    }
    /**
        * <p>The criteria that determine when and how a job abort takes place.</p>
        */
    export interface AbortCriteria {
            /**
                * <p>The type of job execution failures that can initiate a job abort.</p>
                */
            failureType: JobExecutionFailureType | string | undefined;
            /**
                * <p>The type of job action to take to initiate the job abort.</p>
                */
            action: AbortAction | string | undefined;
            /**
                * <p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p>
                *         <p>Amazon Web Services IoT Core supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>
                */
            thresholdPercentage: number | undefined;
            /**
                * <p>The minimum number of things which must receive job execution notifications before the job
                *             can be aborted.</p>
                */
            minNumberOfExecutedThings: number | undefined;
    }
    export namespace AbortCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AbortCriteria) => any;
    }
    /**
        * <p>The criteria that determine when and how a job abort takes place.</p>
        */
    export interface AbortConfig {
            /**
                * <p>The list of criteria that determine when and how to abort the job.</p>
                */
            criteriaList: AbortCriteria[] | undefined;
    }
    export namespace AbortConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AbortConfig) => any;
    }
    /**
        * <p>The input for the AcceptCertificateTransfer operation.</p>
        */
    export interface AcceptCertificateTransferRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
            /**
                * <p>Specifies whether the certificate is active.</p>
                */
            setAsActive?: boolean;
    }
    export namespace AcceptCertificateTransferRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptCertificateTransferRequest) => any;
    }
    /**
        * <p>An unexpected error has occurred.</p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p>The request is not valid.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>The specified resource does not exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The service is temporarily unavailable.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>The rate exceeds the limit.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>You can't revert the certificate transfer because the transfer is already
        *          complete.</p>
        */
    export class TransferAlreadyCompletedException extends __BaseException {
            readonly name: "TransferAlreadyCompletedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TransferAlreadyCompletedException, __BaseException>);
    }
    /**
        * <p>You are not authorized to perform this operation.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    /**
        * <p>Describes an action that updates a CloudWatch alarm.</p>
        */
    export interface CloudwatchAlarmAction {
            /**
                * <p>The IAM role that allows access to the CloudWatch alarm.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The CloudWatch alarm name.</p>
                */
            alarmName: string | undefined;
            /**
                * <p>The reason for the alarm change.</p>
                */
            stateReason: string | undefined;
            /**
                * <p>The value of the alarm state. Acceptable values are: OK, ALARM,
                *          INSUFFICIENT_DATA.</p>
                */
            stateValue: string | undefined;
    }
    export namespace CloudwatchAlarmAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudwatchAlarmAction) => any;
    }
    /**
        * <p>Describes an action that sends data to CloudWatch Logs.</p>
        */
    export interface CloudwatchLogsAction {
            /**
                * <p>The IAM role that allows access to the CloudWatch log.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The CloudWatch log group to which the action sends data.</p>
                */
            logGroupName: string | undefined;
    }
    export namespace CloudwatchLogsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudwatchLogsAction) => any;
    }
    /**
        * <p>Describes an action that captures a CloudWatch metric.</p>
        */
    export interface CloudwatchMetricAction {
            /**
                * <p>The IAM role that allows access to the CloudWatch metric.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The CloudWatch metric namespace name.</p>
                */
            metricNamespace: string | undefined;
            /**
                * <p>The CloudWatch metric name.</p>
                */
            metricName: string | undefined;
            /**
                * <p>The CloudWatch metric value.</p>
                */
            metricValue: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric
                *             unit</a> supported by CloudWatch.</p>
                */
            metricUnit: string | undefined;
            /**
                * <p>An optional <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix timestamp</a>.</p>
                */
            metricTimestamp?: string;
    }
    export namespace CloudwatchMetricAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudwatchMetricAction) => any;
    }
    export enum DynamoKeyType {
            NUMBER = "NUMBER",
            STRING = "STRING"
    }
    /**
        * <p>Describes an action to write to a DynamoDB table.</p>
        *          <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code>
        *          values must match the values used when you created the table.</p>
        *          <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a
        *          substitution template syntax. These templates provide data at runtime. The syntax is as
        *          follows: ${<i>sql-expression</i>}.</p>
        *          <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON
        *          properties, comparisons, calculations, and functions. For example, the following field uses
        *          the third level of the topic:</p>
        *          <p>
        *             <code>"hashKeyValue": "${topic(3)}"</code>
        *          </p>
        *          <p>The following field uses the timestamp:</p>
        *          <p>
        *             <code>"rangeKeyValue": "${timestamp()}"</code>
        *          </p>
        */
    export interface DynamoDBAction {
            /**
                * <p>The name of the DynamoDB table.</p>
                */
            tableName: string | undefined;
            /**
                * <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The type of operation to be performed. This follows the substitution template, so it
                *          can be <code>${operation}</code>, but the substitution must result in one of the following:
                *             <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>
                */
            operation?: string;
            /**
                * <p>The hash key name.</p>
                */
            hashKeyField: string | undefined;
            /**
                * <p>The hash key value.</p>
                */
            hashKeyValue: string | undefined;
            /**
                * <p>The hash key type. Valid values are "STRING" or "NUMBER"</p>
                */
            hashKeyType?: DynamoKeyType | string;
            /**
                * <p>The range key name.</p>
                */
            rangeKeyField?: string;
            /**
                * <p>The range key value.</p>
                */
            rangeKeyValue?: string;
            /**
                * <p>The range key type. Valid values are "STRING" or "NUMBER"</p>
                */
            rangeKeyType?: DynamoKeyType | string;
            /**
                * <p>The action payload. This name can be customized.</p>
                */
            payloadField?: string;
    }
    export namespace DynamoDBAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DynamoDBAction) => any;
    }
    /**
        * <p>The input for the DynamoActionVS action that specifies the DynamoDB table to which
        *          the message data will be written.</p>
        */
    export interface PutItemInput {
            /**
                * <p>The table where the message data will be written.</p>
                */
            tableName: string | undefined;
    }
    export namespace PutItemInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutItemInput) => any;
    }
    /**
        * <p>Describes an action to write to a DynamoDB table.</p>
        *          <p>This DynamoDB action writes each attribute in the message payload into it's own
        *          column in the DynamoDB table.</p>
        */
    export interface DynamoDBv2Action {
            /**
                * <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>Specifies the DynamoDB table to which the message data will be written. For
                *          example:</p>
                *          <p>
                *             <code>{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName":
                *             "my-table" } } }</code>
                *          </p>
                *          <p>Each attribute in the message payload will be written to a separate column in the
                *          DynamoDB database.</p>
                */
            putItem: PutItemInput | undefined;
    }
    export namespace DynamoDBv2Action {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DynamoDBv2Action) => any;
    }
    /**
        * <p>Describes an action that writes data to an Amazon OpenSearch Service
        *          domain.</p>
        *          <note>
        *             <p>The <code>Elasticsearch</code> action can only be used by existing rule actions. To create a
        *          new rule action or to update an existing rule action, use the
        *          <code>OpenSearch</code> rule action instead. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html">OpenSearchAction</a>.</p>
        *          </note>
        */
    export interface ElasticsearchAction {
            /**
                * <p>The IAM role ARN that has access to OpenSearch.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The endpoint of your OpenSearch domain.</p>
                */
            endpoint: string | undefined;
            /**
                * <p>The index where you want to store your data.</p>
                */
            index: string | undefined;
            /**
                * <p>The type of document you are storing.</p>
                */
            type: string | undefined;
            /**
                * <p>The unique identifier for the document you are storing.</p>
                */
            id: string | undefined;
    }
    export namespace ElasticsearchAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ElasticsearchAction) => any;
    }
    /**
        * <p>Describes an action that writes data to an Amazon Kinesis Firehose stream.</p>
        */
    export interface FirehoseAction {
            /**
                * <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The delivery stream name.</p>
                */
            deliveryStreamName: string | undefined;
            /**
                * <p>A character separator that will be used to separate records written to the Firehose
                *          stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ','
                *          (comma).</p>
                */
            separator?: string;
            /**
                * <p>Whether to deliver the Kinesis Data Firehose stream as a batch by using <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html">
                *                <code>PutRecordBatch</code>
                *             </a>.  The default value is
                *          <code>false</code>.</p>
                *          <p>When <code>batchMode</code> is <code>true</code> and the rule's SQL statement
                *          evaluates to an Array, each Array element forms one record in the <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html">
                *                <code>PutRecordBatch</code>
                *             </a> request. The resulting array can't have more
                *          than 500 records.</p>
                */
            batchMode?: boolean;
    }
    export namespace FirehoseAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FirehoseAction) => any;
    }
    /**
        * <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 signing process</a>.</p>
        */
    export interface SigV4Authorization {
            /**
                * <p>The signing region.</p>
                */
            signingRegion: string | undefined;
            /**
                * <p>The service name to use while signing with Sig V4.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The ARN of the signing role.</p>
                */
            roleArn: string | undefined;
    }
    export namespace SigV4Authorization {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SigV4Authorization) => any;
    }
    /**
        * <p>The authorization method used to send messages.</p>
        */
    export interface HttpAuthorization {
            /**
                * <p>Use Sig V4 authorization. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
                *             Version 4 Signing Process</a>.</p>
                */
            sigv4?: SigV4Authorization;
    }
    export namespace HttpAuthorization {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpAuthorization) => any;
    }
    /**
        * <p>The HTTP action header.</p>
        */
    export interface HttpActionHeader {
            /**
                * <p>The HTTP header key.</p>
                */
            key: string | undefined;
            /**
                * <p>The HTTP header value. Substitution templates are supported.</p>
                */
            value: string | undefined;
    }
    export namespace HttpActionHeader {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpActionHeader) => any;
    }
    /**
        * <p>Send data to an HTTPS endpoint.</p>
        */
    export interface HttpAction {
            /**
                * <p>The endpoint URL. If substitution templates are used in the URL, you must also specify a
                *             <code>confirmationUrl</code>. If this is a new destination, a new
                *             <code>TopicRuleDestination</code> is created if possible.</p>
                */
            url: string | undefined;
            /**
                * <p>The URL to which IoT sends a confirmation message. The value of the confirmation URL
                *          must be a prefix of the endpoint URL. If you do not specify a confirmation URL IoT uses
                *          the endpoint URL as the confirmation URL. If you use substitution templates in the
                *          confirmationUrl, you must create and enable topic rule destinations that match each
                *          possible value of the substitution template before traffic is allowed to your endpoint
                *          URL.</p>
                */
            confirmationUrl?: string;
            /**
                * <p>The HTTP headers to send with the message data.</p>
                */
            headers?: HttpActionHeader[];
            /**
                * <p>The authentication method to use when sending data to an HTTPS endpoint.</p>
                */
            auth?: HttpAuthorization;
    }
    export namespace HttpAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpAction) => any;
    }
    /**
        * <p>Sends message data to an IoT Analytics channel.</p>
        */
    export interface IotAnalyticsAction {
            /**
                * <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be
                *          sent.</p>
                */
            channelArn?: string;
            /**
                * <p>The name of the IoT Analytics channel to which message data will be sent.</p>
                */
            channelName?: string;
            /**
                * <p>Whether to process the action as a batch. The default value is
                *          <code>false</code>.</p>
                *          <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates
                *          to an Array, each Array element is delivered as a separate message when passed by <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html">
                *                <code>BatchPutMessage</code>
                *             </a> to the IoT Analytics channel. The resulting array can't have more
                *          than 100 messages.</p>
                */
            batchMode?: boolean;
            /**
                * <p>The ARN of the role which has a policy that grants IoT Analytics permission to send
                *          message data via IoT Analytics (iotanalytics:BatchPutMessage).</p>
                */
            roleArn?: string;
    }
    export namespace IotAnalyticsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IotAnalyticsAction) => any;
    }
    /**
        * <p>Sends an input to an IoT Events detector.</p>
        */
    export interface IotEventsAction {
            /**
                * <p>The name of the IoT Events input.</p>
                */
            inputName: string | undefined;
            /**
                * <p>The ID of the message. The default <code>messageId</code> is a new UUID value.</p>
                *          <p>When <code>batchMode</code> is <code>true</code>, you can't specify a
                *         <code>messageId</code>--a new UUID value will be assigned.</p>
                *          <p>Assign a value to this property to ensure that only one input (message) with a given
                *             <code>messageId</code> will be processed by an IoT Events detector.</p>
                */
            messageId?: string;
            /**
                * <p>Whether to process the event actions as a batch. The default value is
                *             <code>false</code>.</p>
                *          <p>When <code>batchMode</code> is <code>true</code>, you can't specify a
                *             <code>messageId</code>. </p>
                *          <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates
                *          to an Array, each Array element is treated as a separate message when it's sent to IoT
                *          Events by calling <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html">
                *                <code>BatchPutMessage</code>
                *             </a>.  The resulting array can't have more
                *          than 10 messages.</p>
                */
            batchMode?: boolean;
            /**
                * <p>The ARN of the role that grants IoT permission to send an input to an IoT
                *       Events detector. ("Action":"iotevents:BatchPutMessage").</p>
                */
            roleArn: string | undefined;
    }
    export namespace IotEventsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IotEventsAction) => any;
    }
    /**
        * <p>An asset property timestamp entry containing the following information.</p>
        */
    export interface AssetPropertyTimestamp {
            /**
                * <p>A string that contains the time in seconds since epoch. Accepts substitution
                *       templates.</p>
                */
            timeInSeconds: string | undefined;
            /**
                * <p>Optional. A string that contains the nanosecond time offset. Accepts substitution
                *       templates.</p>
                */
            offsetInNanos?: string;
    }
    export namespace AssetPropertyTimestamp {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetPropertyTimestamp) => any;
    }
    /**
        * <p>Contains an asset property value (of a single type).</p>
        */
    export type AssetPropertyVariant = AssetPropertyVariant.BooleanValueMember | AssetPropertyVariant.DoubleValueMember | AssetPropertyVariant.IntegerValueMember | AssetPropertyVariant.StringValueMember | AssetPropertyVariant.$UnknownMember;
    export namespace AssetPropertyVariant {
            /**
                * <p>Optional. The string value of the value entry. Accepts substitution templates.</p>
                */
            interface StringValueMember {
                    stringValue: string;
                    integerValue?: never;
                    doubleValue?: never;
                    booleanValue?: never;
                    $unknown?: never;
            }
            /**
                * <p>Optional. A string that contains the integer value of the value entry. Accepts
                *       substitution templates.</p>
                */
            interface IntegerValueMember {
                    stringValue?: never;
                    integerValue: string;
                    doubleValue?: never;
                    booleanValue?: never;
                    $unknown?: never;
            }
            /**
                * <p>Optional. A string that contains the double value of the value entry. Accepts substitution
                *       templates.</p>
                */
            interface DoubleValueMember {
                    stringValue?: never;
                    integerValue?: never;
                    doubleValue: string;
                    booleanValue?: never;
                    $unknown?: never;
            }
            /**
                * <p>Optional. A string that contains the boolean value (<code>true</code> or
                *         <code>false</code>) of the value entry. Accepts substitution templates.</p>
                */
            interface BooleanValueMember {
                    stringValue?: never;
                    integerValue?: never;
                    doubleValue?: never;
                    booleanValue: string;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    stringValue?: never;
                    integerValue?: never;
                    doubleValue?: never;
                    booleanValue?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    stringValue: (value: string) => T;
                    integerValue: (value: string) => T;
                    doubleValue: (value: string) => T;
                    booleanValue: (value: string) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: AssetPropertyVariant, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetPropertyVariant) => any;
    }
    /**
        * <p>An asset property value entry containing the following information.</p>
        */
    export interface AssetPropertyValue {
            /**
                * <p>The value of the asset property.</p>
                */
            value: AssetPropertyVariant | undefined;
            /**
                * <p>The asset property value timestamp.</p>
                */
            timestamp: AssetPropertyTimestamp | undefined;
            /**
                * <p>Optional. A string that describes the quality of the value. Accepts substitution
                *       templates. Must be <code>GOOD</code>, <code>BAD</code>, or <code>UNCERTAIN</code>.</p>
                */
            quality?: string;
    }
    export namespace AssetPropertyValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetPropertyValue) => any;
    }
    /**
        * <p>An asset property value entry containing the following information.</p>
        */
    export interface PutAssetPropertyValueEntry {
            /**
                * <p>Optional. A unique identifier for this entry that you can define to better track which
                *       message caused an error in case of failure. Accepts substitution templates. Defaults to a new
                *       UUID.</p>
                */
            entryId?: string;
            /**
                * <p>The ID of the IoT SiteWise asset. You must specify either a <code>propertyAlias</code>
                *       or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution
                *       templates.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset's property. You must specify either a <code>propertyAlias</code> or
                *       both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution
                *       templates.</p>
                */
            propertyId?: string;
            /**
                * <p>The name of the property alias associated with your asset property. You must specify
                *       either a <code>propertyAlias</code> or both an <code>aliasId</code> and a
                *         <code>propertyId</code>. Accepts substitution templates.</p>
                */
            propertyAlias?: string;
            /**
                * <p>A list of property values to insert that each contain timestamp, quality, and value (TQV)
                *       information.</p>
                */
            propertyValues: AssetPropertyValue[] | undefined;
    }
    export namespace PutAssetPropertyValueEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAssetPropertyValueEntry) => any;
    }
    /**
        * <p>Describes an action to send data from an MQTT message that triggered the rule to IoT
        *       SiteWise asset properties.</p>
        */
    export interface IotSiteWiseAction {
            /**
                * <p>A list of asset property value entries.</p>
                */
            putAssetPropertyValueEntries: PutAssetPropertyValueEntry[] | undefined;
            /**
                * <p>The ARN of the role that grants IoT permission to send an asset property value to IoT SiteWise. (<code>"Action": "iotsitewise:BatchPutAssetPropertyValue"</code>). The trust
                *       policy can restrict access to specific asset hierarchy paths.</p>
                */
            roleArn: string | undefined;
    }
    export namespace IotSiteWiseAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IotSiteWiseAction) => any;
    }
    /**
        * <p>Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.</p>
        */
    export interface KafkaAction {
            /**
                * <p>The ARN of Kafka action's VPC <code>TopicRuleDestination</code>.</p>
                */
            destinationArn: string | undefined;
            /**
                * <p>The Kafka topic for messages to be sent to the Kafka broker.</p>
                */
            topic: string | undefined;
            /**
                * <p>The Kafka message key.</p>
                */
            key?: string;
            /**
                * <p>The Kafka message partition.</p>
                */
            partition?: string;
            /**
                * <p>Properties of the Apache Kafka producer client.</p>
                */
            clientProperties: Record<string, string> | undefined;
    }
    export namespace KafkaAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KafkaAction) => any;
    }
    /**
        * <p>Describes an action to write data to an Amazon Kinesis stream.</p>
        */
    export interface KinesisAction {
            /**
                * <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of the Amazon Kinesis stream.</p>
                */
            streamName: string | undefined;
            /**
                * <p>The partition key.</p>
                */
            partitionKey?: string;
    }
    export namespace KinesisAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KinesisAction) => any;
    }
    /**
        * <p>Describes an action to invoke a Lambda function.</p>
        */
    export interface LambdaAction {
            /**
                * <p>The ARN of the Lambda function.</p>
                */
            functionArn: string | undefined;
    }
    export namespace LambdaAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LambdaAction) => any;
    }
    /**
        * <p>Describes an action that writes data to an Amazon OpenSearch Service
        *          domain.</p>
        */
    export interface OpenSearchAction {
            /**
                * <p>The IAM role ARN that has access to OpenSearch.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The endpoint of your OpenSearch domain.</p>
                */
            endpoint: string | undefined;
            /**
                * <p>The OpenSearch index where you want to store your data.</p>
                */
            index: string | undefined;
            /**
                * <p>The type of document you are storing.</p>
                */
            type: string | undefined;
            /**
                * <p>The unique identifier for the document you are storing.</p>
                */
            id: string | undefined;
    }
    export namespace OpenSearchAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OpenSearchAction) => any;
    }
    /**
        * <p>Describes an action to republish to another topic.</p>
        */
    export interface RepublishAction {
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of the MQTT topic.</p>
                */
            topic: string | undefined;
            /**
                * <p>The Quality of Service (QoS) level to use when republishing messages. The default value
                *          is 0.</p>
                */
            qos?: number;
    }
    export namespace RepublishAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepublishAction) => any;
    }
    export enum CannedAccessControlList {
            AuthenticatedRead = "authenticated-read",
            AwsExecRead = "aws-exec-read",
            BucketOwnerFullControl = "bucket-owner-full-control",
            BucketOwnerRead = "bucket-owner-read",
            LogDeliveryWrite = "log-delivery-write",
            Private = "private",
            PublicRead = "public-read",
            PublicReadWrite = "public-read-write"
    }
    /**
        * <p>Describes an action to write data to an Amazon S3 bucket.</p>
        */
    export interface S3Action {
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The Amazon S3 bucket.</p>
                */
            bucketName: string | undefined;
            /**
                * <p>The object key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html">Actions, resources, and condition keys for Amazon S3</a>.</p>
                */
            key: string | undefined;
            /**
                * <p>The Amazon S3 canned ACL that controls access to the object identified by the object
                *          key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3 canned ACLs</a>.</p>
                */
            cannedAcl?: CannedAccessControlList | string;
    }
    export namespace S3Action {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Action) => any;
    }
    /**
        * <p>Describes an action to write a message to a Salesforce IoT Cloud Input
        *          Stream.</p>
        */
    export interface SalesforceAction {
            /**
                * <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The
                *          token is available from the Salesforce IoT Cloud platform after creation of the Input
                *          Stream.</p>
                */
            token: string | undefined;
            /**
                * <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from
                *          the Salesforce IoT Cloud platform after creation of the Input Stream.</p>
                */
            url: string | undefined;
    }
    export namespace SalesforceAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SalesforceAction) => any;
    }
    export enum MessageFormat {
            JSON = "JSON",
            RAW = "RAW"
    }
    /**
        * <p>Describes an action to publish to an Amazon SNS topic.</p>
        */
    export interface SnsAction {
            /**
                * <p>The ARN of the SNS topic.</p>
                */
            targetArn: string | undefined;
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>(Optional) The message format of the message to publish. Accepted values are "JSON"
                *          and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine
                *          if the payload should be parsed and relevant platform-specific bits of the payload should
                *          be extracted. To read more about SNS message formats, see <a href="https://docs.aws.amazon.com/sns/latest/dg/json-formats.html">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>
                */
            messageFormat?: MessageFormat | string;
    }
    export namespace SnsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SnsAction) => any;
    }
    /**
        * <p>Describes an action to publish data to an Amazon SQS queue.</p>
        */
    export interface SqsAction {
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The URL of the Amazon SQS queue.</p>
                */
            queueUrl: string | undefined;
            /**
                * <p>Specifies whether to use Base64 encoding.</p>
                */
            useBase64?: boolean;
    }
    export namespace SqsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SqsAction) => any;
    }
    /**
        * <p>Starts execution of a Step Functions state machine.</p>
        */
    export interface StepFunctionsAction {
            /**
                * <p>(Optional) A name will be given to the state machine execution consisting of this
                *       prefix followed by a UUID. Step Functions automatically creates a unique name for each state
                *       machine execution if one is not provided.</p>
                */
            executionNamePrefix?: string;
            /**
                * <p>The name of the Step Functions state machine whose execution will be started.</p>
                */
            stateMachineName: string | undefined;
            /**
                * <p>The ARN of the role that grants IoT permission to start execution of a state machine
                *       ("Action":"states:StartExecution").</p>
                */
            roleArn: string | undefined;
    }
    export namespace StepFunctionsAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StepFunctionsAction) => any;
    }
    /**
        * <p>Metadata attributes of the time series that are written in each measure record.</p>
        */
    export interface TimestreamDimension {
            /**
                * <p>The metadata dimension name. This is the name of the column in the
                *          Amazon Timestream database table record.</p>
                *          <p>Dimensions cannot be named: <code>measure_name</code>,
                *          <code>measure_value</code>, or <code>time</code>.
                *          These  names are reserved. Dimension names cannot start
                *          with <code>ts_</code> or <code>measure_value</code> and
                *          they cannot contain the colon (<code>:</code>)
                *          character.</p>
                */
            name: string | undefined;
            /**
                * <p>The value to write in this column of the database record.</p>
                */
            value: string | undefined;
    }
    export namespace TimestreamDimension {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimestreamDimension) => any;
    }
    /**
        * <p>Describes how to interpret an application-defined timestamp value from an MQTT message
        *          payload and the precision of that value.</p>
        */
    export interface TimestreamTimestamp {
            /**
                * <p>An expression that returns a long epoch time value.</p>
                */
            value: string | undefined;
            /**
                * <p>The precision of the timestamp value that results from the expression
                *          described in <code>value</code>.</p>
                *          <p>Valid values:  <code>SECONDS</code> | <code>MILLISECONDS</code> |
                *             <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is
                *             <code>MILLISECONDS</code>.</p>
                */
            unit: string | undefined;
    }
    export namespace TimestreamTimestamp {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimestreamTimestamp) => any;
    }
    /**
        * <p>The Timestream rule action writes attributes (measures) from an MQTT message
        *          into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a>
        *          topic rule action documentation.</p>
        */
    export interface TimestreamAction {
            /**
                * <p>The ARN of the role that grants permission to write to the
                *          Amazon Timestream database table.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of an Amazon Timestream database.</p>
                */
            databaseName: string | undefined;
            /**
                * <p>The name of the database table into which to write the measure records.</p>
                */
            tableName: string | undefined;
            /**
                * <p>Metadata attributes of the time series that are written in each measure record.</p>
                */
            dimensions: TimestreamDimension[] | undefined;
            /**
                * <p>Specifies an application-defined value to replace the default value assigned to the
                *          Timestream record's timestamp in the <code>time</code> column.</p>
                *          <p>You can use this property to specify the value and the precision of the Timestream
                *          record's timestamp. You can specify a value from the message payload or a value computed by
                *          a substitution template.</p>
                *          <p>If omitted, the topic rule action assigns the timestamp, in milliseconds, at the time it
                *          processed the rule. </p>
                */
            timestamp?: TimestreamTimestamp;
    }
    export namespace TimestreamAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimestreamAction) => any;
    }
    /**
        * <p>Describes the actions associated with a rule.</p>
        */
    export interface Action {
            /**
                * <p>Write to a DynamoDB table.</p>
                */
            dynamoDB?: DynamoDBAction;
            /**
                * <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows
                *          you to write each attribute in an MQTT message payload into a separate DynamoDB
                *          column.</p>
                */
            dynamoDBv2?: DynamoDBv2Action;
            /**
                * <p>Invoke a Lambda function.</p>
                */
            lambda?: LambdaAction;
            /**
                * <p>Publish to an Amazon SNS topic.</p>
                */
            sns?: SnsAction;
            /**
                * <p>Publish to an Amazon SQS queue.</p>
                */
            sqs?: SqsAction;
            /**
                * <p>Write data to an Amazon Kinesis stream.</p>
                */
            kinesis?: KinesisAction;
            /**
                * <p>Publish to another MQTT topic.</p>
                */
            republish?: RepublishAction;
            /**
                * <p>Write to an Amazon S3 bucket.</p>
                */
            s3?: S3Action;
            /**
                * <p>Write to an Amazon Kinesis Firehose stream.</p>
                */
            firehose?: FirehoseAction;
            /**
                * <p>Capture a CloudWatch metric.</p>
                */
            cloudwatchMetric?: CloudwatchMetricAction;
            /**
                * <p>Change the state of a CloudWatch alarm.</p>
                */
            cloudwatchAlarm?: CloudwatchAlarmAction;
            /**
                * <p>Send data to CloudWatch Logs.</p>
                */
            cloudwatchLogs?: CloudwatchLogsAction;
            /**
                * <p>Write data to an Amazon OpenSearch Service domain.</p>
                *          <note>
                *             <p>The <code>Elasticsearch</code> action can only be used by existing rule actions.
                *             To create a new rule action or to update an existing rule action, use the
                *             <code>OpenSearch</code> rule action instead. For more information, see
                *             <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html">OpenSearchAction</a>.</p>
                *          </note>
                */
            elasticsearch?: ElasticsearchAction;
            /**
                * <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>
                */
            salesforce?: SalesforceAction;
            /**
                * <p>Sends message data to an IoT Analytics channel.</p>
                */
            iotAnalytics?: IotAnalyticsAction;
            /**
                * <p>Sends an input to an IoT Events detector.</p>
                */
            iotEvents?: IotEventsAction;
            /**
                * <p>Sends data from the MQTT message that triggered the rule to IoT SiteWise asset
                *       properties.</p>
                */
            iotSiteWise?: IotSiteWiseAction;
            /**
                * <p>Starts execution of a Step Functions state machine.</p>
                */
            stepFunctions?: StepFunctionsAction;
            /**
                * <p>The Timestream rule action writes attributes (measures) from an MQTT message
                *          into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a>
                *             topic rule action documentation.</p>
                */
            timestream?: TimestreamAction;
            /**
                * <p>Send data to an HTTPS endpoint.</p>
                */
            http?: HttpAction;
            /**
                * <p>Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.</p>
                */
            kafka?: KafkaAction;
            /**
                * <p>Write data to an Amazon OpenSearch Service domain.</p>
                */
            openSearch?: OpenSearchAction;
    }
    export namespace Action {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Action) => any;
    }
    export enum ActionType {
            CONNECT = "CONNECT",
            PUBLISH = "PUBLISH",
            RECEIVE = "RECEIVE",
            SUBSCRIBE = "SUBSCRIBE"
    }
    export enum ComparisonOperator {
            GREATER_THAN = "greater-than",
            GREATER_THAN_EQUALS = "greater-than-equals",
            IN_CIDR_SET = "in-cidr-set",
            IN_PORT_SET = "in-port-set",
            IN_SET = "in-set",
            LESS_THAN = "less-than",
            LESS_THAN_EQUALS = "less-than-equals",
            NOT_IN_CIDR_SET = "not-in-cidr-set",
            NOT_IN_PORT_SET = "not-in-port-set",
            NOT_IN_SET = "not-in-set"
    }
    export enum ConfidenceLevel {
            HIGH = "HIGH",
            LOW = "LOW",
            MEDIUM = "MEDIUM"
    }
    /**
        * <p>
        *             The configuration of an ML Detect Security Profile.
        *         </p>
        */
    export interface MachineLearningDetectionConfig {
            /**
                * <p>
                *             The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>.
                *         </p>
                */
            confidenceLevel: ConfidenceLevel | string | undefined;
    }
    export namespace MachineLearningDetectionConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MachineLearningDetectionConfig) => any;
    }
    /**
        * <p>A statistical ranking (percentile) that
        *       indicates a threshold value by which a behavior is determined to be in compliance or in
        *       violation of the behavior.</p>
        */
    export interface StatisticalThreshold {
            /**
                * <p>The percentile that
                *       resolves to a threshold value by which compliance with a behavior is determined. Metrics are
                *       collected over the specified period (<code>durationSeconds</code>) from all reporting devices
                *       in your account and statistical ranks are calculated. Then, the measurements from a device are
                *       collected over the same period. If the accumulated measurements from the device fall above or
                *       below (<code>comparisonOperator</code>) the value associated with the percentile specified,
                *       then the device is considered to be in compliance with the behavior, otherwise a violation
                *       occurs.</p>
                */
            statistic?: string;
    }
    export namespace StatisticalThreshold {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StatisticalThreshold) => any;
    }
    /**
        * <p>The value to be compared with the <code>metric</code>.</p>
        */
    export interface MetricValue {
            /**
                * <p>If the <code>comparisonOperator</code> calls for a numeric value, use this
                *           to specify that numeric value to be compared with the <code>metric</code>.</p>
                */
            count?: number;
            /**
                * <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this
                *           to specify that set to be compared with the <code>metric</code>.</p>
                */
            cidrs?: string[];
            /**
                * <p>If the <code>comparisonOperator</code> calls for a set of ports, use this
                *           to specify that set to be compared with the <code>metric</code>.</p>
                */
            ports?: number[];
            /**
                * <p>
                *             The numeral value of a metric.
                *         </p>
                */
            number?: number;
            /**
                * <p>
                *             The numeral values of a metric.
                *         </p>
                */
            numbers?: number[];
            /**
                * <p>
                *             The string values of a metric.
                *         </p>
                */
            strings?: string[];
    }
    export namespace MetricValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricValue) => any;
    }
    /**
        * <p>The criteria by which the behavior is determined to be normal.</p>
        */
    export interface BehaviorCriteria {
            /**
                * <p>The operator that relates the thing measured (<code>metric</code>) to the criteria
                *           (containing a <code>value</code> or <code>statisticalThreshold</code>). Valid operators include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>string-list</code>: <code>in-set</code> and <code>not-in-set</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>number-list</code>: <code>in-set</code> and <code>not-in-set</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ip-address-list</code>: <code>in-cidr-set</code> and <code>not-in-cidr-set</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>number</code>: <code>less-than</code>, <code>less-than-equals</code>, <code>greater-than</code>, and <code>greater-than-equals</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            comparisonOperator?: ComparisonOperator | string;
            /**
                * <p>The value to be compared with the <code>metric</code>.</p>
                */
            value?: MetricValue;
            /**
                * <p>Use this to specify the time duration over which the behavior is evaluated, for those criteria that
                *       have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>). For a
                *         <code>statisticalThreshhold</code> metric comparison, measurements from all devices are
                *       accumulated over this time duration before being used to calculate percentiles, and later,
                *       measurements from an individual device are also accumulated over this time duration before
                *       being given a percentile rank. Cannot be used with list-based metric datatypes.</p>
                */
            durationSeconds?: number;
            /**
                * <p>If a device is in violation of the behavior for the specified number of consecutive
                *           datapoints, an alarm occurs. If not specified, the default is 1.</p>
                */
            consecutiveDatapointsToAlarm?: number;
            /**
                * <p>If an alarm has occurred and the offending device is no longer in violation of the behavior
                *           for the specified number of consecutive datapoints, the alarm is cleared. If not specified,
                *           the default is 1.</p>
                */
            consecutiveDatapointsToClear?: number;
            /**
                * <p>A statistical ranking (percentile)that
                *       indicates a threshold value by which a behavior is determined to be in compliance or in
                *       violation of the behavior.</p>
                */
            statisticalThreshold?: StatisticalThreshold;
            /**
                * <p>
                *             The configuration of an ML Detect
                *         </p>
                */
            mlDetectionConfig?: MachineLearningDetectionConfig;
    }
    export namespace BehaviorCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BehaviorCriteria) => any;
    }
    export enum DimensionValueOperator {
            IN = "IN",
            NOT_IN = "NOT_IN"
    }
    /**
        * <p>The dimension of a metric.</p>
        */
    export interface MetricDimension {
            /**
                * <p>A unique identifier for the dimension.</p>
                */
            dimensionName: string | undefined;
            /**
                * <p>Defines how the <code>dimensionValues</code> of a dimension are interpreted. For example, for dimension type TOPIC_FILTER, the <code>IN</code> operator, a message will be counted only if its topic matches one of the topic filters. With <code>NOT_IN</code> operator, a message will be counted only if it doesn't match any of the topic filters. The operator is optional: if it's not provided (is <code>null</code>), it will be interpreted as <code>IN</code>.</p>
                */
            operator?: DimensionValueOperator | string;
    }
    export namespace MetricDimension {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricDimension) => any;
    }
    /**
        * <p>A Device Defender security profile behavior.</p>
        */
    export interface Behavior {
            /**
                * <p>The name
                *       you've given to the behavior.</p>
                */
            name: string | undefined;
            /**
                * <p>What is measured by the behavior.</p>
                */
            metric?: string;
            /**
                * <p>The dimension for a metric in your behavior. For example, using a
                *                 <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric to only MQTT topics where the name matches the pattern specified in the dimension. This can't be used with custom metrics.</p>
                */
            metricDimension?: MetricDimension;
            /**
                * <p>The criteria that determine if a device is behaving normally in regard to
                *           the <code>metric</code>.</p>
                */
            criteria?: BehaviorCriteria;
            /**
                * <p>
                *             Suppresses alerts.
                *         </p>
                */
            suppressAlerts?: boolean;
    }
    export namespace Behavior {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Behavior) => any;
    }
    export enum VerificationState {
            BENIGN_POSITIVE = "BENIGN_POSITIVE",
            FALSE_POSITIVE = "FALSE_POSITIVE",
            TRUE_POSITIVE = "TRUE_POSITIVE",
            UNKNOWN = "UNKNOWN"
    }
    /**
        * <p>
        *             The details of a violation event.
        *         </p>
        */
    export interface ViolationEventAdditionalInfo {
            /**
                * <p>
                *             The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>.
                *         </p>
                */
            confidenceLevel?: ConfidenceLevel | string;
    }
    export namespace ViolationEventAdditionalInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ViolationEventAdditionalInfo) => any;
    }
    /**
        * <p>Information about an active Device Defender security profile behavior violation.</p>
        */
    export interface ActiveViolation {
            /**
                * <p>The ID of the active violation.</p>
                */
            violationId?: string;
            /**
                * <p>The name of the thing responsible for the active violation.</p>
                */
            thingName?: string;
            /**
                * <p>The security profile with the behavior is in violation.</p>
                */
            securityProfileName?: string;
            /**
                * <p>The behavior that is being violated.</p>
                */
            behavior?: Behavior;
            /**
                * <p>The value of the metric (the measurement) that caused the most recent violation.</p>
                */
            lastViolationValue?: MetricValue;
            /**
                * <p>
                *             The details of a violation event.
                *         </p>
                */
            violationEventAdditionalInfo?: ViolationEventAdditionalInfo;
            /**
                * <p>The verification state of the violation (detect alarm).</p>
                */
            verificationState?: VerificationState | string;
            /**
                * <p>The description of the verification state of the violation.</p>
                */
            verificationStateDescription?: string;
            /**
                * <p>The time the most recent violation occurred.</p>
                */
            lastViolationTime?: Date;
            /**
                * <p>The time the violation started.</p>
                */
            violationStartTime?: Date;
    }
    export namespace ActiveViolation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ActiveViolation) => any;
    }
    /**
        * <p>The metric you want to retain. Dimensions are optional.</p>
        */
    export interface MetricToRetain {
            /**
                * <p>What is measured by the behavior.</p>
                */
            metric: string | undefined;
            /**
                * <p>The dimension of a metric. This can't be used with custom metrics.</p>
                */
            metricDimension?: MetricDimension;
    }
    export namespace MetricToRetain {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricToRetain) => any;
    }
    /**
        * <p>Parameters used when defining a mitigation action that move a set of things to a thing group.</p>
        */
    export interface AddThingsToThingGroupParams {
            /**
                * <p>The list of groups to which you want to add the things that triggered the mitigation action. You can add a thing to a maximum of 10 groups, but you can't add a thing to more than one group in the same hierarchy.</p>
                */
            thingGroupNames: string[] | undefined;
            /**
                * <p>Specifies if this mitigation action can move the things that triggered the mitigation action even if they are part of one or more dynamic thing groups.</p>
                */
            overrideDynamicGroups?: boolean;
    }
    export namespace AddThingsToThingGroupParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddThingsToThingGroupParams) => any;
    }
    export interface AddThingToBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                * 		       <note>
                *             <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p>
                *          </note>
                */
            billingGroupName?: string;
            /**
                * <p>The ARN of the billing group.</p>
                */
            billingGroupArn?: string;
            /**
                * <p>The name of the thing to be added to the billing group.</p>
                */
            thingName?: string;
            /**
                * <p>The ARN of the thing to be added to the billing group.</p>
                */
            thingArn?: string;
    }
    export namespace AddThingToBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddThingToBillingGroupRequest) => any;
    }
    export interface AddThingToBillingGroupResponse {
    }
    export namespace AddThingToBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddThingToBillingGroupResponse) => any;
    }
    export interface AddThingToThingGroupRequest {
            /**
                * <p>The name of the group to which you are adding a thing.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The ARN of the group to which you are adding a thing.</p>
                */
            thingGroupArn?: string;
            /**
                * <p>The name of the thing to add to a group.</p>
                */
            thingName?: string;
            /**
                * <p>The ARN of the thing to add to a group.</p>
                */
            thingArn?: string;
            /**
                * <p>Override dynamic thing groups with static thing groups when 10-group limit is
                * 			reached. If a thing belongs to 10 thing groups, and one or more of those groups are
                * 			dynamic thing groups, adding a thing to a static group removes the thing from the last
                * 			dynamic group.</p>
                */
            overrideDynamicGroups?: boolean;
    }
    export namespace AddThingToThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddThingToThingGroupRequest) => any;
    }
    export interface AddThingToThingGroupResponse {
    }
    export namespace AddThingToThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddThingToThingGroupResponse) => any;
    }
    export enum AggregationTypeName {
            CARDINALITY = "Cardinality",
            PERCENTILES = "Percentiles",
            STATISTICS = "Statistics"
    }
    /**
        * <p>The type of aggregation queries.</p>
        */
    export interface AggregationType {
            /**
                * <p>The name of the aggregation type.</p>
                */
            name: AggregationTypeName | string | undefined;
            /**
                * <p>A list of the values of aggregation types.</p>
                */
            values?: string[];
    }
    export namespace AggregationType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AggregationType) => any;
    }
    /**
        * <p>A structure containing the alert target ARN and the role ARN.</p>
        */
    export interface AlertTarget {
            /**
                * <p>The Amazon Resource Name (ARN) of the notification target to which alerts are sent.</p>
                */
            alertTargetArn: string | undefined;
            /**
                * <p>The ARN of the role that grants permission to send alerts to the
                *         notification target.</p>
                */
            roleArn: string | undefined;
    }
    export namespace AlertTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlertTarget) => any;
    }
    export enum AlertTargetType {
            SNS = "SNS"
    }
    /**
        * <p>Describes an IoT policy.</p>
        */
    export interface Policy {
            /**
                * <p>The policy name.</p>
                */
            policyName?: string;
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
    }
    export namespace Policy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Policy) => any;
    }
    /**
        * <p>Contains information that allowed the authorization.</p>
        */
    export interface Allowed {
            /**
                * <p>A list of policies that allowed the authentication.</p>
                */
            policies?: Policy[];
    }
    export namespace Allowed {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Allowed) => any;
    }
    export interface AssociateTargetsWithJobRequest {
            /**
                * <p>A list of thing group ARNs that define the targets of the job.</p>
                */
            targets: string[] | undefined;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
            /**
                * <p>An optional comment string describing why the job was associated with the targets.</p>
                */
            comment?: string;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
    }
    export namespace AssociateTargetsWithJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateTargetsWithJobRequest) => any;
    }
    export interface AssociateTargetsWithJobResponse {
            /**
                * <p>An ARN identifying the job.</p>
                */
            jobArn?: string;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>A short text description of the job.</p>
                */
            description?: string;
    }
    export namespace AssociateTargetsWithJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateTargetsWithJobResponse) => any;
    }
    /**
        * <p>A limit has been exceeded.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    export interface AttachPolicyRequest {
            /**
                * <p>The name of the policy to attach.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/security-iam.html">identity</a> to which the policy is attached. For example, a thing group or a certificate.</p>
                */
            target: string | undefined;
    }
    export namespace AttachPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachPolicyRequest) => any;
    }
    /**
        * <p>The input for the AttachPrincipalPolicy operation.</p>
        */
    export interface AttachPrincipalPolicyRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The principal, which can be a certificate ARN (as returned from the CreateCertificate
                *          operation) or an Amazon Cognito ID.</p>
                */
            principal: string | undefined;
    }
    export namespace AttachPrincipalPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachPrincipalPolicyRequest) => any;
    }
    export interface AttachSecurityProfileRequest {
            /**
                * <p>The security profile that is attached.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>The ARN of the target (thing group) to which the security profile is attached.</p>
                */
            securityProfileTargetArn: string | undefined;
    }
    export namespace AttachSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachSecurityProfileRequest) => any;
    }
    export interface AttachSecurityProfileResponse {
    }
    export namespace AttachSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachSecurityProfileResponse) => any;
    }
    /**
        * <p>An exception thrown when the version of an entity specified with the
        *             <code>expectedVersion</code> parameter does not match the latest version in the
        *          system.</p>
        */
    export class VersionConflictException extends __BaseException {
            readonly name: "VersionConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<VersionConflictException, __BaseException>);
    }
    /**
        * <p>The input for the AttachThingPrincipal operation.</p>
        */
    export interface AttachThingPrincipalRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The principal, which can be a certificate ARN (as returned from the
                * 			CreateCertificate operation) or an Amazon Cognito ID.</p>
                */
            principal: string | undefined;
    }
    export namespace AttachThingPrincipalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachThingPrincipalRequest) => any;
    }
    /**
        * <p>The output from the AttachThingPrincipal operation.</p>
        */
    export interface AttachThingPrincipalResponse {
    }
    export namespace AttachThingPrincipalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachThingPrincipalResponse) => any;
    }
    /**
        * <p>The attribute payload.</p>
        */
    export interface AttributePayload {
            /**
                * <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>
                * 		       <p>
                * 			         <code>{\"attributes\":{\"string1\":\"string2\"}}</code>
                * 		       </p>
                */
            attributes?: Record<string, string>;
            /**
                * <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with
                * 			the attributes stored in the registry, instead of overwriting them.</p>
                * 		       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>
                * 		       <note>
                * 			         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p>
                * 		       </note>
                */
            merge?: boolean;
    }
    export namespace AttributePayload {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttributePayload) => any;
    }
    /**
        * <p>Which audit checks are enabled and disabled for this account.</p>
        */
    export interface AuditCheckConfiguration {
            /**
                * <p>True if this audit check is enabled for this account.</p>
                */
            enabled?: boolean;
    }
    export namespace AuditCheckConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditCheckConfiguration) => any;
    }
    export enum AuditCheckRunStatus {
            CANCELED = "CANCELED",
            COMPLETED_COMPLIANT = "COMPLETED_COMPLIANT",
            COMPLETED_NON_COMPLIANT = "COMPLETED_NON_COMPLIANT",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            WAITING_FOR_DATA_COLLECTION = "WAITING_FOR_DATA_COLLECTION"
    }
    /**
        * <p>Information about the audit check.</p>
        */
    export interface AuditCheckDetails {
            /**
                * <p>The completion status of this check. One of "IN_PROGRESS", "WAITING_FOR_DATA_COLLECTION",
                *         "CANCELED", "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".</p>
                */
            checkRunStatus?: AuditCheckRunStatus | string;
            /**
                * <p>True if the check is complete and found all resources compliant.</p>
                */
            checkCompliant?: boolean;
            /**
                * <p>The number of resources on which the check was performed.</p>
                */
            totalResourcesCount?: number;
            /**
                * <p>The number of resources that were found noncompliant during the check.</p>
                */
            nonCompliantResourcesCount?: number;
            /**
                * <p>
                *             Describes how many of the non-compliant resources created during the evaluation of an audit check were marked as suppressed.
                *         </p>
                */
            suppressedNonCompliantResourcesCount?: number;
            /**
                * <p>The code of any error encountered when this check is performed during this audit.
                *           One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".</p>
                */
            errorCode?: string;
            /**
                * <p>The message associated with any error encountered when this check is performed during this audit.</p>
                */
            message?: string;
    }
    export namespace AuditCheckDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditCheckDetails) => any;
    }
    /**
        * <p>Information about the version of the policy associated with the resource.</p>
        */
    export interface PolicyVersionIdentifier {
            /**
                * <p>The name of the policy.</p>
                */
            policyName?: string;
            /**
                * <p>The ID of the version of the policy associated with the resource.</p>
                */
            policyVersionId?: string;
    }
    export namespace PolicyVersionIdentifier {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicyVersionIdentifier) => any;
    }
    /**
        * <p>Information that identifies the noncompliant resource.</p>
        */
    export interface ResourceIdentifier {
            /**
                * <p>The ID of the certificate attached to the resource.</p>
                */
            deviceCertificateId?: string;
            /**
                * <p>The ID of the CA certificate used to authorize the certificate.</p>
                */
            caCertificateId?: string;
            /**
                * <p>The ID of the Amazon Cognito identity pool.</p>
                */
            cognitoIdentityPoolId?: string;
            /**
                * <p>The client ID.</p>
                */
            clientId?: string;
            /**
                * <p>The version of the policy associated with the resource.</p>
                */
            policyVersionIdentifier?: PolicyVersionIdentifier;
            /**
                * <p>The account with which the resource is associated.</p>
                */
            account?: string;
            /**
                * <p>The ARN of the IAM role that has overly permissive actions.</p>
                */
            iamRoleArn?: string;
            /**
                * <p>The ARN of the role alias that has overly permissive actions.</p>
                */
            roleAliasArn?: string;
    }
    export namespace ResourceIdentifier {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceIdentifier) => any;
    }
    export enum ResourceType {
            ACCOUNT_SETTINGS = "ACCOUNT_SETTINGS",
            CA_CERTIFICATE = "CA_CERTIFICATE",
            CLIENT_ID = "CLIENT_ID",
            COGNITO_IDENTITY_POOL = "COGNITO_IDENTITY_POOL",
            DEVICE_CERTIFICATE = "DEVICE_CERTIFICATE",
            IAM_ROLE = "IAM_ROLE",
            IOT_POLICY = "IOT_POLICY",
            ROLE_ALIAS = "ROLE_ALIAS"
    }
    /**
        * <p>Information about the resource that was noncompliant with the audit check.</p>
        */
    export interface NonCompliantResource {
            /**
                * <p>The type of the noncompliant resource.</p>
                */
            resourceType?: ResourceType | string;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier?: ResourceIdentifier;
            /**
                * <p>Other information about the noncompliant resource.</p>
                */
            additionalInfo?: Record<string, string>;
    }
    export namespace NonCompliantResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NonCompliantResource) => any;
    }
    /**
        * <p>Information about a related resource.</p>
        */
    export interface RelatedResource {
            /**
                * <p>The type of resource.</p>
                */
            resourceType?: ResourceType | string;
            /**
                * <p>Information that identifies the resource.</p>
                */
            resourceIdentifier?: ResourceIdentifier;
            /**
                * <p>Other information about the resource.</p>
                */
            additionalInfo?: Record<string, string>;
    }
    export namespace RelatedResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RelatedResource) => any;
    }
    export enum AuditFindingSeverity {
            CRITICAL = "CRITICAL",
            HIGH = "HIGH",
            LOW = "LOW",
            MEDIUM = "MEDIUM"
    }
    /**
        * <p>The findings (results) of the audit.</p>
        */
    export interface AuditFinding {
            /**
                * <p>A unique identifier for this set of audit findings. This identifier is used to apply
                *       mitigation tasks to one or more sets of findings.</p>
                */
            findingId?: string;
            /**
                * <p>The ID of the audit that generated this result (finding).</p>
                */
            taskId?: string;
            /**
                * <p>The audit check that generated this result.</p>
                */
            checkName?: string;
            /**
                * <p>The time the audit started.</p>
                */
            taskStartTime?: Date;
            /**
                * <p>The time the result (finding) was discovered.</p>
                */
            findingTime?: Date;
            /**
                * <p>The severity of the result (finding).</p>
                */
            severity?: AuditFindingSeverity | string;
            /**
                * <p>The resource that was found to be noncompliant with the
                *         audit check.</p>
                */
            nonCompliantResource?: NonCompliantResource;
            /**
                * <p>The list of related resources.</p>
                */
            relatedResources?: RelatedResource[];
            /**
                * <p>The reason the resource was noncompliant.</p>
                */
            reasonForNonCompliance?: string;
            /**
                * <p>A code that indicates the reason that the resource was noncompliant.</p>
                */
            reasonForNonComplianceCode?: string;
            /**
                * <p>
                *             Indicates whether the audit finding was suppressed or not during reporting.
                *         </p>
                */
            isSuppressed?: boolean;
    }
    export namespace AuditFinding {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditFinding) => any;
    }
    export enum AuditFrequency {
            BIWEEKLY = "BIWEEKLY",
            DAILY = "DAILY",
            MONTHLY = "MONTHLY",
            WEEKLY = "WEEKLY"
    }
    export enum AuditMitigationActionsExecutionStatus {
            CANCELED = "CANCELED",
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            PENDING = "PENDING",
            SKIPPED = "SKIPPED"
    }
    /**
        * <p>Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.</p>
        */
    export interface AuditMitigationActionExecutionMetadata {
            /**
                * <p>The unique identifier for the task that applies the mitigation action.</p>
                */
            taskId?: string;
            /**
                * <p>The unique identifier for the findings to which the task and associated mitigation action are applied.</p>
                */
            findingId?: string;
            /**
                * <p>The friendly name of the mitigation action being applied by the task.</p>
                */
            actionName?: string;
            /**
                * <p>The unique identifier for the mitigation action being applied by the task.</p>
                */
            actionId?: string;
            /**
                * <p>The current status of the task being executed.</p>
                */
            status?: AuditMitigationActionsExecutionStatus | string;
            /**
                * <p>The date and time when the task was started.</p>
                */
            startTime?: Date;
            /**
                * <p>The date and time when the task was completed or canceled. Blank if the task is still running.</p>
                */
            endTime?: Date;
            /**
                * <p>If an error occurred, the code that indicates which type of error occurred.</p>
                */
            errorCode?: string;
            /**
                * <p>If an error occurred, a message that describes the error.</p>
                */
            message?: string;
    }
    export namespace AuditMitigationActionExecutionMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditMitigationActionExecutionMetadata) => any;
    }
    export enum AuditMitigationActionsTaskStatus {
            CANCELED = "CANCELED",
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS"
    }
    /**
        * <p>Information about an audit mitigation actions task that is returned by <code>ListAuditMitigationActionsTasks</code>.</p>
        */
    export interface AuditMitigationActionsTaskMetadata {
            /**
                * <p>The unique identifier for the task.</p>
                */
            taskId?: string;
            /**
                * <p>The time at which the audit mitigation actions task was started.</p>
                */
            startTime?: Date;
            /**
                * <p>The current state of the audit mitigation actions task.</p>
                */
            taskStatus?: AuditMitigationActionsTaskStatus | string;
    }
    export namespace AuditMitigationActionsTaskMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditMitigationActionsTaskMetadata) => any;
    }
    /**
        * <p>Provides summary counts of how many tasks for findings are in a particular state. This information is included in the response from DescribeAuditMitigationActionsTask.</p>
        */
    export interface TaskStatisticsForAuditCheck {
            /**
                * <p>The total number of findings to which a task is being applied.</p>
                */
            totalFindingsCount?: number;
            /**
                * <p>The number of findings for which at least one of the actions failed when applied.</p>
                */
            failedFindingsCount?: number;
            /**
                * <p>The number of findings for which all mitigation actions succeeded when applied.</p>
                */
            succeededFindingsCount?: number;
            /**
                * <p>The number of findings skipped because of filter conditions provided in the parameters to the command.</p>
                */
            skippedFindingsCount?: number;
            /**
                * <p>The number of findings to which the mitigation action task was canceled when applied.</p>
                */
            canceledFindingsCount?: number;
    }
    export namespace TaskStatisticsForAuditCheck {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskStatisticsForAuditCheck) => any;
    }
    /**
        * <p>Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.</p>
        */
    export interface AuditMitigationActionsTaskTarget {
            /**
                * <p>If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.</p>
                */
            auditTaskId?: string;
            /**
                * <p>If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.</p>
                */
            findingIds?: string[];
            /**
                * <p>Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.</p>
                */
            auditCheckToReasonCodeFilter?: Record<string, string[]>;
    }
    export namespace AuditMitigationActionsTaskTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditMitigationActionsTaskTarget) => any;
    }
    /**
        * <p>Information about the targets to which audit notifications are sent.</p>
        */
    export interface AuditNotificationTarget {
            /**
                * <p>The ARN of the target (SNS topic) to which audit notifications are sent.</p>
                */
            targetArn?: string;
            /**
                * <p>The ARN of the role that grants permission to send notifications to the target.</p>
                */
            roleArn?: string;
            /**
                * <p>True if notifications to the target are enabled.</p>
                */
            enabled?: boolean;
    }
    export namespace AuditNotificationTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditNotificationTarget) => any;
    }
    export enum AuditNotificationType {
            SNS = "SNS"
    }
    /**
        * <p> Filters out specific findings of a Device Defender audit. </p>
        */
    export interface AuditSuppression {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName: string | undefined;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier: ResourceIdentifier | undefined;
            /**
                * <p>
                *             The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to.
                *         </p>
                */
            expirationDate?: Date;
            /**
                * <p>
                *             Indicates whether a suppression should exist indefinitely or not.
                *         </p>
                */
            suppressIndefinitely?: boolean;
            /**
                * <p>
                *             The description of the audit suppression.
                *         </p>
                */
            description?: string;
    }
    export namespace AuditSuppression {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditSuppression) => any;
    }
    export enum AuditTaskStatus {
            CANCELED = "CANCELED",
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS"
    }
    export enum AuditTaskType {
            ON_DEMAND_AUDIT_TASK = "ON_DEMAND_AUDIT_TASK",
            SCHEDULED_AUDIT_TASK = "SCHEDULED_AUDIT_TASK"
    }
    /**
        * <p>The audits that were performed.</p>
        */
    export interface AuditTaskMetadata {
            /**
                * <p>The ID of this audit.</p>
                */
            taskId?: string;
            /**
                * <p>The status of this audit. One of "IN_PROGRESS", "COMPLETED",
                *         "FAILED", or "CANCELED".</p>
                */
            taskStatus?: AuditTaskStatus | string;
            /**
                * <p>The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".</p>
                */
            taskType?: AuditTaskType | string;
    }
    export namespace AuditTaskMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuditTaskMetadata) => any;
    }
    export enum AuthDecision {
            ALLOWED = "ALLOWED",
            EXPLICIT_DENY = "EXPLICIT_DENY",
            IMPLICIT_DENY = "IMPLICIT_DENY"
    }
    /**
        * <p>A collection of authorization information.</p>
        */
    export interface AuthInfo {
            /**
                * <p>The type of action for which the principal is being authorized.</p>
                */
            actionType?: ActionType | string;
            /**
                * <p>The resources for which the principal is being authorized to perform the specified
                *          action.</p>
                */
            resources: string[] | undefined;
    }
    export namespace AuthInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthInfo) => any;
    }
    /**
        * <p>An object that specifies the authorization service for a domain.</p>
        */
    export interface AuthorizerConfig {
            /**
                * <p>The name of the authorization service for a domain configuration.</p>
                */
            defaultAuthorizerName?: string;
            /**
                * <p>A Boolean that specifies whether the domain configuration's authorization service can be overridden.</p>
                */
            allowAuthorizerOverride?: boolean;
    }
    export namespace AuthorizerConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthorizerConfig) => any;
    }
    export enum AuthorizerStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    /**
        * <p>The authorizer description.</p>
        */
    export interface AuthorizerDescription {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName?: string;
            /**
                * <p>The authorizer ARN.</p>
                */
            authorizerArn?: string;
            /**
                * <p>The authorizer's Lambda function ARN.</p>
                */
            authorizerFunctionArn?: string;
            /**
                * <p>The key used to extract the token from the HTTP headers.</p>
                */
            tokenKeyName?: string;
            /**
                * <p>The public keys used to validate the token signature returned by your custom
                *          authentication service.</p>
                */
            tokenSigningPublicKeys?: Record<string, string>;
            /**
                * <p>The status of the authorizer.</p>
                */
            status?: AuthorizerStatus | string;
            /**
                * <p>The UNIX timestamp of when the authorizer was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The UNIX timestamp of when the authorizer was last updated.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>Specifies whether IoT validates the token signature in an authorization request.</p>
                */
            signingDisabled?: boolean;
            /**
                * <p>When <code>true</code>, the result from the authorizer’s Lambda function is
                * 	  cached for the time specified in <code>refreshAfterInSeconds</code>. The cached
                * 	  result is used while the device reuses the same HTTP connection.</p>
                */
            enableCachingForHttp?: boolean;
    }
    export namespace AuthorizerDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthorizerDescription) => any;
    }
    /**
        * <p>The authorizer summary.</p>
        */
    export interface AuthorizerSummary {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName?: string;
            /**
                * <p>The authorizer ARN.</p>
                */
            authorizerArn?: string;
    }
    export namespace AuthorizerSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthorizerSummary) => any;
    }
    /**
        * <p>Information that explicitly denies authorization.</p>
        */
    export interface ExplicitDeny {
            /**
                * <p>The policies that denied the authorization.</p>
                */
            policies?: Policy[];
    }
    export namespace ExplicitDeny {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExplicitDeny) => any;
    }
    /**
        * <p>Information that implicitly denies authorization. When policy doesn't explicitly deny
        *          or allow an action on a resource it is considered an implicit deny.</p>
        */
    export interface ImplicitDeny {
            /**
                * <p>Policies that don't contain a matching allow or deny statement for the specified
                *          action on the specified resource. </p>
                */
            policies?: Policy[];
    }
    export namespace ImplicitDeny {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImplicitDeny) => any;
    }
    /**
        * <p>Contains information that denied the authorization.</p>
        */
    export interface Denied {
            /**
                * <p>Information that implicitly denies the authorization. When a policy doesn't
                *          explicitly deny or allow an action on a resource it is considered an implicit
                *          deny.</p>
                */
            implicitDeny?: ImplicitDeny;
            /**
                * <p>Information that explicitly denies the authorization. </p>
                */
            explicitDeny?: ExplicitDeny;
    }
    export namespace Denied {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Denied) => any;
    }
    /**
        * <p>The authorizer result.</p>
        */
    export interface AuthResult {
            /**
                * <p>Authorization information.</p>
                */
            authInfo?: AuthInfo;
            /**
                * <p>The policies and statements that allowed the specified action.</p>
                */
            allowed?: Allowed;
            /**
                * <p>The policies and statements that denied the specified action.</p>
                */
            denied?: Denied;
            /**
                * <p>The final authorization decision of this scenario. Multiple statements are taken into
                *          account when determining the authorization decision. An explicit deny statement can
                *          override multiple allow statements.</p>
                */
            authDecision?: AuthDecision | string;
            /**
                * <p>Contains any missing context values found while evaluating policy.</p>
                */
            missingContextValues?: string[];
    }
    export namespace AuthResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AuthResult) => any;
    }
    export enum AutoRegistrationStatus {
            DISABLE = "DISABLE",
            ENABLE = "ENABLE"
    }
    export interface CancelAuditMitigationActionsTaskRequest {
            /**
                * <p>The unique identifier for the task that you want to cancel. </p>
                */
            taskId: string | undefined;
    }
    export namespace CancelAuditMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelAuditMitigationActionsTaskRequest) => any;
    }
    export interface CancelAuditMitigationActionsTaskResponse {
    }
    export namespace CancelAuditMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelAuditMitigationActionsTaskResponse) => any;
    }
    export interface CancelAuditTaskRequest {
            /**
                * <p>The ID of the audit you want to cancel. You can only cancel an
                *               audit that is "IN_PROGRESS".</p>
                */
            taskId: string | undefined;
    }
    export namespace CancelAuditTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelAuditTaskRequest) => any;
    }
    export interface CancelAuditTaskResponse {
    }
    export namespace CancelAuditTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelAuditTaskResponse) => any;
    }
    /**
        * <p>The input for the CancelCertificateTransfer operation.</p>
        */
    export interface CancelCertificateTransferRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
    }
    export namespace CancelCertificateTransferRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelCertificateTransferRequest) => any;
    }
    export interface CancelDetectMitigationActionsTaskRequest {
            /**
                * <p>
                *       The unique identifier of the task.
                *     </p>
                */
            taskId: string | undefined;
    }
    export namespace CancelDetectMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelDetectMitigationActionsTaskRequest) => any;
    }
    export interface CancelDetectMitigationActionsTaskResponse {
    }
    export namespace CancelDetectMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelDetectMitigationActionsTaskResponse) => any;
    }
    export interface CancelJobRequest {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
            /**
                * <p>(Optional)A reason code string that explains why the job was canceled.</p>
                */
            reasonCode?: string;
            /**
                * <p>An optional comment string describing why the job was canceled.</p>
                */
            comment?: string;
            /**
                * <p>(Optional) If <code>true</code> job executions with status "IN_PROGRESS" and "QUEUED"
                *           are canceled, otherwise only job executions with status "QUEUED" are canceled. The default
                *           is <code>false</code>.</p>
                *         <p>Canceling a job which is "IN_PROGRESS", will cause a device which is executing
                *           the job to be unable to update the job execution status.  Use caution and ensure that each
                *           device executing a job which is canceled is able to recover to a valid state.</p>
                */
            force?: boolean;
    }
    export namespace CancelJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelJobRequest) => any;
    }
    export interface CancelJobResponse {
            /**
                * <p>The job ARN.</p>
                */
            jobArn?: string;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>A short text description of the job.</p>
                */
            description?: string;
    }
    export namespace CancelJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelJobResponse) => any;
    }
    export interface CancelJobExecutionRequest {
            /**
                * <p>The ID of the job to be canceled.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The name of the thing whose execution of the job will be canceled.</p>
                */
            thingName: string | undefined;
            /**
                * <p>(Optional) If <code>true</code> the job execution will be canceled if it has status
                *           IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status
                *           QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set
                *           <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code>
                *           will be thrown. The default is <code>false</code>.</p>
                *         <p>Canceling a job execution which is "IN_PROGRESS", will cause the device to be unable
                *           to update the job execution status.  Use caution and ensure that the device is able to
                *           recover to a valid state.</p>
                */
            force?: boolean;
            /**
                * <p>(Optional) The expected current version of the job execution. Each time you update the job
                *           execution, its version is incremented. If the version of the job execution stored in Jobs does
                *           not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that
                *           contains the current job execution status data is returned. (This makes it unnecessary to
                *           perform a separate DescribeJobExecution request in order to obtain the job execution status
                *           data.)</p>
                */
            expectedVersion?: number;
            /**
                * <p>A collection of name/value pairs that describe the status of the job execution. If not
                *           specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.</p>
                */
            statusDetails?: Record<string, string>;
    }
    export namespace CancelJobExecutionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelJobExecutionRequest) => any;
    }
    /**
        * <p>An attempt was made to change to an invalid state, for example by deleting a job or a
        *          job execution which is "IN_PROGRESS" without setting the <code>force</code>
        *          parameter.</p>
        */
    export class InvalidStateTransitionException extends __BaseException {
            readonly name: "InvalidStateTransitionException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidStateTransitionException, __BaseException>);
    }
    export interface ClearDefaultAuthorizerRequest {
    }
    export namespace ClearDefaultAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ClearDefaultAuthorizerRequest) => any;
    }
    export interface ClearDefaultAuthorizerResponse {
    }
    export namespace ClearDefaultAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ClearDefaultAuthorizerResponse) => any;
    }
    export interface ConfirmTopicRuleDestinationRequest {
            /**
                * <p>The token used to confirm ownership or access to the topic rule confirmation URL.</p>
                */
            confirmationToken: string | undefined;
    }
    export namespace ConfirmTopicRuleDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConfirmTopicRuleDestinationRequest) => any;
    }
    export interface ConfirmTopicRuleDestinationResponse {
    }
    export namespace ConfirmTopicRuleDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConfirmTopicRuleDestinationResponse) => any;
    }
    /**
        * <p>A conflicting resource update exception. This exception is thrown when two pending
        *          updates cause a conflict.</p>
        */
    export class ConflictingResourceUpdateException extends __BaseException {
            readonly name: "ConflictingResourceUpdateException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictingResourceUpdateException, __BaseException>);
    }
    /**
        * <p>An unexpected error has occurred.</p>
        */
    export class InternalException extends __BaseException {
            readonly name: "InternalException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalException, __BaseException>);
    }
    export interface CreateAuditSuppressionRequest {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName: string | undefined;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier: ResourceIdentifier | undefined;
            /**
                * <p>
                *       The epoch timestamp in seconds at which this suppression expires.
                *     </p>
                */
            expirationDate?: Date;
            /**
                * <p>
                *       Indicates whether a suppression should exist indefinitely or not.
                *     </p>
                */
            suppressIndefinitely?: boolean;
            /**
                * <p>
                *       The description of the audit suppression.
                *     </p>
                */
            description?: string;
            /**
                * <p>
                *       Each audit supression must have a unique client request token. If you try to create a new audit
                *       suppression with the same token as one that already exists, an exception occurs. If you omit this
                *       value, Amazon Web Services SDKs will automatically generate a unique client request.</p>
                */
            clientRequestToken?: string;
    }
    export namespace CreateAuditSuppressionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAuditSuppressionRequest) => any;
    }
    export interface CreateAuditSuppressionResponse {
    }
    export namespace CreateAuditSuppressionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAuditSuppressionResponse) => any;
    }
    /**
        * <p>The resource already exists.</p>
        */
    export class ResourceAlreadyExistsException extends __BaseException {
            readonly name: "ResourceAlreadyExistsException";
            readonly $fault: "client";
            /**
                * <p>The ID of the resource that caused the exception.</p>
                */
            resourceId?: string;
            /**
                * <p>The ARN of the resource that caused the exception.</p>
                */
            resourceArn?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>);
    }
    /**
        * <p>A set of key/value pairs that are used to manage the resource.</p>
        */
    export interface Tag {
            /**
                * <p>The tag's key.</p>
                */
            Key: string | undefined;
            /**
                * <p>The tag's value.</p>
                */
            Value?: string;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateAuthorizerRequest {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName: string | undefined;
            /**
                * <p>The ARN of the authorizer's Lambda function.</p>
                */
            authorizerFunctionArn: string | undefined;
            /**
                * <p>The name of the token key used to extract the token from the HTTP headers.</p>
                */
            tokenKeyName?: string;
            /**
                * <p>The public keys used to verify the digital signature returned by your custom
                *          authentication service.</p>
                */
            tokenSigningPublicKeys?: Record<string, string>;
            /**
                * <p>The status of the create authorizer request.</p>
                */
            status?: AuthorizerStatus | string;
            /**
                * <p>Metadata which can be used to manage the custom authorizer.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
            /**
                * <p>Specifies whether IoT validates the token signature in an authorization request.</p>
                */
            signingDisabled?: boolean;
            /**
                * <p>When <code>true</code>, the result from the authorizer’s Lambda function is
                * 	  cached for clients that use persistent HTTP connections. The results are cached for the time
                * 	  specified by the Lambda function in <code>refreshAfterInSeconds</code>. This value
                *      does not affect authorization of clients that use MQTT connections.</p>
                *          <p>The default value is <code>false</code>.</p>
                */
            enableCachingForHttp?: boolean;
    }
    export namespace CreateAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAuthorizerRequest) => any;
    }
    export interface CreateAuthorizerResponse {
            /**
                * <p>The authorizer's name.</p>
                */
            authorizerName?: string;
            /**
                * <p>The authorizer ARN.</p>
                */
            authorizerArn?: string;
    }
    export namespace CreateAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAuthorizerResponse) => any;
    }
    /**
        * <p>The properties of a billing group.</p>
        */
    export interface BillingGroupProperties {
            /**
                * <p>The description of the billing group.</p>
                */
            billingGroupDescription?: string;
    }
    export namespace BillingGroupProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BillingGroupProperties) => any;
    }
    export interface CreateBillingGroupRequest {
            /**
                * <p>The name you wish to give to the billing group.</p>
                */
            billingGroupName: string | undefined;
            /**
                * <p>The properties of the billing group.</p>
                */
            billingGroupProperties?: BillingGroupProperties;
            /**
                * <p>Metadata which can be used to manage the billing group.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBillingGroupRequest) => any;
    }
    export interface CreateBillingGroupResponse {
            /**
                * <p>The name you gave to the billing group.</p>
                */
            billingGroupName?: string;
            /**
                * <p>The ARN of the billing group.</p>
                */
            billingGroupArn?: string;
            /**
                * <p>The ID of the billing group.</p>
                */
            billingGroupId?: string;
    }
    export namespace CreateBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBillingGroupResponse) => any;
    }
    /**
        * <p>The input for the CreateCertificateFromCsr operation.</p>
        */
    export interface CreateCertificateFromCsrRequest {
            /**
                * <p>The certificate signing request (CSR).</p>
                */
            certificateSigningRequest: string | undefined;
            /**
                * <p>Specifies whether the certificate is active.</p>
                */
            setAsActive?: boolean;
    }
    export namespace CreateCertificateFromCsrRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCertificateFromCsrRequest) => any;
    }
    /**
        * <p>The output from the CreateCertificateFromCsr operation.</p>
        */
    export interface CreateCertificateFromCsrResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal
                *          for policy operations.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the certificate. Certificate management operations only take a
                *          certificateId.</p>
                */
            certificateId?: string;
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem?: string;
    }
    export namespace CreateCertificateFromCsrResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCertificateFromCsrResponse) => any;
    }
    export enum CustomMetricType {
            IP_ADDRESS_LIST = "ip-address-list",
            NUMBER = "number",
            NUMBER_LIST = "number-list",
            STRING_LIST = "string-list"
    }
    export interface CreateCustomMetricRequest {
            /**
                * <p> The name of the custom metric. This will be used in the metric report submitted from the
                *       device/thing. The name can't begin with <code>aws:</code>. You can't change the name after you
                *       define it.</p>
                */
            metricName: string | undefined;
            /**
                * <p> The friendly name in the console for the custom metric. This name doesn't have to be
                *       unique. Don't use this name as the metric identifier in the device metric report. You can
                *       update the friendly name after you define it.</p>
                */
            displayName?: string;
            /**
                * <p> The type of the custom metric. </p>
                *          <important>
                *             <p>The type <code>number</code> only takes a single metric value as an input, but when you
                *         submit the metrics value in the DeviceMetrics report, you must pass it as an array with a
                *         single value.</p>
                *          </important>
                */
            metricType: CustomMetricType | string | undefined;
            /**
                * <p>
                *       Metadata that can be used to manage the custom metric.
                *     </p>
                */
            tags?: Tag[];
            /**
                * <p>Each custom
                *       metric must have a unique client request token. If you try to create a new custom metric that
                *       already exists with a different token,
                *       an exception
                *       occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request. </p>
                */
            clientRequestToken?: string;
    }
    export namespace CreateCustomMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCustomMetricRequest) => any;
    }
    export interface CreateCustomMetricResponse {
            /**
                * <p>
                *       The name of the custom metric to be used in the metric report.
                *     </p>
                */
            metricName?: string;
            /**
                * <p> The Amazon Resource Number (ARN) of the custom metric. For example,
                *           <code>arn:<i>aws-partition</i>:iot:<i>region</i>:<i>accountId</i>:custommetric/<i>metricName</i>
                *             </code>
                *          </p>
                */
            metricArn?: string;
    }
    export namespace CreateCustomMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCustomMetricResponse) => any;
    }
    export enum DimensionType {
            TOPIC_FILTER = "TOPIC_FILTER"
    }
    export interface CreateDimensionRequest {
            /**
                * <p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>
                */
            name: string | undefined;
            /**
                * <p>Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code>
                *          </p>
                */
            type: DimensionType | string | undefined;
            /**
                * <p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</p>
                */
            stringValues: string[] | undefined;
            /**
                * <p>Metadata that can be used to manage the dimension.</p>
                */
            tags?: Tag[];
            /**
                * <p>Each dimension must have a unique client request token. If you try to create a new dimension with the same token as a dimension that already exists, an exception occurs.
                *       If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.</p>
                */
            clientRequestToken?: string;
    }
    export namespace CreateDimensionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDimensionRequest) => any;
    }
    export interface CreateDimensionResponse {
            /**
                * <p>A unique identifier for the dimension.</p>
                */
            name?: string;
            /**
                * <p>The Amazon Resource Name
                *       (ARN)
                *       of
                *       the created dimension.</p>
                */
            arn?: string;
    }
    export namespace CreateDimensionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDimensionResponse) => any;
    }
    /**
        * <p>The certificate is invalid.</p>
        */
    export class CertificateValidationException extends __BaseException {
            readonly name: "CertificateValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CertificateValidationException, __BaseException>);
    }
    export enum ServiceType {
            CREDENTIAL_PROVIDER = "CREDENTIAL_PROVIDER",
            DATA = "DATA",
            JOBS = "JOBS"
    }
    export interface CreateDomainConfigurationRequest {
            /**
                * <p>The name of the domain configuration. This value must be unique to a region.</p>
                */
            domainConfigurationName: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            domainName?: string;
            /**
                * <p>The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN.
                *       This value is not required for Amazon Web Services-managed domains.</p>
                */
            serverCertificateArns?: string[];
            /**
                * <p>The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority.
                *          This value is not required for Amazon Web Services-managed domains.</p>
                */
            validationCertificateArn?: string;
            /**
                * <p>An object that specifies the authorization service for a domain.</p>
                */
            authorizerConfig?: AuthorizerConfig;
            /**
                * <p>The type of service delivered by the endpoint.</p>
                *          <note>
                *             <p>Amazon Web Services IoT Core currently supports only the <code>DATA</code> service type.</p>
                *          </note>
                */
            serviceType?: ServiceType | string;
            /**
                * <p>Metadata which can be used to manage the domain configuration.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
    }
    export namespace CreateDomainConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDomainConfigurationRequest) => any;
    }
    export interface CreateDomainConfigurationResponse {
            /**
                * <p>The name of the domain configuration.</p>
                */
            domainConfigurationName?: string;
            /**
                * <p>The ARN of the domain configuration.</p>
                */
            domainConfigurationArn?: string;
    }
    export namespace CreateDomainConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDomainConfigurationResponse) => any;
    }
    /**
        * <p>Thing group properties.</p>
        */
    export interface ThingGroupProperties {
            /**
                * <p>The thing group description.</p>
                */
            thingGroupDescription?: string;
            /**
                * <p>The thing group attributes in JSON format.</p>
                */
            attributePayload?: AttributePayload;
    }
    export namespace ThingGroupProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingGroupProperties) => any;
    }
    export interface CreateDynamicThingGroupRequest {
            /**
                * <p>The dynamic thing group name to create.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The dynamic thing group properties.</p>
                */
            thingGroupProperties?: ThingGroupProperties;
            /**
                * <p>The dynamic thing group index name.</p>
                * 		       <note>
                * 			         <p>Currently one index is supported: <code>AWS_Things</code>.</p>
                * 		       </note>
                */
            indexName?: string;
            /**
                * <p>The dynamic thing group search query string.</p>
                * 		       <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The dynamic thing group query version.</p>
                * 		       <note>
                * 			         <p>Currently one query version is supported: "2017-09-30". If not specified, the
                * 				query version defaults to this value.</p>
                * 		       </note>
                */
            queryVersion?: string;
            /**
                * <p>Metadata which can be used to manage the dynamic thing group.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateDynamicThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDynamicThingGroupRequest) => any;
    }
    export interface CreateDynamicThingGroupResponse {
            /**
                * <p>The dynamic thing group name.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The dynamic thing group ARN.</p>
                */
            thingGroupArn?: string;
            /**
                * <p>The dynamic thing group ID.</p>
                */
            thingGroupId?: string;
            /**
                * <p>The dynamic thing group index name.</p>
                */
            indexName?: string;
            /**
                * <p>The dynamic thing group search query string.</p>
                */
            queryString?: string;
            /**
                * <p>The dynamic thing group query version.</p>
                */
            queryVersion?: string;
    }
    export namespace CreateDynamicThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDynamicThingGroupResponse) => any;
    }
    /**
        * <p>The query is invalid.</p>
        */
    export class InvalidQueryException extends __BaseException {
            readonly name: "InvalidQueryException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidQueryException, __BaseException>);
    }
    export enum FleetMetricUnit {
            Bits = "Bits",
            BitsSecond = "Bits/Second",
            Bytes = "Bytes",
            BytesSecond = "Bytes/Second",
            Count = "Count",
            CountSecond = "Count/Second",
            Gigabits = "Gigabits",
            GigabitsSecond = "Gigabits/Second",
            Gigabytes = "Gigabytes",
            GigabytesSecond = "Gigabytes/Second",
            Kilobits = "Kilobits",
            KilobitsSecond = "Kilobits/Second",
            Kilobytes = "Kilobytes",
            KilobytesSecond = "Kilobytes/Second",
            Megabits = "Megabits",
            MegabitsSecond = "Megabits/Second",
            Megabytes = "Megabytes",
            MegabytesSecond = "Megabytes/Second",
            Microseconds = "Microseconds",
            Milliseconds = "Milliseconds",
            None = "None",
            Percent = "Percent",
            Seconds = "Seconds",
            Terabits = "Terabits",
            TerabitsSecond = "Terabits/Second",
            Terabytes = "Terabytes",
            TerabytesSecond = "Terabytes/Second"
    }
    export interface CreateFleetMetricRequest {
            /**
                * <p>The name of the fleet metric to create.</p>
                */
            metricName: string | undefined;
            /**
                * <p>The search query string.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The type of the aggregation query.</p>
                */
            aggregationType: AggregationType | undefined;
            /**
                * <p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>
                */
            period: number | undefined;
            /**
                * <p>The field to aggregate.</p>
                */
            aggregationField: string | undefined;
            /**
                * <p>The fleet metric description.</p>
                */
            description?: string;
            /**
                * <p>The query version.</p>
                */
            queryVersion?: string;
            /**
                * <p>The name of the index to search.</p>
                */
            indexName?: string;
            /**
                * <p>Used to support unit transformation such as milliseconds to seconds. The unit must be
                *       supported by <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>. Default to null.</p>
                */
            unit?: FleetMetricUnit | string;
            /**
                * <p>Metadata, which can be used to manage the fleet metric.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateFleetMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFleetMetricRequest) => any;
    }
    export interface CreateFleetMetricResponse {
            /**
                * <p>The name of the fleet metric to create.</p>
                */
            metricName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the new fleet metric.</p>
                */
            metricArn?: string;
    }
    export namespace CreateFleetMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFleetMetricResponse) => any;
    }
    /**
        * <p>The index is not ready.</p>
        */
    export class IndexNotReadyException extends __BaseException {
            readonly name: "IndexNotReadyException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<IndexNotReadyException, __BaseException>);
    }
    /**
        * <p>The aggregation is invalid.</p>
        */
    export class InvalidAggregationException extends __BaseException {
            readonly name: "InvalidAggregationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidAggregationException, __BaseException>);
    }
    export enum RetryableFailureType {
            ALL = "ALL",
            FAILED = "FAILED",
            TIMED_OUT = "TIMED_OUT"
    }
    /**
        * <p>The criteria that determines how many retries are allowed for each failure
        *             type for a job.</p>
        */
    export interface RetryCriteria {
            /**
                * <p>The type of job execution failures that can initiate a job retry.</p>
                */
            failureType: RetryableFailureType | string | undefined;
            /**
                * <p>The number of retries allowed for a failure type for the job.</p>
                */
            numberOfRetries: number | undefined;
    }
    export namespace RetryCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RetryCriteria) => any;
    }
    /**
        * <p>The configuration that determines how many retries are allowed for each failure
        *             type for a job.</p>
        */
    export interface JobExecutionsRetryConfig {
            /**
                * <p>The list of criteria that determines how many retries are allowed for each failure
                *             type for a job.</p>
                */
            criteriaList: RetryCriteria[] | undefined;
    }
    export namespace JobExecutionsRetryConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionsRetryConfig) => any;
    }
    /**
        * <p>Allows you to define a criteria to initiate the increase in rate of rollout for a job.</p>
        */
    export interface RateIncreaseCriteria {
            /**
                * <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
                */
            numberOfNotifiedThings?: number;
            /**
                * <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
                */
            numberOfSucceededThings?: number;
    }
    export namespace RateIncreaseCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RateIncreaseCriteria) => any;
    }
    /**
        * <p>Allows you to create an exponential rate of rollout for a job.</p>
        */
    export interface ExponentialRolloutRate {
            /**
                * <p>The minimum number of things that will be notified of a pending job, per minute at the start of job rollout.
                *             This parameter allows you to define the initial rate of rollout.</p>
                */
            baseRatePerMinute: number | undefined;
            /**
                * <p>The exponential factor to increase the rate of rollout for a job.</p>
                *         <p>Amazon Web Services IoT Core supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>
                */
            incrementFactor: number | undefined;
            /**
                * <p>The criteria to initiate the increase in rate of rollout for a job.</p>
                */
            rateIncreaseCriteria: RateIncreaseCriteria | undefined;
    }
    export namespace ExponentialRolloutRate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExponentialRolloutRate) => any;
    }
    /**
        * <p>Allows you to create a staged rollout of a job.</p>
        */
    export interface JobExecutionsRolloutConfig {
            /**
                * <p>The maximum number of things that will be notified of a pending job, per minute.
                *         This parameter allows you to create a staged rollout.</p>
                */
            maximumPerMinute?: number;
            /**
                * <p>The rate of increase for a job rollout.
                *             This parameter allows you to define an exponential rate for a job rollout.</p>
                */
            exponentialRate?: ExponentialRolloutRate;
    }
    export namespace JobExecutionsRolloutConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionsRolloutConfig) => any;
    }
    /**
        * <p>Configuration for pre-signed S3 URLs.</p>
        */
    export interface PresignedUrlConfig {
            /**
                * <p>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job
                *             data/updates are stored. The role must also grant permission for IoT to download the files.</p>
                *         <important>
                *             <p>For information about addressing the confused deputy problem, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html">cross-service
                *                 confused deputy prevention</a> in the <i>Amazon Web Services IoT Core developer guide</i>.</p>
                *         </important>
                */
            roleArn?: string;
            /**
                * <p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600
                *             seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</p>
                */
            expiresInSec?: number;
    }
    export namespace PresignedUrlConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PresignedUrlConfig) => any;
    }
    export enum TargetSelection {
            CONTINUOUS = "CONTINUOUS",
            SNAPSHOT = "SNAPSHOT"
    }
    /**
        * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer
        *            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
        *            execution status is not set to another terminal state before the timer expires, it will
        *            be automatically set to <code>TIMED_OUT</code>.</p>
        */
    export interface TimeoutConfig {
            /**
                * <p>Specifies the amount of time, in minutes, this device has to finish execution of this job.
                *            The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The
                *            in progress timer can't be updated and will apply to all job executions for the job. Whenever a job
                *            execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail
                *            and switch to the terminal <code>TIMED_OUT</code> status.</p>
                */
            inProgressTimeoutInMinutes?: number;
    }
    export namespace TimeoutConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimeoutConfig) => any;
    }
    export interface CreateJobRequest {
            /**
                * <p>A job identifier which must be unique for your Amazon Web Services account. We recommend using a UUID. Alpha-numeric
                *             characters, "-" and "_" are valid for use here.</p>
                */
            jobId: string | undefined;
            /**
                * <p>A list of things and thing groups to which the job should be sent.</p>
                */
            targets: string[] | undefined;
            /**
                * <p>An S3 link to the job document. Required if you don't specify a value for <code>document</code>.</p>
                *         <note>
                *             <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p>
                *             <p>The placeholder link is of the following form:</p>
                *             <p>
                *                <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code>
                *             </p>
                *             <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p>
                *         </note>
                */
            documentSource?: string;
            /**
                * <p>The job document. Required if you don't specify a value for <code>documentSource</code>.</p>
                */
            document?: string;
            /**
                * <p>A short text description of the job.</p>
                */
            description?: string;
            /**
                * <p>Configuration information for pre-signed S3 URLs.</p>
                */
            presignedUrlConfig?: PresignedUrlConfig;
            /**
                * <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things
                *             specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing
                *             when a change is detected in a target. For example, a job will run on a thing when the thing is added to a
                *             target group, even after the job was completed by all things originally in the group.</p>
                *         <note>
                *             <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets.
                *                 By using continuous jobs, devices that join the group receive the job execution even after the job has
                *                 been created.</p>
                *         </note>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>Allows you to create a staged rollout of the job.</p>
                */
            jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
            /**
                * <p>Allows you to create the criteria to abort a job.</p>
                */
            abortConfig?: AbortConfig;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job. The timer
                *            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
                *            execution status is not set to another terminal state before the time expires, it will be
                *            automatically set to <code>TIMED_OUT</code>.</p>
                */
            timeoutConfig?: TimeoutConfig;
            /**
                * <p>Metadata which can be used to manage the job.</p>
                */
            tags?: Tag[];
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
            /**
                * <p>The ARN of the job template used to create the job.</p>
                */
            jobTemplateArn?: string;
            /**
                * <p>Allows you to create the criteria to retry a job.</p>
                */
            jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
            /**
                * <p>Parameters of an Amazon Web Services managed template that you can specify to create the job document.</p>
                *         <note>
                *             <p>
                *                <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services
                *                 managed templates. This parameter can't be used with custom job templates or to
                *                 create jobs from them.</p>
                *         </note>
                */
            documentParameters?: Record<string, string>;
    }
    export namespace CreateJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobRequest) => any;
    }
    export interface CreateJobResponse {
            /**
                * <p>The job ARN.</p>
                */
            jobArn?: string;
            /**
                * <p>The unique identifier you assigned to this job.</p>
                */
            jobId?: string;
            /**
                * <p>The job description.</p>
                */
            description?: string;
    }
    export namespace CreateJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobResponse) => any;
    }
    /**
        * <p>A resource with the same name already exists.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export interface CreateJobTemplateRequest {
            /**
                * <p>A unique identifier for the job template. We recommend using a UUID. Alpha-numeric
                *         characters, "-", and "_" are valid for use here.</p>
                */
            jobTemplateId: string | undefined;
            /**
                * <p>The ARN of the job to use as the basis for the job template.</p>
                */
            jobArn?: string;
            /**
                * <p>An S3 link to the job document to use in the template. Required if you don't specify a value for <code>document</code>.</p>
                *         <note>
                *             <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p>
                *             <p>The placeholder link is of the following form:</p>
                *             <p>
                *                <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code>
                *             </p>
                *             <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p>
                *         </note>
                */
            documentSource?: string;
            /**
                * <p>The job document. Required if you don't specify a value for <code>documentSource</code>.</p>
                */
            document?: string;
            /**
                * <p>A description of the job document.</p>
                */
            description: string | undefined;
            /**
                * <p>Configuration for pre-signed S3 URLs.</p>
                */
            presignedUrlConfig?: PresignedUrlConfig;
            /**
                * <p>Allows you to create a staged rollout of a job.</p>
                */
            jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
            /**
                * <p>The criteria that determine when and how a job abort takes place.</p>
                */
            abortConfig?: AbortConfig;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer
                *            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
                *            execution status is not set to another terminal state before the timer expires, it will
                *            be automatically set to <code>TIMED_OUT</code>.</p>
                */
            timeoutConfig?: TimeoutConfig;
            /**
                * <p>Metadata that can be used to manage the job template.</p>
                */
            tags?: Tag[];
            /**
                * <p>Allows you to create the criteria to retry a job.</p>
                */
            jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
    }
    export namespace CreateJobTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobTemplateRequest) => any;
    }
    export interface CreateJobTemplateResponse {
            /**
                * <p>The ARN of the job template.</p>
                */
            jobTemplateArn?: string;
            /**
                * <p>The unique identifier of the job template.</p>
                */
            jobTemplateId?: string;
    }
    export namespace CreateJobTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobTemplateResponse) => any;
    }
    /**
        * <p>The input for the CreateKeysAndCertificate operation.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateKeysAndCertificateRequest</a> action.</p>
        */
    export interface CreateKeysAndCertificateRequest {
            /**
                * <p>Specifies whether the certificate is active.</p>
                */
            setAsActive?: boolean;
    }
    export namespace CreateKeysAndCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateKeysAndCertificateRequest) => any;
    }
    /**
        * <p>Describes a key pair.</p>
        */
    export interface KeyPair {
            /**
                * <p>The public key.</p>
                */
            PublicKey?: string;
            /**
                * <p>The private key.</p>
                */
            PrivateKey?: string;
    }
    export namespace KeyPair {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KeyPair) => any;
    }
    /**
        * <p>The output of the CreateKeysAndCertificate operation.</p>
        */
    export interface CreateKeysAndCertificateResponse {
            /**
                * <p>The ARN of the certificate.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the certificate. IoT issues a default subject name for the certificate
                *          (for example, IoT Certificate).</p>
                */
            certificateId?: string;
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem?: string;
            /**
                * <p>The generated key pair.</p>
                */
            keyPair?: KeyPair;
    }
    export namespace CreateKeysAndCertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateKeysAndCertificateResponse) => any;
    }
    export enum LogLevel {
            DEBUG = "DEBUG",
            DISABLED = "DISABLED",
            ERROR = "ERROR",
            INFO = "INFO",
            WARN = "WARN"
    }
    /**
        * <p>Parameters used when defining a mitigation action that enable Amazon Web Services IoT Core logging.</p>
        */
    export interface EnableIoTLoggingParams {
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM role used for logging.</p>
                */
            roleArnForLogging: string | undefined;
            /**
                * <p>Specifies the type of information to be logged.</p>
                */
            logLevel: LogLevel | string | undefined;
    }
    export namespace EnableIoTLoggingParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableIoTLoggingParams) => any;
    }
    /**
        * <p>Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.</p>
        */
    export interface PublishFindingToSnsParams {
            /**
                * <p>The ARN of the topic to which you want to publish the findings.</p>
                */
            topicArn: string | undefined;
    }
    export namespace PublishFindingToSnsParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishFindingToSnsParams) => any;
    }
    export enum PolicyTemplateName {
            BLANK_POLICY = "BLANK_POLICY"
    }
    /**
        * <p>Parameters to define a mitigation action that adds a blank policy to restrict permissions.</p>
        */
    export interface ReplaceDefaultPolicyVersionParams {
            /**
                * <p>The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.</p>
                */
            templateName: PolicyTemplateName | string | undefined;
    }
    export namespace ReplaceDefaultPolicyVersionParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReplaceDefaultPolicyVersionParams) => any;
    }
    export enum CACertificateUpdateAction {
            DEACTIVATE = "DEACTIVATE"
    }
    /**
        * <p>Parameters to define a mitigation action that changes the state of the CA certificate to inactive.</p>
        */
    export interface UpdateCACertificateParams {
            /**
                * <p>The action that you want to apply to the CA certificate. The only supported value is <code>DEACTIVATE</code>.</p>
                */
            action: CACertificateUpdateAction | string | undefined;
    }
    export namespace UpdateCACertificateParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCACertificateParams) => any;
    }
    export enum DeviceCertificateUpdateAction {
            DEACTIVATE = "DEACTIVATE"
    }
    /**
        * <p>Parameters to define a mitigation action that changes the state of the device certificate to inactive.</p>
        */
    export interface UpdateDeviceCertificateParams {
            /**
                * <p>The action that you want to apply to the device certificate. The only supported value is <code>DEACTIVATE</code>.</p>
                */
            action: DeviceCertificateUpdateAction | string | undefined;
    }
    export namespace UpdateDeviceCertificateParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDeviceCertificateParams) => any;
    }
    /**
        * <p>The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).</p>
        */
    export interface MitigationActionParams {
            /**
                * <p>Parameters to define a mitigation action that changes the state of the device certificate to inactive.</p>
                */
            updateDeviceCertificateParams?: UpdateDeviceCertificateParams;
            /**
                * <p>Parameters to define a mitigation action that changes the state of the CA certificate to inactive.</p>
                */
            updateCACertificateParams?: UpdateCACertificateParams;
            /**
                * <p>Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.</p>
                */
            addThingsToThingGroupParams?: AddThingsToThingGroupParams;
            /**
                * <p>Parameters to define a mitigation action that adds a blank policy to restrict permissions.</p>
                */
            replaceDefaultPolicyVersionParams?: ReplaceDefaultPolicyVersionParams;
            /**
                * <p>Parameters to define a mitigation action that enables Amazon Web Services IoT Core logging at a specified level of detail.</p>
                */
            enableIoTLoggingParams?: EnableIoTLoggingParams;
            /**
                * <p>Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.</p>
                */
            publishFindingToSnsParams?: PublishFindingToSnsParams;
    }
    export namespace MitigationActionParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MitigationActionParams) => any;
    }
    export interface CreateMitigationActionRequest {
            /**
                * <p>A friendly name for the action. Choose a friendly name that accurately describes the action (for example, <code>EnableLoggingAction</code>).</p>
                */
            actionName: string | undefined;
            /**
                * <p>The ARN of the IAM role that is used to apply the mitigation action.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>Defines the type of action and the parameters for that action.</p>
                */
            actionParams: MitigationActionParams | undefined;
            /**
                * <p>Metadata that can be used to manage the mitigation action.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateMitigationActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMitigationActionRequest) => any;
    }
    export interface CreateMitigationActionResponse {
            /**
                * <p>The ARN for the new mitigation action.</p>
                */
            actionArn?: string;
            /**
                * <p>A unique identifier for the new mitigation action.</p>
                */
            actionId?: string;
    }
    export namespace CreateMitigationActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMitigationActionResponse) => any;
    }
    export enum AwsJobAbortCriteriaAbortAction {
            CANCEL = "CANCEL"
    }
    export enum AwsJobAbortCriteriaFailureType {
            ALL = "ALL",
            FAILED = "FAILED",
            REJECTED = "REJECTED",
            TIMED_OUT = "TIMED_OUT"
    }
    /**
        * <p>The criteria that determine when and how a job abort takes place.</p>
        */
    export interface AwsJobAbortCriteria {
            /**
                * <p>The type of job execution failures that can initiate a job abort.</p>
                */
            failureType: AwsJobAbortCriteriaFailureType | string | undefined;
            /**
                * <p>The type of job action to take to initiate the job abort.</p>
                */
            action: AwsJobAbortCriteriaAbortAction | string | undefined;
            /**
                * <p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p>
                *          <p>Amazon Web Services IoT Core supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>
                */
            thresholdPercentage: number | undefined;
            /**
                * <p>The minimum number of things which must receive job execution notifications before the job
                *           can be aborted.</p>
                */
            minNumberOfExecutedThings: number | undefined;
    }
    export namespace AwsJobAbortCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobAbortCriteria) => any;
    }
    /**
        * <p>The criteria that determine when and how a job abort takes place.</p>
        */
    export interface AwsJobAbortConfig {
            /**
                * <p>The list of criteria that determine when and how to abort the job.</p>
                */
            abortCriteriaList: AwsJobAbortCriteria[] | undefined;
    }
    export namespace AwsJobAbortConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobAbortConfig) => any;
    }
    /**
        * <p>The criteria to initiate the increase in rate of rollout for a job.</p>
        */
    export interface AwsJobRateIncreaseCriteria {
            /**
                * <p>When this number of things have been notified, it will initiate an increase in the rollout
                *             rate.</p>
                */
            numberOfNotifiedThings?: number;
            /**
                * <p>When this number of things have succeeded in their job execution, it will initiate an
                *             increase in the rollout rate.</p>
                */
            numberOfSucceededThings?: number;
    }
    export namespace AwsJobRateIncreaseCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobRateIncreaseCriteria) => any;
    }
    /**
        * <p>The rate of increase for a job rollout. This parameter allows you to define an exponential rate
        *             increase for a job rollout.</p>
        */
    export interface AwsJobExponentialRolloutRate {
            /**
                * <p>The minimum number of things that will be notified of a pending job, per minute, at the start
                *             of the job rollout. This is the initial rate of the rollout.</p>
                */
            baseRatePerMinute: number | undefined;
            /**
                * <p>The rate of increase for a job rollout. The number of things notified is multiplied by this
                *             factor.</p>
                */
            incrementFactor: number | undefined;
            /**
                * <p>The criteria to initiate the increase in rate of rollout for a job.</p>
                *         <p>Amazon Web Services IoT Core supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>
                */
            rateIncreaseCriteria: AwsJobRateIncreaseCriteria | undefined;
    }
    export namespace AwsJobExponentialRolloutRate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobExponentialRolloutRate) => any;
    }
    /**
        * <p>Configuration for the rollout of OTA updates.</p>
        */
    export interface AwsJobExecutionsRolloutConfig {
            /**
                * <p>The maximum number of OTA update job executions started per minute.</p>
                */
            maximumPerMinute?: number;
            /**
                * <p>The rate of increase for a job rollout. This parameter allows you to define an exponential rate
                *             increase for a job rollout.</p>
                */
            exponentialRate?: AwsJobExponentialRolloutRate;
    }
    export namespace AwsJobExecutionsRolloutConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobExecutionsRolloutConfig) => any;
    }
    /**
        * <p>Configuration information for pre-signed URLs. Valid when <code>protocols</code>
        *            contains HTTP.</p>
        */
    export interface AwsJobPresignedUrlConfig {
            /**
                * <p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800
                *             seconds. Pre-signed URLs are generated when a request for the job document is received.</p>
                */
            expiresInSec?: number;
    }
    export namespace AwsJobPresignedUrlConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobPresignedUrlConfig) => any;
    }
    /**
        * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer is
        *             started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution
        *             status is not set to another terminal state before the timer expires, it will be automatically
        *             set to <code>TIMED_OUT</code>.</p>
        */
    export interface AwsJobTimeoutConfig {
            /**
                * <p>Specifies the amount of time, in minutes, this device has to finish execution of this job. The
                *             timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress
                *             timer can't be updated and will apply to all job executions for the job. Whenever a job execution
                *             remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and
                *             switch to the terminal <code>TIMED_OUT</code> status.</p>
                */
            inProgressTimeoutInMinutes?: number;
    }
    export namespace AwsJobTimeoutConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsJobTimeoutConfig) => any;
    }
    /**
        * <p>Describes the certificate chain being used when code signing a file.</p>
        */
    export interface CodeSigningCertificateChain {
            /**
                * <p>The name of the certificate.</p>
                */
            certificateName?: string;
            /**
                * <p>A base64 encoded binary representation of the code signing certificate chain.</p>
                */
            inlineDocument?: string;
    }
    export namespace CodeSigningCertificateChain {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeSigningCertificateChain) => any;
    }
    /**
        * <p>Describes the signature for a file.</p>
        */
    export interface CodeSigningSignature {
            /**
                * <p>A base64 encoded binary representation of the code signing signature.</p>
                */
            inlineDocument?: Uint8Array;
    }
    export namespace CodeSigningSignature {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeSigningSignature) => any;
    }
    /**
        * <p>Describes a custom method used to code sign a file.</p>
        */
    export interface CustomCodeSigning {
            /**
                * <p>The signature for the file.</p>
                */
            signature?: CodeSigningSignature;
            /**
                * <p>The certificate chain.</p>
                */
            certificateChain?: CodeSigningCertificateChain;
            /**
                * <p>The hash algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>SHA256</code> or <code>SHA1</code>, so you can pass either of them based on which was used for generating the signature.</p>
                */
            hashAlgorithm?: string;
            /**
                * <p>The signature algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>ECDSA</code> or <code>RSA</code>, so you can pass either of them based on which was used for generating the signature.</p>
                */
            signatureAlgorithm?: string;
    }
    export namespace CustomCodeSigning {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CustomCodeSigning) => any;
    }
    /**
        * <p>Describes the location of updated firmware in S3.</p>
        */
    export interface S3Destination {
            /**
                * <p>The S3 bucket that contains the updated firmware.</p>
                */
            bucket?: string;
            /**
                * <p>The S3 prefix.</p>
                */
            prefix?: string;
    }
    export namespace S3Destination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Destination) => any;
    }
    /**
        * <p>Describes the location of the updated firmware.</p>
        */
    export interface Destination {
            /**
                * <p>Describes the location in S3 of the updated firmware.</p>
                */
            s3Destination?: S3Destination;
    }
    export namespace Destination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Destination) => any;
    }
    /**
        * <p>Describes the code-signing profile.</p>
        */
    export interface SigningProfileParameter {
            /**
                * <p>Certificate ARN.</p>
                */
            certificateArn?: string;
            /**
                * <p>The hardware platform of your device.</p>
                */
            platform?: string;
            /**
                * <p>The location of the code-signing certificate on your device.</p>
                */
            certificatePathOnDevice?: string;
    }
    export namespace SigningProfileParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SigningProfileParameter) => any;
    }
    /**
        * <p>Information required to start a signing job.</p>
        */
    export interface StartSigningJobParameter {
            /**
                * <p>Describes the code-signing profile.</p>
                */
            signingProfileParameter?: SigningProfileParameter;
            /**
                * <p>The code-signing profile name.</p>
                */
            signingProfileName?: string;
            /**
                * <p>The location to write the code-signed file.</p>
                */
            destination?: Destination;
    }
    export namespace StartSigningJobParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartSigningJobParameter) => any;
    }
    /**
        * <p>Describes the method to use when code signing a file.</p>
        */
    export interface CodeSigning {
            /**
                * <p>The ID of the <code>AWSSignerJob</code> which was created to sign the file.</p>
                */
            awsSignerJobId?: string;
            /**
                * <p>Describes the code-signing job.</p>
                */
            startSigningJobParameter?: StartSigningJobParameter;
            /**
                * <p>A custom method for code signing a file.</p>
                */
            customCodeSigning?: CustomCodeSigning;
    }
    export namespace CodeSigning {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CodeSigning) => any;
    }
    /**
        * <p>The S3 location.</p>
        */
    export interface S3Location {
            /**
                * <p>The S3 bucket.</p>
                */
            bucket?: string;
            /**
                * <p>The S3 key.</p>
                */
            key?: string;
            /**
                * <p>The S3 bucket version.</p>
                */
            version?: string;
    }
    export namespace S3Location {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Location) => any;
    }
    /**
        * <p>Describes a group of files that can be streamed.</p>
        */
    export interface _Stream {
            /**
                * <p>The stream ID.</p>
                */
            streamId?: string;
            /**
                * <p>The ID of a file associated with a stream.</p>
                */
            fileId?: number;
    }
    export namespace _Stream {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: _Stream) => any;
    }
    /**
        * <p>The location of the OTA update.</p>
        */
    export interface FileLocation {
            /**
                * <p>The stream that contains the OTA update.</p>
                */
            stream?: _Stream;
            /**
                * <p>The location of the updated firmware in S3.</p>
                */
            s3Location?: S3Location;
    }
    export namespace FileLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FileLocation) => any;
    }
    /**
        * <p>Describes a file to be associated with an OTA update.</p>
        */
    export interface OTAUpdateFile {
            /**
                * <p>The name of the file.</p>
                */
            fileName?: string;
            /**
                * <p>An integer value you can include in the job document to allow your devices to identify the type of file received
                *             from the cloud.</p>
                */
            fileType?: number;
            /**
                * <p>The file version.</p>
                */
            fileVersion?: string;
            /**
                * <p>The location of the updated firmware.</p>
                */
            fileLocation?: FileLocation;
            /**
                * <p>The code signing method of the file.</p>
                */
            codeSigning?: CodeSigning;
            /**
                * <p>A list of name/attribute pairs.</p>
                */
            attributes?: Record<string, string>;
    }
    export namespace OTAUpdateFile {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OTAUpdateFile) => any;
    }
    export enum Protocol {
            HTTP = "HTTP",
            MQTT = "MQTT"
    }
    export interface CreateOTAUpdateRequest {
            /**
                * <p>The ID of the OTA update to be created.</p>
                */
            otaUpdateId: string | undefined;
            /**
                * <p>The description of the OTA update.</p>
                */
            description?: string;
            /**
                * <p>The devices targeted to receive OTA updates.</p>
                */
            targets: string[] | undefined;
            /**
                * <p>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both
                *            HTTP and MQTT are specified, the target device can choose the protocol.</p>
                */
            protocols?: (Protocol | string)[];
            /**
                * <p>Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things
                *             specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a
                *             thing when a change is detected in a target. For example, an update will run on a thing when the thing is
                *             added to a target group, even after the update was completed by all things originally in the group. Valid
                *             values: CONTINUOUS | SNAPSHOT.</p>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>Configuration for the rollout of OTA updates.</p>
                */
            awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
            /**
                * <p>Configuration information for pre-signed URLs.</p>
                */
            awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
            /**
                * <p>The criteria that determine when and how a job abort takes place.</p>
                */
            awsJobAbortConfig?: AwsJobAbortConfig;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer is
                *             started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution
                *             status is not set to another terminal state before the timer expires, it will be automatically
                *             set to <code>TIMED_OUT</code>.</p>
                */
            awsJobTimeoutConfig?: AwsJobTimeoutConfig;
            /**
                * <p>The files to be streamed by the OTA update.</p>
                */
            files: OTAUpdateFile[] | undefined;
            /**
                * <p>The IAM role that grants Amazon Web Services IoT Core access to the Amazon S3, IoT jobs and Amazon Web Services Code Signing resources
                *             to create an OTA update job.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>A list of additional OTA update parameters which are name-value pairs.</p>
                */
            additionalParameters?: Record<string, string>;
            /**
                * <p>Metadata which can be used to manage updates.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateOTAUpdateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOTAUpdateRequest) => any;
    }
    export enum OTAUpdateStatus {
            CREATE_COMPLETE = "CREATE_COMPLETE",
            CREATE_FAILED = "CREATE_FAILED",
            CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
            CREATE_PENDING = "CREATE_PENDING"
    }
    export interface CreateOTAUpdateResponse {
            /**
                * <p>The OTA update ID.</p>
                */
            otaUpdateId?: string;
            /**
                * <p>The IoT job ID associated with the OTA update.</p>
                */
            awsIotJobId?: string;
            /**
                * <p>The OTA update ARN.</p>
                */
            otaUpdateArn?: string;
            /**
                * <p>The IoT job ARN associated with the OTA update.</p>
                */
            awsIotJobArn?: string;
            /**
                * <p>The OTA update status.</p>
                */
            otaUpdateStatus?: OTAUpdateStatus | string;
    }
    export namespace CreateOTAUpdateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOTAUpdateResponse) => any;
    }
    /**
        * <p>The input for the CreatePolicy operation.</p>
        */
    export interface CreatePolicyRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of
                *          2048, excluding whitespace.</p>
                */
            policyDocument: string | undefined;
            /**
                * <p>Metadata which can be used to manage the policy.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
    }
    export namespace CreatePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyRequest) => any;
    }
    /**
        * <p>The output from the CreatePolicy operation.</p>
        */
    export interface CreatePolicyResponse {
            /**
                * <p>The policy name.</p>
                */
            policyName?: string;
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
            /**
                * <p>The JSON document that describes the policy.</p>
                */
            policyDocument?: string;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId?: string;
    }
    export namespace CreatePolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyResponse) => any;
    }
    /**
        * <p>The policy documentation is not valid.</p>
        */
    export class MalformedPolicyException extends __BaseException {
            readonly name: "MalformedPolicyException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MalformedPolicyException, __BaseException>);
    }
    /**
        * <p>The input for the CreatePolicyVersion operation.</p>
        */
    export interface CreatePolicyVersionRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The JSON document that describes the policy. Minimum length of 1. Maximum length of
                *          2048, excluding whitespace.</p>
                */
            policyDocument: string | undefined;
            /**
                * <p>Specifies whether the policy version is set as the default. When this parameter is
                *          true, the new policy version becomes the operative version (that is, the version that is in
                *          effect for the certificates to which the policy is attached).</p>
                */
            setAsDefault?: boolean;
    }
    export namespace CreatePolicyVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyVersionRequest) => any;
    }
    /**
        * <p>The output of the CreatePolicyVersion operation.</p>
        */
    export interface CreatePolicyVersionResponse {
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
            /**
                * <p>The JSON document that describes the policy.</p>
                */
            policyDocument?: string;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId?: string;
            /**
                * <p>Specifies whether the policy version is the default.</p>
                */
            isDefaultVersion?: boolean;
    }
    export namespace CreatePolicyVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyVersionResponse) => any;
    }
    /**
        * <p>The number of policy versions exceeds the limit.</p>
        */
    export class VersionsLimitExceededException extends __BaseException {
            readonly name: "VersionsLimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<VersionsLimitExceededException, __BaseException>);
    }
    export interface CreateProvisioningClaimRequest {
            /**
                * <p>The name of the provisioning template to use.</p>
                */
            templateName: string | undefined;
    }
    export namespace CreateProvisioningClaimRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningClaimRequest) => any;
    }
    export interface CreateProvisioningClaimResponse {
            /**
                * <p>The ID of the certificate.</p>
                */
            certificateId?: string;
            /**
                * <p>The provisioning claim certificate.</p>
                */
            certificatePem?: string;
            /**
                * <p>The provisioning claim key pair.</p>
                */
            keyPair?: KeyPair;
            /**
                * <p>The provisioning claim expiration time.</p>
                */
            expiration?: Date;
    }
    export namespace CreateProvisioningClaimResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningClaimResponse) => any;
    }
    /**
        * <p>Structure that contains <code>payloadVersion</code> and
        *          <code>targetArn</code>.</p>
        */
    export interface ProvisioningHook {
            /**
                * <p>The payload that was sent to the target function.</p>
                *          <p>
                *             <i>Note:</i> Only Lambda functions are currently supported.</p>
                */
            payloadVersion?: string;
            /**
                * <p>The ARN of the target function.</p>
                *          <p>
                *             <i>Note:</i> Only Lambda functions are currently supported.</p>
                */
            targetArn: string | undefined;
    }
    export namespace ProvisioningHook {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningHook) => any;
    }
    export interface CreateProvisioningTemplateRequest {
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The description of the fleet provisioning template.</p>
                */
            description?: string;
            /**
                * <p>The JSON formatted contents of the fleet provisioning template.</p>
                */
            templateBody: string | undefined;
            /**
                * <p>True to enable the fleet provisioning template, otherwise false.</p>
                */
            enabled?: boolean;
            /**
                * <p>The role ARN for the role associated with the fleet provisioning template. This IoT role
                *          grants permission to provision a device.</p>
                */
            provisioningRoleArn: string | undefined;
            /**
                * <p>Creates a pre-provisioning hook template.</p>
                */
            preProvisioningHook?: ProvisioningHook;
            /**
                * <p>Metadata which can be used to manage the fleet provisioning template.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
    }
    export namespace CreateProvisioningTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningTemplateRequest) => any;
    }
    export interface CreateProvisioningTemplateResponse {
            /**
                * <p>The ARN that identifies the provisioning template.</p>
                */
            templateArn?: string;
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName?: string;
            /**
                * <p>The default version of the fleet provisioning template.</p>
                */
            defaultVersionId?: number;
    }
    export namespace CreateProvisioningTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningTemplateResponse) => any;
    }
    export interface CreateProvisioningTemplateVersionRequest {
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The JSON formatted contents of the fleet provisioning template.</p>
                */
            templateBody: string | undefined;
            /**
                * <p>Sets a fleet provision template version as the default version.</p>
                */
            setAsDefault?: boolean;
    }
    export namespace CreateProvisioningTemplateVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningTemplateVersionRequest) => any;
    }
    export interface CreateProvisioningTemplateVersionResponse {
            /**
                * <p>The ARN that identifies the provisioning template.</p>
                */
            templateArn?: string;
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName?: string;
            /**
                * <p>The version of the fleet provisioning template.</p>
                */
            versionId?: number;
            /**
                * <p>True if the fleet provisioning template version is the default version, otherwise
                *          false.</p>
                */
            isDefaultVersion?: boolean;
    }
    export namespace CreateProvisioningTemplateVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningTemplateVersionResponse) => any;
    }
    export interface CreateRoleAliasRequest {
            /**
                * <p>The role alias that points to a role ARN. This allows you to change the role without
                *          having to update the device.</p>
                */
            roleAlias: string | undefined;
            /**
                * <p>The role ARN.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>How long (in seconds) the credentials will be valid. The default value is 3,600 seconds.</p>
                *          <p>This value must be less than or equal to the maximum session duration of the IAM role
                *       that the role alias references.</p>
                */
            credentialDurationSeconds?: number;
            /**
                * <p>Metadata which can be used to manage the role alias.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
    }
    export namespace CreateRoleAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoleAliasRequest) => any;
    }
    export interface CreateRoleAliasResponse {
            /**
                * <p>The role alias.</p>
                */
            roleAlias?: string;
            /**
                * <p>The role alias ARN.</p>
                */
            roleAliasArn?: string;
    }
    export namespace CreateRoleAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoleAliasResponse) => any;
    }
    export enum DayOfWeek {
            FRI = "FRI",
            MON = "MON",
            SAT = "SAT",
            SUN = "SUN",
            THU = "THU",
            TUE = "TUE",
            WED = "WED"
    }
    export interface CreateScheduledAuditRequest {
            /**
                * <p>How often the scheduled audit takes
                *       place, either
                *       <code>DAILY</code>,
                *       <code>WEEKLY</code>, <code>BIWEEKLY</code> or <code>MONTHLY</code>. The start time of each audit is
                *       determined by the system.</p>
                */
            frequency: AuditFrequency | string | undefined;
            /**
                * <p>The day of the month on which the scheduled audit takes place.
                *       This
                *       can be "1" through "31" or "LAST". This field is required if the "frequency"
                *       parameter is set to <code>MONTHLY</code>. If days
                *       29
                *       to 31 are specified, and the month
                *       doesn't
                *       have that many days, the audit takes place on the <code>LAST</code> day of the month.</p>
                */
            dayOfMonth?: string;
            /**
                * <p>The day of the week on which the scheduled audit takes
                *       place,
                *       either
                *       <code>SUN</code>,
                *       <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the <code>frequency</code>
                *       parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.</p>
                */
            dayOfWeek?: DayOfWeek | string;
            /**
                * <p>Which checks are performed during the scheduled audit. Checks must be enabled
                *             for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *             of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *             to select which checks are enabled.)</p>
                */
            targetCheckNames: string[] | undefined;
            /**
                * <p>The name you want to give to the scheduled audit. (Max. 128 chars)</p>
                */
            scheduledAuditName: string | undefined;
            /**
                * <p>Metadata that can be used to manage the scheduled audit.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateScheduledAuditRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateScheduledAuditRequest) => any;
    }
    export interface CreateScheduledAuditResponse {
            /**
                * <p>The ARN of the scheduled audit.</p>
                */
            scheduledAuditArn?: string;
    }
    export namespace CreateScheduledAuditResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateScheduledAuditResponse) => any;
    }
    export interface CreateSecurityProfileRequest {
            /**
                * <p>The name you are giving to the security profile.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>A description of the security profile.</p>
                */
            securityProfileDescription?: string;
            /**
                * <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>
                */
            behaviors?: Behavior[];
            /**
                * <p>Specifies the destinations to which alerts are sent. (Alerts are always sent to the
                *         console.) Alerts are generated when a device (thing) violates a behavior.</p>
                */
            alertTargets?: Record<string, AlertTarget>;
            /**
                * @deprecated
                *
                * <p>
                *             <i>Please use <a>CreateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i>
                *          </p>
                *          <p>A list of metrics whose data is retained (stored). By default, data is retained
                *         for any metric used in the profile's <code>behaviors</code>, but it is also retained for
                *         any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>
                */
            additionalMetricsToRetain?: string[];
            /**
                * <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>
                */
            additionalMetricsToRetainV2?: MetricToRetain[];
            /**
                * <p>Metadata that can be used to manage the security profile.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSecurityProfileRequest) => any;
    }
    export interface CreateSecurityProfileResponse {
            /**
                * <p>The name you gave to the security profile.</p>
                */
            securityProfileName?: string;
            /**
                * <p>The ARN of the security profile.</p>
                */
            securityProfileArn?: string;
    }
    export namespace CreateSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSecurityProfileResponse) => any;
    }
    /**
        * <p>Represents a file to stream.</p>
        */
    export interface StreamFile {
            /**
                * <p>The file ID.</p>
                */
            fileId?: number;
            /**
                * <p>The location of the file in S3.</p>
                */
            s3Location?: S3Location;
    }
    export namespace StreamFile {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StreamFile) => any;
    }
    export interface CreateStreamRequest {
            /**
                * <p>The stream ID.</p>
                */
            streamId: string | undefined;
            /**
                * <p>A description of the stream.</p>
                */
            description?: string;
            /**
                * <p>The files to stream.</p>
                */
            files: StreamFile[] | undefined;
            /**
                * <p>An IAM role that allows the IoT service principal to access your S3 files.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>Metadata which can be used to manage streams.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateStreamRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateStreamRequest) => any;
    }
    export interface CreateStreamResponse {
            /**
                * <p>The stream ID.</p>
                */
            streamId?: string;
            /**
                * <p>The stream ARN.</p>
                */
            streamArn?: string;
            /**
                * <p>A description of the stream.</p>
                */
            description?: string;
            /**
                * <p>The version of the stream.</p>
                */
            streamVersion?: number;
    }
    export namespace CreateStreamResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateStreamResponse) => any;
    }
    /**
        * <p>The input for the CreateThing operation.</p>
        */
    export interface CreateThingRequest {
            /**
                * <p>The name of the thing to create.</p>
                * 		       <p>You can't change a thing's name after you create it. To change a thing's name, you must create a
                * 			new thing, give it the new name, and then delete the old thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the thing type associated with the new thing.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The attribute payload, which consists of up to three name/value pairs in a JSON
                * 			document. For example:</p>
                * 		       <p>
                * 			         <code>{\"attributes\":{\"string1\":\"string2\"}}</code>
                * 		       </p>
                */
            attributePayload?: AttributePayload;
            /**
                * <p>The name of the billing group the thing will be added to.</p>
                */
            billingGroupName?: string;
    }
    export namespace CreateThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingRequest) => any;
    }
    /**
        * <p>The output of the CreateThing operation.</p>
        */
    export interface CreateThingResponse {
            /**
                * <p>The name of the new thing.</p>
                */
            thingName?: string;
            /**
                * <p>The ARN of the new thing.</p>
                */
            thingArn?: string;
            /**
                * <p>The thing ID.</p>
                */
            thingId?: string;
    }
    export namespace CreateThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingResponse) => any;
    }
    export interface CreateThingGroupRequest {
            /**
                * <p>The thing group name to create.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The name of the parent thing group.</p>
                */
            parentGroupName?: string;
            /**
                * <p>The thing group properties.</p>
                */
            thingGroupProperties?: ThingGroupProperties;
            /**
                * <p>Metadata which can be used to manage the thing group.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingGroupRequest) => any;
    }
    export interface CreateThingGroupResponse {
            /**
                * <p>The thing group name.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The thing group ARN.</p>
                */
            thingGroupArn?: string;
            /**
                * <p>The thing group ID.</p>
                */
            thingGroupId?: string;
    }
    export namespace CreateThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingGroupResponse) => any;
    }
    /**
        * <p>The ThingTypeProperties contains information about the thing type including: a thing type description,
        * 			and a list of searchable thing attribute names.</p>
        */
    export interface ThingTypeProperties {
            /**
                * <p>The description of the thing type.</p>
                */
            thingTypeDescription?: string;
            /**
                * <p>A list of searchable thing attribute names.</p>
                */
            searchableAttributes?: string[];
    }
    export namespace ThingTypeProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingTypeProperties) => any;
    }
    /**
        * <p>The input for the CreateThingType operation.</p>
        */
    export interface CreateThingTypeRequest {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName: string | undefined;
            /**
                * <p>The ThingTypeProperties for the thing type to create. It contains information about
                * 			the new thing type including a description, and a list of searchable thing attribute
                * 			names.</p>
                */
            thingTypeProperties?: ThingTypeProperties;
            /**
                * <p>Metadata which can be used to manage the thing type.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateThingTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingTypeRequest) => any;
    }
    /**
        * <p>The output of the CreateThingType operation.</p>
        */
    export interface CreateThingTypeResponse {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the thing type.</p>
                */
            thingTypeArn?: string;
            /**
                * <p>The thing type ID.</p>
                */
            thingTypeId?: string;
    }
    export namespace CreateThingTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateThingTypeResponse) => any;
    }
    /**
        * <p>Describes a rule.</p>
        */
    export interface TopicRulePayload {
            /**
                * <p>The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html">IoT SQL
                *             Reference</a> in the <i>IoT Developer Guide</i>.</p>
                */
            sql: string | undefined;
            /**
                * <p>The description of the rule.</p>
                */
            description?: string;
            /**
                * <p>The actions associated with the rule.</p>
                */
            actions: Action[] | undefined;
            /**
                * <p>Specifies whether the rule is disabled.</p>
                */
            ruleDisabled?: boolean;
            /**
                * <p>The version of the SQL rules engine to use when evaluating the rule.</p>
                */
            awsIotSqlVersion?: string;
            /**
                * <p>The action to take when an error occurs.</p>
                */
            errorAction?: Action;
    }
    export namespace TopicRulePayload {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRulePayload) => any;
    }
    /**
        * <p>The input for the CreateTopicRule operation.</p>
        */
    export interface CreateTopicRuleRequest {
            /**
                * <p>The name of the rule.</p>
                */
            ruleName: string | undefined;
            /**
                * <p>The rule payload.</p>
                */
            topicRulePayload: TopicRulePayload | undefined;
            /**
                * <p>Metadata which can be used to manage the topic rule.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: --tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: string;
    }
    export namespace CreateTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTopicRuleRequest) => any;
    }
    /**
        * <p>The Rule-SQL expression can't be parsed correctly.</p>
        */
    export class SqlParseException extends __BaseException {
            readonly name: "SqlParseException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<SqlParseException, __BaseException>);
    }
    /**
        * <p>HTTP URL destination configuration used by the topic rule's HTTP action.</p>
        */
    export interface HttpUrlDestinationConfiguration {
            /**
                * <p>The URL IoT uses to confirm ownership of or access to the topic rule destination
                *          URL.</p>
                */
            confirmationUrl: string | undefined;
    }
    export namespace HttpUrlDestinationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpUrlDestinationConfiguration) => any;
    }
    /**
        * <p>The configuration information for a virtual private cloud (VPC) destination.</p>
        */
    export interface VpcDestinationConfiguration {
            /**
                * <p>The subnet IDs of the VPC destination.</p>
                */
            subnetIds: string[] | undefined;
            /**
                * <p>The security groups of the VPC destination.</p>
                */
            securityGroups?: string[];
            /**
                * <p>The ID of the VPC.</p>
                */
            vpcId: string | undefined;
            /**
                * <p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>
                */
            roleArn: string | undefined;
    }
    export namespace VpcDestinationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VpcDestinationConfiguration) => any;
    }
    /**
        * <p>Configuration of the topic rule destination.</p>
        */
    export interface TopicRuleDestinationConfiguration {
            /**
                * <p>Configuration of the HTTP URL.</p>
                */
            httpUrlConfiguration?: HttpUrlDestinationConfiguration;
            /**
                * <p>Configuration of the virtual private cloud (VPC) connection.</p>
                */
            vpcConfiguration?: VpcDestinationConfiguration;
    }
    export namespace TopicRuleDestinationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRuleDestinationConfiguration) => any;
    }
    export interface CreateTopicRuleDestinationRequest {
            /**
                * <p>The topic rule destination configuration.</p>
                */
            destinationConfiguration: TopicRuleDestinationConfiguration | undefined;
    }
    export namespace CreateTopicRuleDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTopicRuleDestinationRequest) => any;
    }
    /**
        * <p>HTTP URL destination properties.</p>
        */
    export interface HttpUrlDestinationProperties {
            /**
                * <p>The URL used to confirm the HTTP topic rule destination URL.</p>
                */
            confirmationUrl?: string;
    }
    export namespace HttpUrlDestinationProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpUrlDestinationProperties) => any;
    }
    export enum TopicRuleDestinationStatus {
            DELETING = "DELETING",
            DISABLED = "DISABLED",
            ENABLED = "ENABLED",
            ERROR = "ERROR",
            IN_PROGRESS = "IN_PROGRESS"
    }
    /**
        * <p>The properties of a virtual private cloud (VPC) destination.</p>
        */
    export interface VpcDestinationProperties {
            /**
                * <p>The subnet IDs of the VPC destination.</p>
                */
            subnetIds?: string[];
            /**
                * <p>The security groups of the VPC destination.</p>
                */
            securityGroups?: string[];
            /**
                * <p>The ID of the VPC.</p>
                */
            vpcId?: string;
            /**
                * <p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>
                */
            roleArn?: string;
    }
    export namespace VpcDestinationProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VpcDestinationProperties) => any;
    }
    /**
        * <p>A topic rule destination.</p>
        */
    export interface TopicRuleDestination {
            /**
                * <p>The topic rule destination URL.</p>
                */
            arn?: string;
            /**
                * <p>The status of the topic rule destination. Valid values are:</p>
                *          <dl>
                *             <dt>IN_PROGRESS</dt>
                *             <dd>
                *                <p>A topic rule destination was created but has not been confirmed. You can set
                *                      <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *             <dt>ENABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is allowed. You can
                *                   set <code>status</code> to <code>DISABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>DISABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is not allowed. You
                *                   can set <code>status</code> to <code>ENABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>ERROR</dt>
                *             <dd>
                *                <p>Confirmation could not be completed, for example if the confirmation timed out.
                *                   You can call <code>GetTopicRuleDestination</code> for details about the error. You
                *                   can set <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *          </dl>
                */
            status?: TopicRuleDestinationStatus | string;
            /**
                * <p>The date and time when the topic rule destination was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The date and time when the topic rule destination was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>Additional details or reason why the topic rule destination is in the current
                *          status.</p>
                */
            statusReason?: string;
            /**
                * <p>Properties of the HTTP URL.</p>
                */
            httpUrlProperties?: HttpUrlDestinationProperties;
            /**
                * <p>Properties of the virtual private cloud (VPC) connection.</p>
                */
            vpcProperties?: VpcDestinationProperties;
    }
    export namespace TopicRuleDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRuleDestination) => any;
    }
    export interface CreateTopicRuleDestinationResponse {
            /**
                * <p>The topic rule destination.</p>
                */
            topicRuleDestination?: TopicRuleDestination;
    }
    export namespace CreateTopicRuleDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTopicRuleDestinationResponse) => any;
    }
    export interface DeleteAccountAuditConfigurationRequest {
            /**
                * <p>If true, all scheduled audits are deleted.</p>
                */
            deleteScheduledAudits?: boolean;
    }
    export namespace DeleteAccountAuditConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccountAuditConfigurationRequest) => any;
    }
    export interface DeleteAccountAuditConfigurationResponse {
    }
    export namespace DeleteAccountAuditConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccountAuditConfigurationResponse) => any;
    }
    export interface DeleteAuditSuppressionRequest {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName: string | undefined;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier: ResourceIdentifier | undefined;
    }
    export namespace DeleteAuditSuppressionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAuditSuppressionRequest) => any;
    }
    export interface DeleteAuditSuppressionResponse {
    }
    export namespace DeleteAuditSuppressionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAuditSuppressionResponse) => any;
    }
    export interface DeleteAuthorizerRequest {
            /**
                * <p>The name of the authorizer to delete.</p>
                */
            authorizerName: string | undefined;
    }
    export namespace DeleteAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAuthorizerRequest) => any;
    }
    export interface DeleteAuthorizerResponse {
    }
    export namespace DeleteAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAuthorizerResponse) => any;
    }
    /**
        * <p>You can't delete the resource because it is attached to one or more
        *          resources.</p>
        */
    export class DeleteConflictException extends __BaseException {
            readonly name: "DeleteConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DeleteConflictException, __BaseException>);
    }
    export interface DeleteBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName: string | undefined;
            /**
                * <p>The expected version of the billing group. If the version of the billing group does
                * 			not match the expected version specified in the request, the
                * 				<code>DeleteBillingGroup</code> request is rejected with a
                * 				<code>VersionConflictException</code>.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBillingGroupRequest) => any;
    }
    export interface DeleteBillingGroupResponse {
    }
    export namespace DeleteBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBillingGroupResponse) => any;
    }
    /**
        * <p>The certificate operation is not allowed.</p>
        */
    export class CertificateStateException extends __BaseException {
            readonly name: "CertificateStateException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CertificateStateException, __BaseException>);
    }
    /**
        * <p>Input for the DeleteCACertificate operation.</p>
        */
    export interface DeleteCACertificateRequest {
            /**
                * <p>The ID of the certificate to delete. (The last part of the certificate ARN contains
                *          the certificate ID.)</p>
                */
            certificateId: string | undefined;
    }
    export namespace DeleteCACertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCACertificateRequest) => any;
    }
    /**
        * <p>The output for the DeleteCACertificate operation.</p>
        */
    export interface DeleteCACertificateResponse {
    }
    export namespace DeleteCACertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCACertificateResponse) => any;
    }
    /**
        * <p>The input for the DeleteCertificate operation.</p>
        */
    export interface DeleteCertificateRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
            /**
                * <p>Forces the deletion of a certificate if it is inactive and is not attached to an IoT
                *          thing.</p>
                */
            forceDelete?: boolean;
    }
    export namespace DeleteCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCertificateRequest) => any;
    }
    export interface DeleteCustomMetricRequest {
            /**
                * <p>
                *       The name of the custom metric.
                *     </p>
                */
            metricName: string | undefined;
    }
    export namespace DeleteCustomMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCustomMetricRequest) => any;
    }
    export interface DeleteCustomMetricResponse {
    }
    export namespace DeleteCustomMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCustomMetricResponse) => any;
    }
    export interface DeleteDimensionRequest {
            /**
                * <p>The unique identifier for the dimension that you want to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteDimensionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDimensionRequest) => any;
    }
    export interface DeleteDimensionResponse {
    }
    export namespace DeleteDimensionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDimensionResponse) => any;
    }
    export interface DeleteDomainConfigurationRequest {
            /**
                * <p>The name of the domain configuration to be deleted.</p>
                */
            domainConfigurationName: string | undefined;
    }
    export namespace DeleteDomainConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDomainConfigurationRequest) => any;
    }
    export interface DeleteDomainConfigurationResponse {
    }
    export namespace DeleteDomainConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDomainConfigurationResponse) => any;
    }
    export interface DeleteDynamicThingGroupRequest {
            /**
                * <p>The name of the dynamic thing group to delete.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The expected version of the dynamic thing group to delete.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteDynamicThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDynamicThingGroupRequest) => any;
    }
    export interface DeleteDynamicThingGroupResponse {
    }
    export namespace DeleteDynamicThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDynamicThingGroupResponse) => any;
    }
    export interface DeleteFleetMetricRequest {
            /**
                * <p>The name of the fleet metric to delete.</p>
                */
            metricName: string | undefined;
            /**
                * <p>The expected version of the fleet metric to delete.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteFleetMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFleetMetricRequest) => any;
    }
    export interface DeleteJobRequest {
            /**
                * <p>The ID of the job to be deleted.</p>
                *          <p>After a job deletion is completed, you may reuse this jobId when you create a new job.
                *         However, this is not recommended, and you must ensure that your devices are not using the
                *         jobId to refer to the deleted job.</p>
                */
            jobId: string | undefined;
            /**
                * <p>(Optional) When true, you can delete a job which is "IN_PROGRESS". Otherwise, you can
                *         only delete a job which is in a terminal state ("COMPLETED" or "CANCELED") or an exception
                *         will occur. The default is false.</p>
                *          <note>
                *             <p>Deleting a job which is "IN_PROGRESS", will cause a device which is executing
                *         the job to be unable to access job information or update the job execution status.
                *         Use caution and ensure that each device executing a job which is deleted is able to recover to
                *         a valid state.</p>
                *          </note>
                */
            force?: boolean;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
    }
    export namespace DeleteJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobRequest) => any;
    }
    export interface DeleteJobExecutionRequest {
            /**
                * <p>The ID of the job whose execution on a particular device will be deleted.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The name of the thing whose job execution will be deleted.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the
                *         execution of a particular job on a particular device.</p>
                *          <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused
                *         by IoT, so be sure you get and use the correct value here.</p>
                */
            executionNumber: number | undefined;
            /**
                * <p>(Optional) When true, you can delete a job execution which is "IN_PROGRESS". Otherwise,
                *         you can only delete a job execution which is in a terminal state ("SUCCEEDED", "FAILED",
                *         "REJECTED", "REMOVED" or "CANCELED") or an exception will occur. The default is false.</p>
                *          <note>
                *             <p>Deleting a job execution which is "IN_PROGRESS", will cause the device
                *         to be unable to access job information or update the job execution status.
                *         Use caution and ensure that the device is able to recover to a valid state.</p>
                *          </note>
                */
            force?: boolean;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
    }
    export namespace DeleteJobExecutionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobExecutionRequest) => any;
    }
    export interface DeleteJobTemplateRequest {
            /**
                * <p>The unique identifier of the job template to delete.</p>
                */
            jobTemplateId: string | undefined;
    }
    export namespace DeleteJobTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobTemplateRequest) => any;
    }
    export interface DeleteMitigationActionRequest {
            /**
                * <p>The name of the mitigation action that you want to delete.</p>
                */
            actionName: string | undefined;
    }
    export namespace DeleteMitigationActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMitigationActionRequest) => any;
    }
    export interface DeleteMitigationActionResponse {
    }
    export namespace DeleteMitigationActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMitigationActionResponse) => any;
    }
    export interface DeleteOTAUpdateRequest {
            /**
                * <p>The ID of the OTA update to delete.</p>
                */
            otaUpdateId: string | undefined;
            /**
                * <p>When true, the stream created by the OTAUpdate process is deleted when the OTA update is deleted.
                *             Ignored if the stream specified in the OTAUpdate is supplied by the user.</p>
                */
            deleteStream?: boolean;
            /**
                * <p>When true, deletes the IoT job created by the OTAUpdate process even if it is "IN_PROGRESS". Otherwise, if the
                *             job is not in a terminal state ("COMPLETED" or "CANCELED") an exception will occur. The default is false.</p>
                */
            forceDeleteAWSJob?: boolean;
    }
    export namespace DeleteOTAUpdateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteOTAUpdateRequest) => any;
    }
    export interface DeleteOTAUpdateResponse {
    }
    export namespace DeleteOTAUpdateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteOTAUpdateResponse) => any;
    }
    /**
        * <p>The input for the DeletePolicy operation.</p>
        */
    export interface DeletePolicyRequest {
            /**
                * <p>The name of the policy to delete.</p>
                */
            policyName: string | undefined;
    }
    export namespace DeletePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePolicyRequest) => any;
    }
    /**
        * <p>The input for the DeletePolicyVersion operation.</p>
        */
    export interface DeletePolicyVersionRequest {
            /**
                * <p>The name of the policy.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId: string | undefined;
    }
    export namespace DeletePolicyVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePolicyVersionRequest) => any;
    }
    export interface DeleteProvisioningTemplateRequest {
            /**
                * <p>The name of the fleet provision template to delete.</p>
                */
            templateName: string | undefined;
    }
    export namespace DeleteProvisioningTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningTemplateRequest) => any;
    }
    export interface DeleteProvisioningTemplateResponse {
    }
    export namespace DeleteProvisioningTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningTemplateResponse) => any;
    }
    export interface DeleteProvisioningTemplateVersionRequest {
            /**
                * <p>The name of the fleet provisioning template version to delete.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The fleet provisioning template version ID to delete.</p>
                */
            versionId: number | undefined;
    }
    export namespace DeleteProvisioningTemplateVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningTemplateVersionRequest) => any;
    }
    export interface DeleteProvisioningTemplateVersionResponse {
    }
    export namespace DeleteProvisioningTemplateVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningTemplateVersionResponse) => any;
    }
    /**
        * <p>The input for the DeleteRegistrationCode operation.</p>
        */
    export interface DeleteRegistrationCodeRequest {
    }
    export namespace DeleteRegistrationCodeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegistrationCodeRequest) => any;
    }
    /**
        * <p>The output for the DeleteRegistrationCode operation.</p>
        */
    export interface DeleteRegistrationCodeResponse {
    }
    export namespace DeleteRegistrationCodeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegistrationCodeResponse) => any;
    }
    export interface DeleteRoleAliasRequest {
            /**
                * <p>The role alias to delete.</p>
                */
            roleAlias: string | undefined;
    }
    export namespace DeleteRoleAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRoleAliasRequest) => any;
    }
    export interface DeleteRoleAliasResponse {
    }
    export namespace DeleteRoleAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRoleAliasResponse) => any;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTServiceException as __BaseException } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/IoTServiceException";
    import { AbortConfig, Action, ActiveViolation, AggregationType, AlertTarget, AuditCheckConfiguration, AuditCheckDetails, AuditFinding, AuditFrequency, AuditMitigationActionExecutionMetadata, AuditMitigationActionsExecutionStatus, AuditMitigationActionsTaskMetadata, AuditMitigationActionsTaskStatus, AuditMitigationActionsTaskTarget, AuditNotificationTarget, AuditSuppression, AuditTaskMetadata, AuditTaskStatus, AuditTaskType, AuthorizerConfig, AuthorizerDescription, AuthorizerStatus, AuthorizerSummary, AutoRegistrationStatus, AwsJobExecutionsRolloutConfig, AwsJobPresignedUrlConfig, Behavior, BillingGroupProperties, CustomMetricType, DayOfWeek, DimensionType, DimensionValueOperator, FleetMetricUnit, JobExecutionsRetryConfig, JobExecutionsRolloutConfig, LogLevel, MetricToRetain, MetricValue, MitigationActionParams, OTAUpdateFile, OTAUpdateStatus, Policy, PresignedUrlConfig, Protocol, ProvisioningHook, ResourceIdentifier, ServiceType, StreamFile, Tag, TargetSelection, TaskStatisticsForAuditCheck, ThingGroupProperties, ThingTypeProperties, TimeoutConfig, TopicRuleDestination, VerificationState } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    export interface DeleteScheduledAuditRequest {
            /**
                * <p>The name of the scheduled audit you want to delete.</p>
                */
            scheduledAuditName: string | undefined;
    }
    export namespace DeleteScheduledAuditRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteScheduledAuditRequest) => any;
    }
    export interface DeleteScheduledAuditResponse {
    }
    export namespace DeleteScheduledAuditResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteScheduledAuditResponse) => any;
    }
    export interface DeleteSecurityProfileRequest {
            /**
                * <p>The name of the security profile to be deleted.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>The expected version of the security profile. A new version is generated whenever
                *         the security profile is updated. If you specify a value that is different from the actual
                *         version, a <code>VersionConflictException</code> is thrown.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSecurityProfileRequest) => any;
    }
    export interface DeleteSecurityProfileResponse {
    }
    export namespace DeleteSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSecurityProfileResponse) => any;
    }
    export interface DeleteStreamRequest {
            /**
                * <p>The stream ID.</p>
                */
            streamId: string | undefined;
    }
    export namespace DeleteStreamRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteStreamRequest) => any;
    }
    export interface DeleteStreamResponse {
    }
    export namespace DeleteStreamResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteStreamResponse) => any;
    }
    /**
        * <p>The input for the DeleteThing operation.</p>
        */
    export interface DeleteThingRequest {
            /**
                * <p>The name of the thing to delete.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The expected version of the thing record in the registry. If the version of the
                * 			record in the registry does not match the expected version specified in the request, the
                * 				<code>DeleteThing</code> request is rejected with a
                * 				<code>VersionConflictException</code>.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingRequest) => any;
    }
    /**
        * <p>The output of the DeleteThing operation.</p>
        */
    export interface DeleteThingResponse {
    }
    export namespace DeleteThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingResponse) => any;
    }
    export interface DeleteThingGroupRequest {
            /**
                * <p>The name of the thing group to delete.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The expected version of the thing group to delete.</p>
                */
            expectedVersion?: number;
    }
    export namespace DeleteThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingGroupRequest) => any;
    }
    export interface DeleteThingGroupResponse {
    }
    export namespace DeleteThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingGroupResponse) => any;
    }
    /**
        * <p>The input for the DeleteThingType operation.</p>
        */
    export interface DeleteThingTypeRequest {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName: string | undefined;
    }
    export namespace DeleteThingTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingTypeRequest) => any;
    }
    /**
        * <p>The output for the DeleteThingType operation.</p>
        */
    export interface DeleteThingTypeResponse {
    }
    export namespace DeleteThingTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingTypeResponse) => any;
    }
    /**
        * <p>The input for the DeleteTopicRule operation.</p>
        */
    export interface DeleteTopicRuleRequest {
            /**
                * <p>The name of the rule.</p>
                */
            ruleName: string | undefined;
    }
    export namespace DeleteTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTopicRuleRequest) => any;
    }
    export interface DeleteTopicRuleDestinationRequest {
            /**
                * <p>The ARN of the topic rule destination to delete.</p>
                */
            arn: string | undefined;
    }
    export namespace DeleteTopicRuleDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTopicRuleDestinationRequest) => any;
    }
    export interface DeleteTopicRuleDestinationResponse {
    }
    export namespace DeleteTopicRuleDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTopicRuleDestinationResponse) => any;
    }
    export enum LogTargetType {
            CLIENT_ID = "CLIENT_ID",
            DEFAULT = "DEFAULT",
            PRINCIPAL_ID = "PRINCIPAL_ID",
            SOURCE_IP = "SOURCE_IP",
            THING_GROUP = "THING_GROUP"
    }
    export interface DeleteV2LoggingLevelRequest {
            /**
                * <p>The type of resource for which you are configuring logging. Must be
                *             <code>THING_Group</code>.</p>
                */
            targetType: LogTargetType | string | undefined;
            /**
                * <p>The name of the resource for which you are configuring logging.</p>
                */
            targetName: string | undefined;
    }
    export namespace DeleteV2LoggingLevelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteV2LoggingLevelRequest) => any;
    }
    /**
        * <p>The input for the DeprecateThingType operation.</p>
        */
    export interface DeprecateThingTypeRequest {
            /**
                * <p>The name of the thing type to deprecate.</p>
                */
            thingTypeName: string | undefined;
            /**
                * <p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can
                * 			associate it with things.</p>
                */
            undoDeprecate?: boolean;
    }
    export namespace DeprecateThingTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateThingTypeRequest) => any;
    }
    /**
        * <p>The output for the DeprecateThingType operation.</p>
        */
    export interface DeprecateThingTypeResponse {
    }
    export namespace DeprecateThingTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateThingTypeResponse) => any;
    }
    export interface DescribeAccountAuditConfigurationRequest {
    }
    export namespace DescribeAccountAuditConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccountAuditConfigurationRequest) => any;
    }
    export interface DescribeAccountAuditConfigurationResponse {
            /**
                * <p>The ARN of the role that grants permission to IoT to access information
                *             about your devices, policies, certificates, and other items as required when
                *             performing an audit.</p>
                *           <p>On the first call to <code>UpdateAccountAuditConfiguration</code>,
                *             this parameter is required.</p>
                */
            roleArn?: string;
            /**
                * <p>Information about the targets to which audit notifications are sent for
                *             this account.</p>
                */
            auditNotificationTargetConfigurations?: Record<string, AuditNotificationTarget>;
            /**
                * <p>Which audit checks are enabled and disabled for this account.</p>
                */
            auditCheckConfigurations?: Record<string, AuditCheckConfiguration>;
    }
    export namespace DescribeAccountAuditConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccountAuditConfigurationResponse) => any;
    }
    export interface DescribeAuditFindingRequest {
            /**
                * <p>A unique identifier for a single audit finding. You can use this identifier to apply mitigation actions to the finding.</p>
                */
            findingId: string | undefined;
    }
    export namespace DescribeAuditFindingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditFindingRequest) => any;
    }
    export interface DescribeAuditFindingResponse {
            /**
                * <p>The findings (results) of the audit.</p>
                */
            finding?: AuditFinding;
    }
    export namespace DescribeAuditFindingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditFindingResponse) => any;
    }
    export interface DescribeAuditMitigationActionsTaskRequest {
            /**
                * <p>The unique identifier for the audit mitigation task.</p>
                */
            taskId: string | undefined;
    }
    export namespace DescribeAuditMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditMitigationActionsTaskRequest) => any;
    }
    /**
        * <p>Describes which changes should be applied as part of a mitigation action.</p>
        */
    export interface MitigationAction {
            /**
                * <p>A user-friendly name for the mitigation action.</p>
                */
            name?: string;
            /**
                * <p>A unique identifier for the mitigation action.</p>
                */
            id?: string;
            /**
                * <p>The IAM role ARN used to apply this mitigation action.</p>
                */
            roleArn?: string;
            /**
                * <p>The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.</p>
                */
            actionParams?: MitigationActionParams;
    }
    export namespace MitigationAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MitigationAction) => any;
    }
    export interface DescribeAuditMitigationActionsTaskResponse {
            /**
                * <p>The current status of the task.</p>
                */
            taskStatus?: AuditMitigationActionsTaskStatus | string;
            /**
                * <p>The date and time when the task was started.</p>
                */
            startTime?: Date;
            /**
                * <p>The date and time when the task was completed or canceled.</p>
                */
            endTime?: Date;
            /**
                * <p>Aggregate counts of the results when the mitigation tasks were applied to the findings for this audit mitigation actions task.</p>
                */
            taskStatistics?: Record<string, TaskStatisticsForAuditCheck>;
            /**
                * <p>Identifies the findings to which the mitigation actions are applied. This can be by audit checks, by audit task, or a set of findings.</p>
                */
            target?: AuditMitigationActionsTaskTarget;
            /**
                * <p>Specifies the mitigation actions that should be applied to specific audit checks.</p>
                */
            auditCheckToActionsMapping?: Record<string, string[]>;
            /**
                * <p>Specifies the mitigation actions and their parameters that are applied as part of this task.</p>
                */
            actionsDefinition?: MitigationAction[];
    }
    export namespace DescribeAuditMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditMitigationActionsTaskResponse) => any;
    }
    export interface DescribeAuditSuppressionRequest {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName: string | undefined;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier: ResourceIdentifier | undefined;
    }
    export namespace DescribeAuditSuppressionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditSuppressionRequest) => any;
    }
    export interface DescribeAuditSuppressionResponse {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName?: string;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier?: ResourceIdentifier;
            /**
                * <p>
                *       The epoch timestamp in seconds at which this suppression expires.
                *     </p>
                */
            expirationDate?: Date;
            /**
                * <p>
                *       Indicates whether a suppression should exist indefinitely or not.
                *     </p>
                */
            suppressIndefinitely?: boolean;
            /**
                * <p>
                *       The description of the audit suppression.
                *     </p>
                */
            description?: string;
    }
    export namespace DescribeAuditSuppressionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditSuppressionResponse) => any;
    }
    export interface DescribeAuditTaskRequest {
            /**
                * <p>The ID of the audit whose information you want to get.</p>
                */
            taskId: string | undefined;
    }
    export namespace DescribeAuditTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditTaskRequest) => any;
    }
    /**
        * <p>Statistics for the checks performed during the audit.</p>
        */
    export interface TaskStatistics {
            /**
                * <p>The number of checks in this audit.</p>
                */
            totalChecks?: number;
            /**
                * <p>The number of checks in progress.</p>
                */
            inProgressChecks?: number;
            /**
                * <p>The number of checks waiting for data collection.</p>
                */
            waitingForDataCollectionChecks?: number;
            /**
                * <p>The number of checks that found compliant resources.</p>
                */
            compliantChecks?: number;
            /**
                * <p>The number of checks that found noncompliant resources.</p>
                */
            nonCompliantChecks?: number;
            /**
                * <p>The number of checks.</p>
                */
            failedChecks?: number;
            /**
                * <p>The number of checks that did not run because the audit was canceled.</p>
                */
            canceledChecks?: number;
    }
    export namespace TaskStatistics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskStatistics) => any;
    }
    export interface DescribeAuditTaskResponse {
            /**
                * <p>The status of the audit: one of "IN_PROGRESS", "COMPLETED",
                *             "FAILED", or "CANCELED".</p>
                */
            taskStatus?: AuditTaskStatus | string;
            /**
                * <p>The type of audit: "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".</p>
                */
            taskType?: AuditTaskType | string;
            /**
                * <p>The time the audit started.</p>
                */
            taskStartTime?: Date;
            /**
                * <p>Statistical information about the audit.</p>
                */
            taskStatistics?: TaskStatistics;
            /**
                * <p>The name of the scheduled audit (only if the audit was a scheduled audit).</p>
                */
            scheduledAuditName?: string;
            /**
                * <p>Detailed information about each check performed during this audit.</p>
                */
            auditDetails?: Record<string, AuditCheckDetails>;
    }
    export namespace DescribeAuditTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditTaskResponse) => any;
    }
    export interface DescribeAuthorizerRequest {
            /**
                * <p>The name of the authorizer to describe.</p>
                */
            authorizerName: string | undefined;
    }
    export namespace DescribeAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuthorizerRequest) => any;
    }
    export interface DescribeAuthorizerResponse {
            /**
                * <p>The authorizer description.</p>
                */
            authorizerDescription?: AuthorizerDescription;
    }
    export namespace DescribeAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuthorizerResponse) => any;
    }
    export interface DescribeBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName: string | undefined;
    }
    export namespace DescribeBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeBillingGroupRequest) => any;
    }
    /**
        * <p>Additional information about the billing group.</p>
        */
    export interface BillingGroupMetadata {
            /**
                * <p>The date the billing group was created.</p>
                */
            creationDate?: Date;
    }
    export namespace BillingGroupMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BillingGroupMetadata) => any;
    }
    export interface DescribeBillingGroupResponse {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName?: string;
            /**
                * <p>The ID of the billing group.</p>
                */
            billingGroupId?: string;
            /**
                * <p>The ARN of the billing group.</p>
                */
            billingGroupArn?: string;
            /**
                * <p>The version of the billing group.</p>
                */
            version?: number;
            /**
                * <p>The properties of the billing group.</p>
                */
            billingGroupProperties?: BillingGroupProperties;
            /**
                * <p>Additional information about the billing group.</p>
                */
            billingGroupMetadata?: BillingGroupMetadata;
    }
    export namespace DescribeBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeBillingGroupResponse) => any;
    }
    /**
        * <p>The input for the DescribeCACertificate operation.</p>
        */
    export interface DescribeCACertificateRequest {
            /**
                * <p>The CA certificate identifier.</p>
                */
            certificateId: string | undefined;
    }
    export namespace DescribeCACertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCACertificateRequest) => any;
    }
    export enum CertificateMode {
            DEFAULT = "DEFAULT",
            SNI_ONLY = "SNI_ONLY"
    }
    export enum CACertificateStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    /**
        * <p>When the certificate is valid.</p>
        */
    export interface CertificateValidity {
            /**
                * <p>The certificate is not valid before this date.</p>
                */
            notBefore?: Date;
            /**
                * <p>The certificate is not valid after this date.</p>
                */
            notAfter?: Date;
    }
    export namespace CertificateValidity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CertificateValidity) => any;
    }
    /**
        * <p>Describes a CA certificate.</p>
        */
    export interface CACertificateDescription {
            /**
                * <p>The CA certificate ARN.</p>
                */
            certificateArn?: string;
            /**
                * <p>The CA certificate ID.</p>
                */
            certificateId?: string;
            /**
                * <p>The status of a CA certificate.</p>
                */
            status?: CACertificateStatus | string;
            /**
                * <p>The CA certificate data, in PEM format.</p>
                */
            certificatePem?: string;
            /**
                * <p>The owner of the CA certificate.</p>
                */
            ownedBy?: string;
            /**
                * <p>The date the CA certificate was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>Whether the CA certificate configured for auto registration of device certificates.
                *          Valid values are "ENABLE" and "DISABLE"</p>
                */
            autoRegistrationStatus?: AutoRegistrationStatus | string;
            /**
                * <p>The date the CA certificate was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The customer version of the CA certificate.</p>
                */
            customerVersion?: number;
            /**
                * <p>The generation ID of the CA certificate.</p>
                */
            generationId?: string;
            /**
                * <p>When the CA certificate is valid.</p>
                */
            validity?: CertificateValidity;
            /**
                * <p>The mode of the CA. </p>
                *          <p>All the device certificates that are registered using this CA will be registered
                *          in the same mode as the CA. For more information about certificate mode for device certificates, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode">certificate mode</a>.</p>
                */
            certificateMode?: CertificateMode | string;
    }
    export namespace CACertificateDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CACertificateDescription) => any;
    }
    /**
        * <p>The registration configuration.</p>
        */
    export interface RegistrationConfig {
            /**
                * <p>The template body.</p>
                */
            templateBody?: string;
            /**
                * <p>The ARN of the role.</p>
                */
            roleArn?: string;
    }
    export namespace RegistrationConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegistrationConfig) => any;
    }
    /**
        * <p>The output from the DescribeCACertificate operation.</p>
        */
    export interface DescribeCACertificateResponse {
            /**
                * <p>The CA certificate description.</p>
                */
            certificateDescription?: CACertificateDescription;
            /**
                * <p>Information about the registration configuration.</p>
                */
            registrationConfig?: RegistrationConfig;
    }
    export namespace DescribeCACertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCACertificateResponse) => any;
    }
    /**
        * <p>The input for the DescribeCertificate operation.</p>
        */
    export interface DescribeCertificateRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
    }
    export namespace DescribeCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCertificateRequest) => any;
    }
    export enum CertificateStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE",
            PENDING_ACTIVATION = "PENDING_ACTIVATION",
            PENDING_TRANSFER = "PENDING_TRANSFER",
            REGISTER_INACTIVE = "REGISTER_INACTIVE",
            REVOKED = "REVOKED"
    }
    /**
        * <p>Data used to transfer a certificate to an Amazon Web Services account.</p>
        */
    export interface TransferData {
            /**
                * <p>The transfer message.</p>
                */
            transferMessage?: string;
            /**
                * <p>The reason why the transfer was rejected.</p>
                */
            rejectReason?: string;
            /**
                * <p>The date the transfer took place.</p>
                */
            transferDate?: Date;
            /**
                * <p>The date the transfer was accepted.</p>
                */
            acceptDate?: Date;
            /**
                * <p>The date the transfer was rejected.</p>
                */
            rejectDate?: Date;
    }
    export namespace TransferData {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransferData) => any;
    }
    /**
        * <p>Describes a certificate.</p>
        */
    export interface CertificateDescription {
            /**
                * <p>The ARN of the certificate.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the certificate.</p>
                */
            certificateId?: string;
            /**
                * <p>The certificate ID of the CA certificate used to sign this certificate.</p>
                */
            caCertificateId?: string;
            /**
                * <p>The status of the certificate.</p>
                */
            status?: CertificateStatus | string;
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem?: string;
            /**
                * <p>The ID of the Amazon Web Services account that owns the certificate.</p>
                */
            ownedBy?: string;
            /**
                * <p>The ID of the Amazon Web Services account of the previous owner of the certificate.</p>
                */
            previousOwnedBy?: string;
            /**
                * <p>The date and time the certificate was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date and time the certificate was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The customer version of the certificate.</p>
                */
            customerVersion?: number;
            /**
                * <p>The transfer data.</p>
                */
            transferData?: TransferData;
            /**
                * <p>The generation ID of the certificate.</p>
                */
            generationId?: string;
            /**
                * <p>When the certificate is valid.</p>
                */
            validity?: CertificateValidity;
            /**
                * <p>The mode of the certificate.</p>
                *          <p>
                *             <code>DEFAULT</code>: A certificate in <code>DEFAULT</code> mode is either generated by
                *          Amazon Web Services IoT Core or registered with an issuer certificate authority (CA) in <code>DEFAULT</code> mode. Devices with
                *          certificates in <code>DEFAULT</code> mode aren't required to send the Server Name
                *          Indication (SNI) extension when connecting to Amazon Web Services IoT Core. However, to use features such as
                *          custom domains and VPC endpoints, we recommend that you use the SNI extension when
                *          connecting to Amazon Web Services IoT Core.</p>
                *          <p>
                *             <code>SNI_ONLY</code>: A certificate in <code>SNI_ONLY</code> mode is registered without an issuer CA. Devices with certificates
                *          in <code>SNI_ONLY</code> mode must send the SNI extension when connecting to Amazon Web Services IoT Core. </p>
                *          <p>For more information about the value for SNI extension, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html">Transport security in IoT</a>.</p>
                */
            certificateMode?: CertificateMode | string;
    }
    export namespace CertificateDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CertificateDescription) => any;
    }
    /**
        * <p>The output of the DescribeCertificate operation.</p>
        */
    export interface DescribeCertificateResponse {
            /**
                * <p>The description of the certificate.</p>
                */
            certificateDescription?: CertificateDescription;
    }
    export namespace DescribeCertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCertificateResponse) => any;
    }
    export interface DescribeCustomMetricRequest {
            /**
                * <p>
                *       The name of the custom metric.
                *     </p>
                */
            metricName: string | undefined;
    }
    export namespace DescribeCustomMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCustomMetricRequest) => any;
    }
    export interface DescribeCustomMetricResponse {
            /**
                * <p>
                *       The name of the custom metric.
                *     </p>
                */
            metricName?: string;
            /**
                * <p>
                *       The Amazon Resource Number (ARN) of the custom metric.
                *     </p>
                */
            metricArn?: string;
            /**
                * <p> The type of the custom metric. </p>
                *          <important>
                *             <p>The type <code>number</code> only takes a single metric value as an input, but while submitting the metrics value in the DeviceMetrics report, it must be passed as an array with a single value.</p>
                *          </important>
                */
            metricType?: CustomMetricType | string;
            /**
                * <p>
                *       Field represents a friendly name in the console for the custom metric; doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated.
                *     </p>
                */
            displayName?: string;
            /**
                * <p>
                *       The creation date of the custom metric in milliseconds since epoch.
                *     </p>
                */
            creationDate?: Date;
            /**
                * <p>
                *       The time the custom metric was last modified in milliseconds since epoch.
                *     </p>
                */
            lastModifiedDate?: Date;
    }
    export namespace DescribeCustomMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCustomMetricResponse) => any;
    }
    export interface DescribeDefaultAuthorizerRequest {
    }
    export namespace DescribeDefaultAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDefaultAuthorizerRequest) => any;
    }
    export interface DescribeDefaultAuthorizerResponse {
            /**
                * <p>The default authorizer's description.</p>
                */
            authorizerDescription?: AuthorizerDescription;
    }
    export namespace DescribeDefaultAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDefaultAuthorizerResponse) => any;
    }
    export interface DescribeDetectMitigationActionsTaskRequest {
            /**
                * <p>
                *       The unique identifier of the task.
                *     </p>
                */
            taskId: string | undefined;
    }
    export namespace DescribeDetectMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDetectMitigationActionsTaskRequest) => any;
    }
    /**
        * <p>
        *             The target of a mitigation action task.
        *         </p>
        */
    export interface DetectMitigationActionsTaskTarget {
            /**
                * <p>
                *             The unique identifiers of the violations.
                *         </p>
                */
            violationIds?: string[];
            /**
                * <p>
                *             The name of the security profile.
                *         </p>
                */
            securityProfileName?: string;
            /**
                * <p>
                *             The name of the behavior.
                *         </p>
                */
            behaviorName?: string;
    }
    export namespace DetectMitigationActionsTaskTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetectMitigationActionsTaskTarget) => any;
    }
    /**
        * <p>
        *             The statistics of a mitigation action task.
        *         </p>
        */
    export interface DetectMitigationActionsTaskStatistics {
            /**
                * <p>
                *             The actions that were performed.
                *         </p>
                */
            actionsExecuted?: number;
            /**
                * <p>
                *             The actions that were skipped.
                *         </p>
                */
            actionsSkipped?: number;
            /**
                * <p>
                *             The actions that failed.
                *         </p>
                */
            actionsFailed?: number;
    }
    export namespace DetectMitigationActionsTaskStatistics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetectMitigationActionsTaskStatistics) => any;
    }
    export enum DetectMitigationActionsTaskStatus {
            CANCELED = "CANCELED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCESSFUL = "SUCCESSFUL"
    }
    /**
        * <p>
        *             Specifies the time period of which violation events occurred between.
        *         </p>
        */
    export interface ViolationEventOccurrenceRange {
            /**
                * <p>
                *             The start date and time of a time period in which violation events occurred.
                *         </p>
                */
            startTime: Date | undefined;
            /**
                * <p>
                *             The end date and time of a time period in which violation events occurred.
                *         </p>
                */
            endTime: Date | undefined;
    }
    export namespace ViolationEventOccurrenceRange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ViolationEventOccurrenceRange) => any;
    }
    /**
        * <p>
        *             The summary of the mitigation action tasks.
        *         </p>
        */
    export interface DetectMitigationActionsTaskSummary {
            /**
                * <p>
                *             The unique identifier of the task.
                *         </p>
                */
            taskId?: string;
            /**
                * <p>
                *             The status of the task.
                *         </p>
                */
            taskStatus?: DetectMitigationActionsTaskStatus | string;
            /**
                * <p>
                *             The date the task started.
                *         </p>
                */
            taskStartTime?: Date;
            /**
                * <p>
                *             The date the task ended.
                *         </p>
                */
            taskEndTime?: Date;
            /**
                * <p>
                *             Specifies the ML Detect findings to which the mitigation actions are applied.
                *         </p>
                */
            target?: DetectMitigationActionsTaskTarget;
            /**
                * <p>
                *             Specifies the time period of which violation events occurred between.
                *         </p>
                */
            violationEventOccurrenceRange?: ViolationEventOccurrenceRange;
            /**
                * <p>
                *             Includes only active violations.
                *         </p>
                */
            onlyActiveViolationsIncluded?: boolean;
            /**
                * <p>
                *             Includes suppressed alerts.
                *         </p>
                */
            suppressedAlertsIncluded?: boolean;
            /**
                * <p>
                *             The definition of the actions.
                *         </p>
                */
            actionsDefinition?: MitigationAction[];
            /**
                * <p>
                *             The statistics of a mitigation action task.
                *         </p>
                */
            taskStatistics?: DetectMitigationActionsTaskStatistics;
    }
    export namespace DetectMitigationActionsTaskSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetectMitigationActionsTaskSummary) => any;
    }
    export interface DescribeDetectMitigationActionsTaskResponse {
            /**
                * <p>
                *       The description of a task.
                *     </p>
                */
            taskSummary?: DetectMitigationActionsTaskSummary;
    }
    export namespace DescribeDetectMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDetectMitigationActionsTaskResponse) => any;
    }
    export interface DescribeDimensionRequest {
            /**
                * <p>The unique identifier for the dimension.</p>
                */
            name: string | undefined;
    }
    export namespace DescribeDimensionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDimensionRequest) => any;
    }
    export interface DescribeDimensionResponse {
            /**
                * <p>The unique identifier for the dimension.</p>
                */
            name?: string;
            /**
                * <p>The Amazon Resource Name
                *       (ARN)
                *       for
                *       the dimension.</p>
                */
            arn?: string;
            /**
                * <p>The type of the dimension.</p>
                */
            type?: DimensionType | string;
            /**
                * <p>The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.</p>
                */
            stringValues?: string[];
            /**
                * <p>The date the dimension was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the dimension was last modified.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace DescribeDimensionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDimensionResponse) => any;
    }
    export interface DescribeDomainConfigurationRequest {
            /**
                * <p>The name of the domain configuration.</p>
                */
            domainConfigurationName: string | undefined;
    }
    export namespace DescribeDomainConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDomainConfigurationRequest) => any;
    }
    export enum DomainConfigurationStatus {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    export enum DomainType {
            AWS_MANAGED = "AWS_MANAGED",
            CUSTOMER_MANAGED = "CUSTOMER_MANAGED",
            ENDPOINT = "ENDPOINT"
    }
    export enum ServerCertificateStatus {
            INVALID = "INVALID",
            VALID = "VALID"
    }
    /**
        * <p>An object that contains information about a server certificate.</p>
        */
    export interface ServerCertificateSummary {
            /**
                * <p>The ARN of the server certificate.</p>
                */
            serverCertificateArn?: string;
            /**
                * <p>The status of the server certificate.</p>
                */
            serverCertificateStatus?: ServerCertificateStatus | string;
            /**
                * <p>Details that explain the status of the server certificate.</p>
                */
            serverCertificateStatusDetail?: string;
    }
    export namespace ServerCertificateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServerCertificateSummary) => any;
    }
    export interface DescribeDomainConfigurationResponse {
            /**
                * <p>The name of the domain configuration.</p>
                */
            domainConfigurationName?: string;
            /**
                * <p>The ARN of the domain configuration.</p>
                */
            domainConfigurationArn?: string;
            /**
                * <p>The name of the domain.</p>
                */
            domainName?: string;
            /**
                * <p>A list containing summary information about the server certificate included in the domain configuration.</p>
                */
            serverCertificates?: ServerCertificateSummary[];
            /**
                * <p>An object that specifies the authorization service for a domain.</p>
                */
            authorizerConfig?: AuthorizerConfig;
            /**
                * <p>A Boolean value that specifies the current state of the domain configuration.</p>
                */
            domainConfigurationStatus?: DomainConfigurationStatus | string;
            /**
                * <p>The type of service delivered by the endpoint.</p>
                */
            serviceType?: ServiceType | string;
            /**
                * <p>The type of the domain.</p>
                */
            domainType?: DomainType | string;
            /**
                * <p>The date and time the domain configuration's status was last changed.</p>
                */
            lastStatusChangeDate?: Date;
    }
    export namespace DescribeDomainConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDomainConfigurationResponse) => any;
    }
    /**
        * <p>The input for the DescribeEndpoint operation.</p>
        */
    export interface DescribeEndpointRequest {
            /**
                * <p>The endpoint type. Valid endpoint types include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</p>
                *             </li>
                *          </ul>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</p>
                *             </li>
                *          </ul>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>iot:CredentialProvider</code> - Returns an IoT credentials provider API
                *                endpoint.</p>
                *             </li>
                *          </ul>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>iot:Jobs</code> - Returns an IoT device management Jobs API
                *                endpoint.</p>
                *             </li>
                *          </ul>
                *          <p>We strongly recommend that customers use the newer <code>iot:Data-ATS</code> endpoint type to avoid
                *          issues related to the widespread distrust of Symantec certificate authorities.</p>
                */
            endpointType?: string;
    }
    export namespace DescribeEndpointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEndpointRequest) => any;
    }
    /**
        * <p>The output from the DescribeEndpoint operation.</p>
        */
    export interface DescribeEndpointResponse {
            /**
                * <p>The endpoint. The format of the endpoint is as follows:
                *             <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>
                */
            endpointAddress?: string;
    }
    export namespace DescribeEndpointResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEndpointResponse) => any;
    }
    export interface DescribeEventConfigurationsRequest {
    }
    export namespace DescribeEventConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventConfigurationsRequest) => any;
    }
    export enum EventType {
            CA_CERTIFICATE = "CA_CERTIFICATE",
            CERTIFICATE = "CERTIFICATE",
            JOB = "JOB",
            JOB_EXECUTION = "JOB_EXECUTION",
            POLICY = "POLICY",
            THING = "THING",
            THING_GROUP = "THING_GROUP",
            THING_GROUP_HIERARCHY = "THING_GROUP_HIERARCHY",
            THING_GROUP_MEMBERSHIP = "THING_GROUP_MEMBERSHIP",
            THING_TYPE = "THING_TYPE",
            THING_TYPE_ASSOCIATION = "THING_TYPE_ASSOCIATION"
    }
    /**
        * <p>Configuration.</p>
        */
    export interface Configuration {
            /**
                * <p>True to enable the configuration.</p>
                */
            Enabled?: boolean;
    }
    export namespace Configuration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Configuration) => any;
    }
    export interface DescribeEventConfigurationsResponse {
            /**
                * <p>The event configurations.</p>
                */
            eventConfigurations?: Record<string, Configuration>;
            /**
                * <p>The creation date of the event configuration.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the event configurations were last modified.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace DescribeEventConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventConfigurationsResponse) => any;
    }
    export interface DescribeFleetMetricRequest {
            /**
                * <p>The name of the fleet metric to describe.</p>
                */
            metricName: string | undefined;
    }
    export namespace DescribeFleetMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFleetMetricRequest) => any;
    }
    export interface DescribeFleetMetricResponse {
            /**
                * <p>The name of the fleet metric to describe.</p>
                */
            metricName?: string;
            /**
                * <p>The search query string.</p>
                */
            queryString?: string;
            /**
                * <p>The type of the aggregation query.</p>
                */
            aggregationType?: AggregationType;
            /**
                * <p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>
                */
            period?: number;
            /**
                * <p>The field to aggregate.</p>
                */
            aggregationField?: string;
            /**
                * <p>The fleet metric description.</p>
                */
            description?: string;
            /**
                * <p>The query version.</p>
                */
            queryVersion?: string;
            /**
                * <p>The name of the index to search.</p>
                */
            indexName?: string;
            /**
                * <p>The date when the fleet metric is created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date when the fleet metric is last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>Used to support unit transformation such as milliseconds to seconds. The unit must be
                *       supported by <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>.</p>
                */
            unit?: FleetMetricUnit | string;
            /**
                * <p>The version of the fleet metric.</p>
                */
            version?: number;
            /**
                * <p>The ARN of the fleet metric to describe.</p>
                */
            metricArn?: string;
    }
    export namespace DescribeFleetMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFleetMetricResponse) => any;
    }
    export interface DescribeIndexRequest {
            /**
                * <p>The index name.</p>
                */
            indexName: string | undefined;
    }
    export namespace DescribeIndexRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeIndexRequest) => any;
    }
    export enum IndexStatus {
            ACTIVE = "ACTIVE",
            BUILDING = "BUILDING",
            REBUILDING = "REBUILDING"
    }
    export interface DescribeIndexResponse {
            /**
                * <p>The index name.</p>
                */
            indexName?: string;
            /**
                * <p>The index status.</p>
                */
            indexStatus?: IndexStatus | string;
            /**
                * <p>Contains a value that specifies the type of indexing performed. Valid values
                *       are:</p>
                *          <ul>
                *             <li>
                *                <p>REGISTRY – Your thing index contains only registry data.</p>
                *             </li>
                *             <li>
                *                <p>REGISTRY_AND_SHADOW - Your thing index contains registry data and shadow data.</p>
                *             </li>
                *             <li>
                *                <p>REGISTRY_AND_CONNECTIVITY_STATUS - Your thing index contains registry data and
                *           thing connectivity status data.</p>
                *             </li>
                *             <li>
                *                <p>REGISTRY_AND_SHADOW_AND_CONNECTIVITY_STATUS - Your thing index contains registry
                *           data, shadow data, and thing connectivity status data.</p>
                *             </li>
                *             <li>
                *                <p>MULTI_INDEXING_MODE - Your thing index contains multiple data sources. For more information, see
                *           <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_GetIndexingConfiguration.html">GetIndexingConfiguration</a>.</p>
                *             </li>
                *          </ul>
                */
            schema?: string;
    }
    export namespace DescribeIndexResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeIndexResponse) => any;
    }
    export interface DescribeJobRequest {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
    }
    export namespace DescribeJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobRequest) => any;
    }
    /**
        * <p>The job process details.</p>
        */
    export interface JobProcessDetails {
            /**
                * <p>The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.</p>
                */
            processingTargets?: string[];
            /**
                * <p>The number of things that cancelled the job.</p>
                */
            numberOfCanceledThings?: number;
            /**
                * <p>The number of things which successfully completed the job.</p>
                */
            numberOfSucceededThings?: number;
            /**
                * <p>The number of things that failed executing the job.</p>
                */
            numberOfFailedThings?: number;
            /**
                * <p>The number of things that rejected the job.</p>
                */
            numberOfRejectedThings?: number;
            /**
                * <p>The number of things that are awaiting execution of the job.</p>
                */
            numberOfQueuedThings?: number;
            /**
                * <p>The number of things currently executing the job.</p>
                */
            numberOfInProgressThings?: number;
            /**
                * <p>The number of things that are no longer scheduled to execute the job because they have been deleted or
                *             have been removed from the group that was a target of the job.</p>
                */
            numberOfRemovedThings?: number;
            /**
                * <p>The number of things whose job execution status is <code>TIMED_OUT</code>.</p>
                */
            numberOfTimedOutThings?: number;
    }
    export namespace JobProcessDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobProcessDetails) => any;
    }
    export enum JobStatus {
            CANCELED = "CANCELED",
            COMPLETED = "COMPLETED",
            DELETION_IN_PROGRESS = "DELETION_IN_PROGRESS",
            IN_PROGRESS = "IN_PROGRESS"
    }
    /**
        * <p>The <code>Job</code> object contains details about a job.</p>
        */
    export interface Job {
            /**
                * <p>An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".</p>
                */
            jobArn?: string;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things
                *             specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing
                *             when a change is detected in a target. For example, a job will run on a device when the thing representing
                *             the device is added to a target group, even after the job was completed by all things originally in the
                *             group. </p>
                *         <note>
                *             <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets.
                *                 By using continuous jobs, devices that join the group receive the job execution even after the job has
                *                 been created.</p>
                *         </note>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>,
                *             <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. </p>
                */
            status?: JobStatus | string;
            /**
                * <p>Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to
                *           <code>true</code>.</p>
                */
            forceCanceled?: boolean;
            /**
                * <p>If the job was updated, provides the reason code for the update.</p>
                */
            reasonCode?: string;
            /**
                * <p>If the job was updated, describes the reason for the update.</p>
                */
            comment?: string;
            /**
                * <p>A list of IoT things and thing groups to which the job should be sent.</p>
                */
            targets?: string[];
            /**
                * <p>A short text description of the job.</p>
                */
            description?: string;
            /**
                * <p>Configuration for pre-signed S3 URLs.</p>
                */
            presignedUrlConfig?: PresignedUrlConfig;
            /**
                * <p>Allows you to create a staged rollout of a job.</p>
                */
            jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
            /**
                * <p>Configuration for criteria to abort the job.</p>
                */
            abortConfig?: AbortConfig;
            /**
                * <p>The time, in seconds since the epoch, when the job was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job was completed.</p>
                */
            completedAt?: Date;
            /**
                * <p>Details about the job process.</p>
                */
            jobProcessDetails?: JobProcessDetails;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer
                *            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
                *            execution status is not set to another terminal state before the timer expires, it will
                *            be automatically set to <code>TIMED_OUT</code>.</p>
                */
            timeoutConfig?: TimeoutConfig;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
            /**
                * <p>The ARN of the job template used to create the job.</p>
                */
            jobTemplateArn?: string;
            /**
                * <p>The configuration for the criteria to retry the job.</p>
                */
            jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
            /**
                * <p>A key-value map that pairs the patterns that need to be replaced in a managed
                *             template job document schema. You can use the description of each key as a guidance
                *             to specify the inputs during runtime when creating a job.</p>
                *         <note>
                *             <p>
                *                <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services
                *                 managed templates. This parameter can't be used with custom job templates or to
                *                 create jobs from them.</p>
                *         </note>
                */
            documentParameters?: Record<string, string>;
            /**
                * <p>Indicates whether a job is concurrent. Will be true when a job is
                *             rolling out new job executions or canceling previously created executions,
                *             otherwise false.</p>
                */
            isConcurrent?: boolean;
    }
    export namespace Job {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Job) => any;
    }
    export interface DescribeJobResponse {
            /**
                * <p>An S3 link to the job document.</p>
                */
            documentSource?: string;
            /**
                * <p>Information about the job.</p>
                */
            job?: Job;
    }
    export namespace DescribeJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobResponse) => any;
    }
    export interface DescribeJobExecutionRequest {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The name of the thing on which the job execution is running.</p>
                */
            thingName: string | undefined;
            /**
                * <p>A string (consisting of the digits "0" through "9" which is used to specify a particular job execution
                *             on a particular device.</p>
                */
            executionNumber?: number;
    }
    export namespace DescribeJobExecutionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobExecutionRequest) => any;
    }
    export enum JobExecutionStatus {
            CANCELED = "CANCELED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            QUEUED = "QUEUED",
            REJECTED = "REJECTED",
            REMOVED = "REMOVED",
            SUCCEEDED = "SUCCEEDED",
            TIMED_OUT = "TIMED_OUT"
    }
    /**
        * <p>Details of the job execution status.</p>
        */
    export interface JobExecutionStatusDetails {
            /**
                * <p>The job execution status.</p>
                */
            detailsMap?: Record<string, string>;
    }
    export namespace JobExecutionStatusDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionStatusDetails) => any;
    }
    /**
        * <p>The job execution object represents the execution of a job on a particular device.</p>
        */
    export interface JobExecution {
            /**
                * <p>The unique identifier you assigned to the job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT,
                *             CANCELED, or REJECTED).</p>
                */
            status?: JobExecutionStatus | string;
            /**
                * <p>Will be <code>true</code> if the job execution was canceled with the optional <code>force</code>
                *           parameter set to <code>true</code>.</p>
                */
            forceCanceled?: boolean;
            /**
                * <p>A collection of name/value pairs that describe the status of the job execution.</p>
                */
            statusDetails?: JobExecutionStatusDetails;
            /**
                * <p>The ARN of the thing on which the job execution is running.</p>
                */
            thingArn?: string;
            /**
                * <p>The time, in seconds since the epoch, when the job execution was queued.</p>
                */
            queuedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job execution started.</p>
                */
            startedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on
                *             this particular device. It can be used in commands which return or update job execution information.
                *         </p>
                */
            executionNumber?: number;
            /**
                * <p>The version of the job execution. Job execution versions are incremented each time they are updated
                *       by a device.</p>
                */
            versionNumber?: number;
            /**
                * <p>The estimated number of seconds that remain before the job execution status will be
                *            changed to <code>TIMED_OUT</code>. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes).
                *            The actual job execution timeout can occur up to 60 seconds later than the estimated duration.
                *        This value will not be included if the job execution has reached a terminal status.</p>
                */
            approximateSecondsBeforeTimedOut?: number;
    }
    export namespace JobExecution {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecution) => any;
    }
    export interface DescribeJobExecutionResponse {
            /**
                * <p>Information about the job execution.</p>
                */
            execution?: JobExecution;
    }
    export namespace DescribeJobExecutionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobExecutionResponse) => any;
    }
    export interface DescribeJobTemplateRequest {
            /**
                * <p>The unique identifier of the job template.</p>
                */
            jobTemplateId: string | undefined;
    }
    export namespace DescribeJobTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobTemplateRequest) => any;
    }
    export interface DescribeJobTemplateResponse {
            /**
                * <p>The ARN of the job template.</p>
                */
            jobTemplateArn?: string;
            /**
                * <p>The unique identifier of the job template.</p>
                */
            jobTemplateId?: string;
            /**
                * <p>A description of the job template.</p>
                */
            description?: string;
            /**
                * <p>An S3 link to the job document.</p>
                */
            documentSource?: string;
            /**
                * <p>The job document.</p>
                */
            document?: string;
            /**
                * <p>The time, in seconds since the epoch, when the job template was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>Configuration for pre-signed S3 URLs.</p>
                */
            presignedUrlConfig?: PresignedUrlConfig;
            /**
                * <p>Allows you to create a staged rollout of a job.</p>
                */
            jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
            /**
                * <p>The criteria that determine when and how a job abort takes place.</p>
                */
            abortConfig?: AbortConfig;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job.  A timer
                *            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
                *            execution status is not set to another terminal state before the timer expires, it will
                *            be automatically set to <code>TIMED_OUT</code>.</p>
                */
            timeoutConfig?: TimeoutConfig;
            /**
                * <p>The configuration that determines how many retries are allowed for each failure type
                *             for a job.</p>
                */
            jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
    }
    export namespace DescribeJobTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobTemplateResponse) => any;
    }
    export interface DescribeManagedJobTemplateRequest {
            /**
                * <p>The unique name of a managed job template, which is required.</p>
                */
            templateName: string | undefined;
            /**
                * <p>An optional parameter to specify version of a managed template. If not specified, the
                *             pre-defined default version is returned.</p>
                */
            templateVersion?: string;
    }
    export namespace DescribeManagedJobTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeManagedJobTemplateRequest) => any;
    }
    /**
        * <p>A map of key-value pairs containing the patterns that need to be replaced in a managed
        *             template job document schema. You can use the description of each key as a guidance to specify
        *             the inputs during runtime when creating a job.</p>
        *         <note>
        *             <p>
        *                <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services
        *                 managed templates. This parameter can't be used with custom job templates or to
        *                 create jobs from them.</p>
        *         </note>
        */
    export interface DocumentParameter {
            /**
                * <p>Key of the map field containing the patterns that need to be replaced in a managed
                *             template job document schema.</p>
                */
            key?: string;
            /**
                * <p>Description of the map field containing the patterns that need to be replaced in a
                *             managed template job document schema.</p>
                */
            description?: string;
            /**
                * <p>A regular expression of the patterns that need to be replaced in a managed template
                *             job document schema.</p>
                */
            regex?: string;
            /**
                * <p>An example illustrating a pattern that need to be replaced in a managed template
                *             job document schema.</p>
                */
            example?: string;
            /**
                * <p>Specifies whether a pattern that needs to be replaced in a managed template job document
                *             schema is optional or required.</p>
                */
            optional?: boolean;
    }
    export namespace DocumentParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DocumentParameter) => any;
    }
    export interface DescribeManagedJobTemplateResponse {
            /**
                * <p>The unique name of a managed template, such as <code>AWS-Reboot</code>.</p>
                */
            templateName?: string;
            /**
                * <p>The unique Amazon Resource Name (ARN) of the managed template.</p>
                */
            templateArn?: string;
            /**
                * <p>The unique description of a managed template.</p>
                */
            description?: string;
            /**
                * <p>The version for a managed template.</p>
                */
            templateVersion?: string;
            /**
                * <p>A list of environments that are supported with the managed job template.</p>
                */
            environments?: string[];
            /**
                * <p>A map of key-value pairs that you can use as guidance to specify the inputs for creating
                *             a job from a managed template.</p>
                *         <note>
                *             <p>
                *                <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services
                *                 managed templates. This parameter can't be used with custom job templates or to
                *                 create jobs from them.</p>
                *         </note>
                */
            documentParameters?: DocumentParameter[];
            /**
                * <p>The document schema for a managed job template.</p>
                */
            document?: string;
    }
    export namespace DescribeManagedJobTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeManagedJobTemplateResponse) => any;
    }
    /**
        * <p>Internal error from the service that indicates an unexpected error or that the service
        *             is unavailable.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    export interface DescribeMitigationActionRequest {
            /**
                * <p>The friendly name that uniquely identifies the mitigation action.</p>
                */
            actionName: string | undefined;
    }
    export namespace DescribeMitigationActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMitigationActionRequest) => any;
    }
    export enum MitigationActionType {
            ADD_THINGS_TO_THING_GROUP = "ADD_THINGS_TO_THING_GROUP",
            ENABLE_IOT_LOGGING = "ENABLE_IOT_LOGGING",
            PUBLISH_FINDING_TO_SNS = "PUBLISH_FINDING_TO_SNS",
            REPLACE_DEFAULT_POLICY_VERSION = "REPLACE_DEFAULT_POLICY_VERSION",
            UPDATE_CA_CERTIFICATE = "UPDATE_CA_CERTIFICATE",
            UPDATE_DEVICE_CERTIFICATE = "UPDATE_DEVICE_CERTIFICATE"
    }
    export interface DescribeMitigationActionResponse {
            /**
                * <p>The friendly name that uniquely identifies the mitigation action.</p>
                */
            actionName?: string;
            /**
                * <p>The type of mitigation action.</p>
                */
            actionType?: MitigationActionType | string;
            /**
                * <p>The ARN that identifies this migration action.</p>
                */
            actionArn?: string;
            /**
                * <p>A unique identifier for this action.</p>
                */
            actionId?: string;
            /**
                * <p>The ARN of the IAM role used to apply this action.</p>
                */
            roleArn?: string;
            /**
                * <p>Parameters that control how the mitigation action is applied, specific to the type of mitigation action.</p>
                */
            actionParams?: MitigationActionParams;
            /**
                * <p>The date and time when the mitigation action was added to your Amazon Web Services accounts.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date and time when the mitigation action was last changed.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace DescribeMitigationActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMitigationActionResponse) => any;
    }
    export interface DescribeProvisioningTemplateRequest {
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName: string | undefined;
    }
    export namespace DescribeProvisioningTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningTemplateRequest) => any;
    }
    export interface DescribeProvisioningTemplateResponse {
            /**
                * <p>The ARN of the fleet provisioning template.</p>
                */
            templateArn?: string;
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName?: string;
            /**
                * <p>The description of the fleet provisioning template.</p>
                */
            description?: string;
            /**
                * <p>The date when the fleet provisioning template was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date when the fleet provisioning template was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The default fleet template version ID.</p>
                */
            defaultVersionId?: number;
            /**
                * <p>The JSON formatted contents of the fleet provisioning template.</p>
                */
            templateBody?: string;
            /**
                * <p>True if the fleet provisioning template is enabled, otherwise false.</p>
                */
            enabled?: boolean;
            /**
                * <p>The ARN of the role associated with the provisioning template. This IoT role grants
                *          permission to provision a device.</p>
                */
            provisioningRoleArn?: string;
            /**
                * <p>Gets information about a pre-provisioned hook.</p>
                */
            preProvisioningHook?: ProvisioningHook;
    }
    export namespace DescribeProvisioningTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningTemplateResponse) => any;
    }
    export interface DescribeProvisioningTemplateVersionRequest {
            /**
                * <p>The template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The fleet provisioning template version ID.</p>
                */
            versionId: number | undefined;
    }
    export namespace DescribeProvisioningTemplateVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningTemplateVersionRequest) => any;
    }
    export interface DescribeProvisioningTemplateVersionResponse {
            /**
                * <p>The fleet provisioning template version ID.</p>
                */
            versionId?: number;
            /**
                * <p>The date when the fleet provisioning template version was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The JSON formatted contents of the fleet provisioning template version.</p>
                */
            templateBody?: string;
            /**
                * <p>True if the fleet provisioning template version is the default version.</p>
                */
            isDefaultVersion?: boolean;
    }
    export namespace DescribeProvisioningTemplateVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningTemplateVersionResponse) => any;
    }
    export interface DescribeRoleAliasRequest {
            /**
                * <p>The role alias to describe.</p>
                */
            roleAlias: string | undefined;
    }
    export namespace DescribeRoleAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRoleAliasRequest) => any;
    }
    /**
        * <p>Role alias description.</p>
        */
    export interface RoleAliasDescription {
            /**
                * <p>The role alias.</p>
                */
            roleAlias?: string;
            /**
                * <p>The ARN of the role alias.</p>
                */
            roleAliasArn?: string;
            /**
                * <p>The role ARN.</p>
                */
            roleArn?: string;
            /**
                * <p>The role alias owner.</p>
                */
            owner?: string;
            /**
                * <p>The number of seconds for which the credential is valid.</p>
                */
            credentialDurationSeconds?: number;
            /**
                * <p>The UNIX timestamp of when the role alias was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The UNIX timestamp of when the role alias was last modified.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace RoleAliasDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoleAliasDescription) => any;
    }
    export interface DescribeRoleAliasResponse {
            /**
                * <p>The role alias description.</p>
                */
            roleAliasDescription?: RoleAliasDescription;
    }
    export namespace DescribeRoleAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRoleAliasResponse) => any;
    }
    export interface DescribeScheduledAuditRequest {
            /**
                * <p>The name of the scheduled audit whose information you want to get.</p>
                */
            scheduledAuditName: string | undefined;
    }
    export namespace DescribeScheduledAuditRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeScheduledAuditRequest) => any;
    }
    export interface DescribeScheduledAuditResponse {
            /**
                * <p>How often the scheduled audit takes
                *       place, either
                *       one of <code>DAILY</code>,
                *             <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the
                *       system.</p>
                */
            frequency?: AuditFrequency | string;
            /**
                * <p>The day of the month on which the scheduled audit takes place.
                *       This is
                *       will be <code>1</code>
                *             through <code>31</code> or <code>LAST</code>. If days
                *       <code>29</code>-<code>31</code>
                *       are specified, and the month does not have that many days, the audit takes place on the <code>LAST</code>
                *       day of the month.</p>
                */
            dayOfMonth?: string;
            /**
                * <p>The day of the week on which the scheduled audit takes
                *       place,
                *       either one of
                *             <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>.</p>
                */
            dayOfWeek?: DayOfWeek | string;
            /**
                * <p>Which checks are performed during the scheduled audit. Checks must be
                *             enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *             of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *             to select which checks are enabled.)</p>
                */
            targetCheckNames?: string[];
            /**
                * <p>The name of the scheduled audit.</p>
                */
            scheduledAuditName?: string;
            /**
                * <p>The ARN of the scheduled audit.</p>
                */
            scheduledAuditArn?: string;
    }
    export namespace DescribeScheduledAuditResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeScheduledAuditResponse) => any;
    }
    export interface DescribeSecurityProfileRequest {
            /**
                * <p>The name of the security profile
                *       whose information you want to get.</p>
                */
            securityProfileName: string | undefined;
    }
    export namespace DescribeSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSecurityProfileRequest) => any;
    }
    export interface DescribeSecurityProfileResponse {
            /**
                * <p>The name of the security profile.</p>
                */
            securityProfileName?: string;
            /**
                * <p>The ARN of the security profile.</p>
                */
            securityProfileArn?: string;
            /**
                * <p>A description of the security profile (associated with the security profile
                *         when it was created or updated).</p>
                */
            securityProfileDescription?: string;
            /**
                * <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>
                */
            behaviors?: Behavior[];
            /**
                * <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>
                */
            alertTargets?: Record<string, AlertTarget>;
            /**
                * @deprecated
                *
                * <p>
                *             <i>Please use
                *           <a>DescribeSecurityProfileResponse$additionalMetricsToRetainV2</a>
                *         instead.</i>
                *          </p>
                *          <p>A list of metrics
                *       whose data is retained (stored). By default, data is retained for any metric
                *       used in the profile's <code>behaviors</code>, but
                *       it is
                *       also retained for any metric specified here.</p>
                */
            additionalMetricsToRetain?: string[];
            /**
                * <p>A list of metrics whose data is retained (stored). By default, data is retained for any
                *       metric used in the profile's behaviors, but
                *       it is
                *       also retained for any metric specified here.</p>
                */
            additionalMetricsToRetainV2?: MetricToRetain[];
            /**
                * <p>The version of the security profile. A new version is generated whenever the
                *         security profile is updated.</p>
                */
            version?: number;
            /**
                * <p>The time the security profile was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The time the security profile was last modified.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace DescribeSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSecurityProfileResponse) => any;
    }
    export interface DescribeStreamRequest {
            /**
                * <p>The stream ID.</p>
                */
            streamId: string | undefined;
    }
    export namespace DescribeStreamRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeStreamRequest) => any;
    }
    /**
        * <p>Information about a stream.</p>
        */
    export interface StreamInfo {
            /**
                * <p>The stream ID.</p>
                */
            streamId?: string;
            /**
                * <p>The stream ARN.</p>
                */
            streamArn?: string;
            /**
                * <p>The stream version.</p>
                */
            streamVersion?: number;
            /**
                * <p>The description of the stream.</p>
                */
            description?: string;
            /**
                * <p>The files to stream.</p>
                */
            files?: StreamFile[];
            /**
                * <p>The date when the stream was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The date when the stream was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>An IAM role IoT assumes to access your S3 files.</p>
                */
            roleArn?: string;
    }
    export namespace StreamInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StreamInfo) => any;
    }
    export interface DescribeStreamResponse {
            /**
                * <p>Information about the stream.</p>
                */
            streamInfo?: StreamInfo;
    }
    export namespace DescribeStreamResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeStreamResponse) => any;
    }
    /**
        * <p>The input for the DescribeThing operation.</p>
        */
    export interface DescribeThingRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
    }
    export namespace DescribeThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingRequest) => any;
    }
    /**
        * <p>The output from the DescribeThing operation.</p>
        */
    export interface DescribeThingResponse {
            /**
                * <p>The default MQTT client ID. For a typical device, the thing name is also used as the default MQTT client ID.
                * 			Although we don’t require a mapping between a thing's registry name and its use of MQTT client IDs, certificates, or
                * 			shadow state, we recommend that you choose a thing name and use it as the MQTT client ID for the registry and the Device Shadow service.</p>
                * 		       <p>This lets you better organize your IoT fleet without removing the flexibility of the underlying device certificate model or shadows.</p>
                */
            defaultClientId?: string;
            /**
                * <p>The name of the thing.</p>
                */
            thingName?: string;
            /**
                * <p>The ID of the thing to describe.</p>
                */
            thingId?: string;
            /**
                * <p>The ARN of the thing to describe.</p>
                */
            thingArn?: string;
            /**
                * <p>The thing type name.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The thing attributes.</p>
                */
            attributes?: Record<string, string>;
            /**
                * <p>The current version of the thing record in the registry.</p>
                * 		       <note>
                * 			         <p>To avoid unintentional changes to the information in the registry, you can pass
                * 				the version information in the <code>expectedVersion</code> parameter of the
                * 					<code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>
                * 		       </note>
                */
            version?: number;
            /**
                * <p>The name of the billing group the thing belongs to.</p>
                */
            billingGroupName?: string;
    }
    export namespace DescribeThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingResponse) => any;
    }
    export interface DescribeThingGroupRequest {
            /**
                * <p>The name of the thing group.</p>
                */
            thingGroupName: string | undefined;
    }
    export namespace DescribeThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingGroupRequest) => any;
    }
    export enum DynamicGroupStatus {
            ACTIVE = "ACTIVE",
            BUILDING = "BUILDING",
            REBUILDING = "REBUILDING"
    }
    /**
        * <p>The name and ARN of a group.</p>
        */
    export interface GroupNameAndArn {
            /**
                * <p>The group name.</p>
                */
            groupName?: string;
            /**
                * <p>The group ARN.</p>
                */
            groupArn?: string;
    }
    export namespace GroupNameAndArn {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GroupNameAndArn) => any;
    }
    /**
        * <p>Thing group metadata.</p>
        */
    export interface ThingGroupMetadata {
            /**
                * <p>The parent thing group name.</p>
                */
            parentGroupName?: string;
            /**
                * <p>The root parent thing group.</p>
                */
            rootToParentThingGroups?: GroupNameAndArn[];
            /**
                * <p>The UNIX timestamp of when the thing group was created.</p>
                */
            creationDate?: Date;
    }
    export namespace ThingGroupMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingGroupMetadata) => any;
    }
    export interface DescribeThingGroupResponse {
            /**
                * <p>The name of the thing group.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The thing group ID.</p>
                */
            thingGroupId?: string;
            /**
                * <p>The thing group ARN.</p>
                */
            thingGroupArn?: string;
            /**
                * <p>The version of the thing group.</p>
                */
            version?: number;
            /**
                * <p>The thing group properties.</p>
                */
            thingGroupProperties?: ThingGroupProperties;
            /**
                * <p>Thing group metadata.</p>
                */
            thingGroupMetadata?: ThingGroupMetadata;
            /**
                * <p>The dynamic thing group index name.</p>
                */
            indexName?: string;
            /**
                * <p>The dynamic thing group search query string.</p>
                */
            queryString?: string;
            /**
                * <p>The dynamic thing group query version.</p>
                */
            queryVersion?: string;
            /**
                * <p>The dynamic thing group status.</p>
                */
            status?: DynamicGroupStatus | string;
    }
    export namespace DescribeThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingGroupResponse) => any;
    }
    export interface DescribeThingRegistrationTaskRequest {
            /**
                * <p>The task ID.</p>
                */
            taskId: string | undefined;
    }
    export namespace DescribeThingRegistrationTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingRegistrationTaskRequest) => any;
    }
    export enum Status {
            Cancelled = "Cancelled",
            Cancelling = "Cancelling",
            Completed = "Completed",
            Failed = "Failed",
            InProgress = "InProgress"
    }
    export interface DescribeThingRegistrationTaskResponse {
            /**
                * <p>The task ID.</p>
                */
            taskId?: string;
            /**
                * <p>The task creation date.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date when the task was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The task's template.</p>
                */
            templateBody?: string;
            /**
                * <p>The S3 bucket that contains the input file.</p>
                */
            inputFileBucket?: string;
            /**
                * <p>The input file key.</p>
                */
            inputFileKey?: string;
            /**
                * <p>The role ARN that grants access to the input file bucket.</p>
                */
            roleArn?: string;
            /**
                * <p>The status of the bulk thing provisioning task.</p>
                */
            status?: Status | string;
            /**
                * <p>The message.</p>
                */
            message?: string;
            /**
                * <p>The number of things successfully provisioned.</p>
                */
            successCount?: number;
            /**
                * <p>The number of things that failed to be provisioned.</p>
                */
            failureCount?: number;
            /**
                * <p>The progress of the bulk provisioning task expressed as a percentage.</p>
                */
            percentageProgress?: number;
    }
    export namespace DescribeThingRegistrationTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingRegistrationTaskResponse) => any;
    }
    /**
        * <p>The input for the DescribeThingType operation.</p>
        */
    export interface DescribeThingTypeRequest {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName: string | undefined;
    }
    export namespace DescribeThingTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingTypeRequest) => any;
    }
    /**
        * <p>The ThingTypeMetadata contains additional information about the thing type including: creation date and
        * 			time, a value indicating whether the thing type is deprecated, and a date and time when time was
        * 			deprecated.</p>
        */
    export interface ThingTypeMetadata {
            /**
                * <p>Whether the thing type is deprecated. If <b>true</b>, no new things could be
                * 			associated with this type.</p>
                */
            deprecated?: boolean;
            /**
                * <p>The date and time when the thing type was deprecated.</p>
                */
            deprecationDate?: Date;
            /**
                * <p>The date and time when the thing type was created.</p>
                */
            creationDate?: Date;
    }
    export namespace ThingTypeMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingTypeMetadata) => any;
    }
    /**
        * <p>The output for the DescribeThingType operation.</p>
        */
    export interface DescribeThingTypeResponse {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The thing type ID.</p>
                */
            thingTypeId?: string;
            /**
                * <p>The thing type ARN.</p>
                */
            thingTypeArn?: string;
            /**
                * <p>The ThingTypeProperties contains information about the thing type including
                * 			description, and a list of searchable thing attribute names.</p>
                */
            thingTypeProperties?: ThingTypeProperties;
            /**
                * <p>The ThingTypeMetadata contains additional information about the thing type
                * 			including: creation date and time, a value indicating whether the thing type is
                * 			deprecated, and a date and time when it was deprecated.</p>
                */
            thingTypeMetadata?: ThingTypeMetadata;
    }
    export namespace DescribeThingTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeThingTypeResponse) => any;
    }
    export interface DetachPolicyRequest {
            /**
                * <p>The policy to detach.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The target from which the policy will be detached.</p>
                */
            target: string | undefined;
    }
    export namespace DetachPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachPolicyRequest) => any;
    }
    /**
        * <p>The input for the DetachPrincipalPolicy operation.</p>
        */
    export interface DetachPrincipalPolicyRequest {
            /**
                * <p>The name of the policy to detach.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The principal.</p>
                *          <p>Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
                */
            principal: string | undefined;
    }
    export namespace DetachPrincipalPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachPrincipalPolicyRequest) => any;
    }
    export interface DetachSecurityProfileRequest {
            /**
                * <p>The security profile that is detached.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>The ARN of the thing group from which the security profile is detached.</p>
                */
            securityProfileTargetArn: string | undefined;
    }
    export namespace DetachSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachSecurityProfileRequest) => any;
    }
    export interface DetachSecurityProfileResponse {
    }
    export namespace DetachSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachSecurityProfileResponse) => any;
    }
    /**
        * <p>The input for the DetachThingPrincipal operation.</p>
        */
    export interface DetachThingPrincipalRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>If the principal is a certificate, this value must be ARN of the certificate. If
                * 			the principal is an Amazon Cognito identity, this value must be the ID of the Amazon
                * 			Cognito identity.</p>
                */
            principal: string | undefined;
    }
    export namespace DetachThingPrincipalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachThingPrincipalRequest) => any;
    }
    /**
        * <p>The output from the DetachThingPrincipal operation.</p>
        */
    export interface DetachThingPrincipalResponse {
    }
    export namespace DetachThingPrincipalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachThingPrincipalResponse) => any;
    }
    /**
        * <p>The input for the DisableTopicRuleRequest operation.</p>
        */
    export interface DisableTopicRuleRequest {
            /**
                * <p>The name of the rule to disable.</p>
                */
            ruleName: string | undefined;
    }
    export namespace DisableTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisableTopicRuleRequest) => any;
    }
    /**
        * <p>The input for the EnableTopicRuleRequest operation.</p>
        */
    export interface EnableTopicRuleRequest {
            /**
                * <p>The name of the topic rule to enable.</p>
                */
            ruleName: string | undefined;
    }
    export namespace EnableTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableTopicRuleRequest) => any;
    }
    export interface GetBehaviorModelTrainingSummariesRequest {
            /**
                * <p>
                *       The name of the security profile.
                *     </p>
                */
            securityProfileName?: string;
            /**
                * <p>
                *       The maximum number of results to return at one time. The default is 25.
                *     </p>
                */
            maxResults?: number;
            /**
                * <p>
                *       The token for the next set of results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace GetBehaviorModelTrainingSummariesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBehaviorModelTrainingSummariesRequest) => any;
    }
    export enum ModelStatus {
            ACTIVE = "ACTIVE",
            EXPIRED = "EXPIRED",
            PENDING_BUILD = "PENDING_BUILD"
    }
    /**
        * <p>
        *             The summary of an ML Detect behavior model.
        *         </p>
        */
    export interface BehaviorModelTrainingSummary {
            /**
                * <p>
                *             The name of the security profile.
                *         </p>
                */
            securityProfileName?: string;
            /**
                * <p>
                *             The name of the behavior.
                *         </p>
                */
            behaviorName?: string;
            /**
                * <p>
                *             The date a training model started collecting data.
                *         </p>
                */
            trainingDataCollectionStartDate?: Date;
            /**
                * <p>
                *             The status of the behavior model.
                *         </p>
                */
            modelStatus?: ModelStatus | string;
            /**
                * <p>
                *             The percentage of datapoints collected.
                *         </p>
                */
            datapointsCollectionPercentage?: number;
            /**
                * <p>
                *             The date the model was last refreshed.
                *         </p>
                */
            lastModelRefreshDate?: Date;
    }
    export namespace BehaviorModelTrainingSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BehaviorModelTrainingSummary) => any;
    }
    export interface GetBehaviorModelTrainingSummariesResponse {
            /**
                * <p>
                *       A list of all ML Detect behaviors and their model status for a given Security Profile.
                *     </p>
                */
            summaries?: BehaviorModelTrainingSummary[];
            /**
                * <p>
                *       A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace GetBehaviorModelTrainingSummariesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBehaviorModelTrainingSummariesResponse) => any;
    }
    /**
        * <p>Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.</p>
        */
    export interface TermsAggregation {
            /**
                * <p>The number of buckets to return in the response. Default to 10.</p>
                */
            maxBuckets?: number;
    }
    export namespace TermsAggregation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TermsAggregation) => any;
    }
    /**
        * <p>The type of bucketed aggregation performed.</p>
        */
    export interface BucketsAggregationType {
            /**
                * <p>Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.</p>
                */
            termsAggregation?: TermsAggregation;
    }
    export namespace BucketsAggregationType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BucketsAggregationType) => any;
    }
    export interface GetBucketsAggregationRequest {
            /**
                * <p>The name of the index to search.</p>
                */
            indexName?: string;
            /**
                * <p>The search query string.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The aggregation field.</p>
                */
            aggregationField: string | undefined;
            /**
                * <p>The version of the query.</p>
                */
            queryVersion?: string;
            /**
                * <p>The basic control of the response shape and the bucket aggregation type to perform. </p>
                */
            bucketsAggregationType: BucketsAggregationType | undefined;
    }
    export namespace GetBucketsAggregationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketsAggregationRequest) => any;
    }
    /**
        * <p>A count of documents that meets a specific aggregation criteria.</p>
        */
    export interface Bucket {
            /**
                * <p>The value counted for the particular bucket.</p>
                */
            keyValue?: string;
            /**
                * <p>The number of documents that have the value counted for the particular bucket.</p>
                */
            count?: number;
    }
    export namespace Bucket {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Bucket) => any;
    }
    export interface GetBucketsAggregationResponse {
            /**
                * <p>The total number of things that fit the query string criteria.</p>
                */
            totalCount?: number;
            /**
                * <p>The main part of the response with a list of buckets. Each bucket contains a <code>keyValue</code> and a <code>count</code>.</p>
                *          <p>
                *             <code>keyValue</code>: The aggregation field value counted for the particular bucket.</p>
                *          <p>
                *             <code>count</code>: The number of documents that have that value.</p>
                */
            buckets?: Bucket[];
    }
    export namespace GetBucketsAggregationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketsAggregationResponse) => any;
    }
    export interface GetCardinalityRequest {
            /**
                * <p>The name of the index to search.</p>
                */
            indexName?: string;
            /**
                * <p>The search query string.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The field to aggregate.</p>
                */
            aggregationField?: string;
            /**
                * <p>The query version.</p>
                */
            queryVersion?: string;
    }
    export namespace GetCardinalityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCardinalityRequest) => any;
    }
    export interface GetCardinalityResponse {
            /**
                * <p>The approximate count of unique values that match the query.</p>
                */
            cardinality?: number;
    }
    export namespace GetCardinalityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCardinalityResponse) => any;
    }
    export interface GetEffectivePoliciesRequest {
            /**
                * <p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
                */
            principal?: string;
            /**
                * <p>The Cognito identity pool ID.</p>
                */
            cognitoIdentityPoolId?: string;
            /**
                * <p>The thing name.</p>
                */
            thingName?: string;
    }
    export namespace GetEffectivePoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEffectivePoliciesRequest) => any;
    }
    /**
        * <p>The policy that has the effect on the authorization results.</p>
        */
    export interface EffectivePolicy {
            /**
                * <p>The policy name.</p>
                */
            policyName?: string;
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
            /**
                * <p>The IAM policy document.</p>
                */
            policyDocument?: string;
    }
    export namespace EffectivePolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EffectivePolicy) => any;
    }
    export interface GetEffectivePoliciesResponse {
            /**
                * <p>The effective policies.</p>
                */
            effectivePolicies?: EffectivePolicy[];
    }
    export namespace GetEffectivePoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEffectivePoliciesResponse) => any;
    }
    export interface GetIndexingConfigurationRequest {
    }
    export namespace GetIndexingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetIndexingConfigurationRequest) => any;
    }
    export enum FieldType {
            BOOLEAN = "Boolean",
            NUMBER = "Number",
            STRING = "String"
    }
    /**
        * <p>Describes the name and data type at a field.</p>
        */
    export interface Field {
            /**
                * <p>The name of the field.</p>
                */
            name?: string;
            /**
                * <p>The data type of the field.</p>
                */
            type?: FieldType | string;
    }
    export namespace Field {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Field) => any;
    }
    export enum ThingGroupIndexingMode {
            OFF = "OFF",
            ON = "ON"
    }
    /**
        * <p>Thing group indexing configuration.</p>
        */
    export interface ThingGroupIndexingConfiguration {
            /**
                * <p>Thing group indexing mode.</p>
                */
            thingGroupIndexingMode: ThingGroupIndexingMode | string | undefined;
            /**
                * <p>Contains fields that are indexed and whose types are already known by the Fleet Indexing
                *       service.</p>
                */
            managedFields?: Field[];
            /**
                * <p>A list of thing group fields to index. This list cannot contain any managed fields. Use
                *       the GetIndexingConfiguration API to get a list of managed fields.</p>
                *          <p>Contains custom field names and their data type.</p>
                */
            customFields?: Field[];
    }
    export namespace ThingGroupIndexingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingGroupIndexingConfiguration) => any;
    }
    export enum DeviceDefenderIndexingMode {
            OFF = "OFF",
            VIOLATIONS = "VIOLATIONS"
    }
    /**
        * <p>Provides additional filters for specific data sources. Named shadow is the only data source that currently supports and requires a filter.
        *       To add named shadows to your fleet indexing configuration, set <code>namedShadowIndexingMode</code> to be <code>ON</code> and
        *       specify your shadow names in <code>filter</code>.</p>
        */
    export interface IndexingFilter {
            /**
                * <p>The shadow names that you select to index. The default maximum number of shadow names for indexing is 10. To increase
                *       the limit, see <a href="https://docs.aws.amazon.com/general/latest/gr/iot_device_management.html#fleet-indexing-limits">Amazon Web Services IoT Device Management
                *         Quotas</a> in the <i>Amazon Web Services General Reference</i>.
                *     </p>
                */
            namedShadowNames?: string[];
    }
    export namespace IndexingFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IndexingFilter) => any;
    }
    export enum NamedShadowIndexingMode {
            OFF = "OFF",
            ON = "ON"
    }
    export enum ThingConnectivityIndexingMode {
            OFF = "OFF",
            STATUS = "STATUS"
    }
    export enum ThingIndexingMode {
            OFF = "OFF",
            REGISTRY = "REGISTRY",
            REGISTRY_AND_SHADOW = "REGISTRY_AND_SHADOW"
    }
    /**
        * <p>The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing
        *         Thing Indexing</a>.</p>
        */
    export interface ThingIndexingConfiguration {
            /**
                * <p>Thing indexing mode. Valid values are:</p>
                *          <ul>
                *             <li>
                *                <p>REGISTRY – Your thing index contains registry data only.</p>
                *             </li>
                *             <li>
                *                <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p>
                *             </li>
                *             <li>
                *                <p>OFF - Thing indexing is disabled.</p>
                *             </li>
                *          </ul>
                */
            thingIndexingMode: ThingIndexingMode | string | undefined;
            /**
                * <p>Thing connectivity indexing mode. Valid values are: </p>
                *          <ul>
                *             <li>
                *                <p>STATUS – Your thing index contains connectivity status. To enable thing
                *           connectivity indexing, <i>thingIndexMode</i> must not be set to
                *           OFF.</p>
                *             </li>
                *             <li>
                *                <p>OFF - Thing connectivity status indexing is disabled.</p>
                *             </li>
                *          </ul>
                */
            thingConnectivityIndexingMode?: ThingConnectivityIndexingMode | string;
            /**
                * <p>Device Defender indexing mode. Valid values are:</p>
                *          <ul>
                *             <li>
                *                <p>VIOLATIONS – Your thing index contains Device Defender violations. To enable Device
                *           Defender indexing, <i>deviceDefenderIndexingMode</i> must not be set to
                *           OFF.</p>
                *             </li>
                *             <li>
                *                <p>OFF - Device Defender indexing is disabled.</p>
                *             </li>
                *          </ul>
                *         <p>For more information about Device Defender violations, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-detect.html">Device Defender Detect.</a>
                *          </p>
                */
            deviceDefenderIndexingMode?: DeviceDefenderIndexingMode | string;
            /**
                * <p>Named shadow indexing mode. Valid values are:</p>
                *          <ul>
                *             <li>
                *                <p>ON – Your thing index contains named shadow. To enable thing
                *           named shadow indexing, <i>namedShadowIndexingMode</i> must not be set to
                *           OFF.</p>
                *             </li>
                *             <li>
                *                <p>OFF - Named shadow indexing is disabled.</p>
                *             </li>
                *          </ul>
                *          <p>For more information about Shadows, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html">IoT Device Shadow service.</a>
                *          </p>
                */
            namedShadowIndexingMode?: NamedShadowIndexingMode | string;
            /**
                * <p>Contains fields that are indexed and whose types are already known by the Fleet Indexing
                *       service.</p>
                */
            managedFields?: Field[];
            /**
                * <p>Contains custom field names and their data type.</p>
                */
            customFields?: Field[];
            /**
                * <p>Provides additional filters for specific data sources. Named shadow is the only data source that currently supports and requires a filter.
                *       To add named shadows to your fleet indexing configuration, set <code>namedShadowIndexingMode</code> to be <code>ON</code> and
                *       specify your shadow names in <code>filter</code>.</p>
                */
            filter?: IndexingFilter;
    }
    export namespace ThingIndexingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingIndexingConfiguration) => any;
    }
    export interface GetIndexingConfigurationResponse {
            /**
                * <p>Thing indexing configuration.</p>
                */
            thingIndexingConfiguration?: ThingIndexingConfiguration;
            /**
                * <p>The index configuration.</p>
                */
            thingGroupIndexingConfiguration?: ThingGroupIndexingConfiguration;
    }
    export namespace GetIndexingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetIndexingConfigurationResponse) => any;
    }
    export interface GetJobDocumentRequest {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
    }
    export namespace GetJobDocumentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobDocumentRequest) => any;
    }
    export interface GetJobDocumentResponse {
            /**
                * <p>The job document content.</p>
                */
            document?: string;
    }
    export namespace GetJobDocumentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobDocumentResponse) => any;
    }
    /**
        * <p>The input for the GetLoggingOptions operation.</p>
        */
    export interface GetLoggingOptionsRequest {
    }
    export namespace GetLoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetLoggingOptionsRequest) => any;
    }
    /**
        * <p>The output from the GetLoggingOptions operation.</p>
        */
    export interface GetLoggingOptionsResponse {
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn?: string;
            /**
                * <p>The logging level.</p>
                */
            logLevel?: LogLevel | string;
    }
    export namespace GetLoggingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetLoggingOptionsResponse) => any;
    }
    export interface GetOTAUpdateRequest {
            /**
                * <p>The OTA update ID.</p>
                */
            otaUpdateId: string | undefined;
    }
    export namespace GetOTAUpdateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetOTAUpdateRequest) => any;
    }
    /**
        * <p>Error information.</p>
        */
    export interface ErrorInfo {
            /**
                * <p>The error code.</p>
                */
            code?: string;
            /**
                * <p>The error message.</p>
                */
            message?: string;
    }
    export namespace ErrorInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ErrorInfo) => any;
    }
    /**
        * <p>Information about an OTA update.</p>
        */
    export interface OTAUpdateInfo {
            /**
                * <p>The OTA update ID.</p>
                */
            otaUpdateId?: string;
            /**
                * <p>The OTA update ARN.</p>
                */
            otaUpdateArn?: string;
            /**
                * <p>The date when the OTA update was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date when the OTA update was last updated.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>A description of the OTA update.</p>
                */
            description?: string;
            /**
                * <p>The targets of the OTA update.</p>
                */
            targets?: string[];
            /**
                * <p>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both
                *              HTTP and MQTT are specified, the target device can choose the protocol.</p>
                */
            protocols?: (Protocol | string)[];
            /**
                * <p>Configuration for the rollout of OTA updates.</p>
                */
            awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
            /**
                * <p>Configuration information for pre-signed URLs. Valid when <code>protocols</code>
                *              contains HTTP.</p>
                */
            awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
            /**
                * <p>Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those
                *             things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also
                *             be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when
                *             the thing is added to a target group, even after the OTA update was completed by all things originally in
                *             the group. </p>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>A list of files associated with the OTA update.</p>
                */
            otaUpdateFiles?: OTAUpdateFile[];
            /**
                * <p>The status of the OTA update.</p>
                */
            otaUpdateStatus?: OTAUpdateStatus | string;
            /**
                * <p>The IoT job ID associated with the OTA update.</p>
                */
            awsIotJobId?: string;
            /**
                * <p>The IoT job ARN associated with the OTA update.</p>
                */
            awsIotJobArn?: string;
            /**
                * <p>Error information associated with the OTA update.</p>
                */
            errorInfo?: ErrorInfo;
            /**
                * <p>A collection of name/value pairs</p>
                */
            additionalParameters?: Record<string, string>;
    }
    export namespace OTAUpdateInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OTAUpdateInfo) => any;
    }
    export interface GetOTAUpdateResponse {
            /**
                * <p>The OTA update info.</p>
                */
            otaUpdateInfo?: OTAUpdateInfo;
    }
    export namespace GetOTAUpdateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetOTAUpdateResponse) => any;
    }
    export interface GetPercentilesRequest {
            /**
                * <p>The name of the index to search.</p>
                */
            indexName?: string;
            /**
                * <p>The search query string.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The field to aggregate.</p>
                */
            aggregationField?: string;
            /**
                * <p>The query version.</p>
                */
            queryVersion?: string;
            /**
                * <p>The percentile groups returned.</p>
                */
            percents?: number[];
    }
    export namespace GetPercentilesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPercentilesRequest) => any;
    }
    /**
        * <p>Describes the percentile and percentile value.</p>
        */
    export interface PercentPair {
            /**
                * <p>The percentile.</p>
                */
            percent?: number;
            /**
                * <p>The value of the percentile.</p>
                */
            value?: number;
    }
    export namespace PercentPair {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PercentPair) => any;
    }
    export interface GetPercentilesResponse {
            /**
                * <p>The percentile values of the aggregated fields.</p>
                */
            percentiles?: PercentPair[];
    }
    export namespace GetPercentilesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPercentilesResponse) => any;
    }
    /**
        * <p>The input for the GetPolicy operation.</p>
        */
    export interface GetPolicyRequest {
            /**
                * <p>The name of the policy.</p>
                */
            policyName: string | undefined;
    }
    export namespace GetPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPolicyRequest) => any;
    }
    /**
        * <p>The output from the GetPolicy operation.</p>
        */
    export interface GetPolicyResponse {
            /**
                * <p>The policy name.</p>
                */
            policyName?: string;
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
            /**
                * <p>The JSON document that describes the policy.</p>
                */
            policyDocument?: string;
            /**
                * <p>The default policy version ID.</p>
                */
            defaultVersionId?: string;
            /**
                * <p>The date the policy was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the policy was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The generation ID of the policy.</p>
                */
            generationId?: string;
    }
    export namespace GetPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPolicyResponse) => any;
    }
    /**
        * <p>The input for the GetPolicyVersion operation.</p>
        */
    export interface GetPolicyVersionRequest {
            /**
                * <p>The name of the policy.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId: string | undefined;
    }
    export namespace GetPolicyVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPolicyVersionRequest) => any;
    }
    /**
        * <p>The output from the GetPolicyVersion operation.</p>
        */
    export interface GetPolicyVersionResponse {
            /**
                * <p>The policy ARN.</p>
                */
            policyArn?: string;
            /**
                * <p>The policy name.</p>
                */
            policyName?: string;
            /**
                * <p>The JSON document that describes the policy.</p>
                */
            policyDocument?: string;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId?: string;
            /**
                * <p>Specifies whether the policy version is the default.</p>
                */
            isDefaultVersion?: boolean;
            /**
                * <p>The date the policy was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the policy was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>The generation ID of the policy version.</p>
                */
            generationId?: string;
    }
    export namespace GetPolicyVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPolicyVersionResponse) => any;
    }
    /**
        * <p>The input to the GetRegistrationCode operation.</p>
        */
    export interface GetRegistrationCodeRequest {
    }
    export namespace GetRegistrationCodeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegistrationCodeRequest) => any;
    }
    /**
        * <p>The output from the GetRegistrationCode operation.</p>
        */
    export interface GetRegistrationCodeResponse {
            /**
                * <p>The CA certificate registration code.</p>
                */
            registrationCode?: string;
    }
    export namespace GetRegistrationCodeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegistrationCodeResponse) => any;
    }
    export interface GetStatisticsRequest {
            /**
                * <p>The name of the index to search. The default value is <code>AWS_Things</code>.</p>
                */
            indexName?: string;
            /**
                * <p>The query used to search. You can specify "*" for the query string to get the count of all
                *       indexed things in your Amazon Web Services account.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The aggregation field name.</p>
                */
            aggregationField?: string;
            /**
                * <p>The version of the query used to search.</p>
                */
            queryVersion?: string;
    }
    export namespace GetStatisticsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStatisticsRequest) => any;
    }
    /**
        * <p>A map of key-value pairs for all supported statistics. For issues with missing or unexpected values for this API,
        *       consult <a href="https://docs.aws.amazon.com/iot/latest/developerguide/fleet-indexing-troubleshooting.html">
        *         Fleet indexing troubleshooting guide</a>.</p>
        */
    export interface Statistics {
            /**
                * <p>The count of things that match the query string criteria and contain a valid aggregation field value.</p>
                */
            count?: number;
            /**
                * <p>The average of the aggregated field values.</p>
                */
            average?: number;
            /**
                * <p>The sum of the aggregated field values.</p>
                */
            sum?: number;
            /**
                * <p>The minimum aggregated field value.</p>
                */
            minimum?: number;
            /**
                * <p>The maximum aggregated field value.</p>
                */
            maximum?: number;
            /**
                * <p>The sum of the squares of the aggregated field values.</p>
                */
            sumOfSquares?: number;
            /**
                * <p>The variance of the aggregated field values.</p>
                */
            variance?: number;
            /**
                * <p>The standard deviation of the aggregated field values.</p>
                */
            stdDeviation?: number;
    }
    export namespace Statistics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Statistics) => any;
    }
    export interface GetStatisticsResponse {
            /**
                * <p>The statistics returned by the Fleet Indexing service based on the query and aggregation
                *       field.</p>
                */
            statistics?: Statistics;
    }
    export namespace GetStatisticsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStatisticsResponse) => any;
    }
    /**
        * <p>The input for the GetTopicRule operation.</p>
        */
    export interface GetTopicRuleRequest {
            /**
                * <p>The name of the rule.</p>
                */
            ruleName: string | undefined;
    }
    export namespace GetTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTopicRuleRequest) => any;
    }
    /**
        * <p>Describes a rule.</p>
        */
    export interface TopicRule {
            /**
                * <p>The name of the rule.</p>
                */
            ruleName?: string;
            /**
                * <p>The SQL statement used to query the topic. When using a SQL query with multiple
                *          lines, be sure to escape the newline characters.</p>
                */
            sql?: string;
            /**
                * <p>The description of the rule.</p>
                */
            description?: string;
            /**
                * <p>The date and time the rule was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The actions associated with the rule.</p>
                */
            actions?: Action[];
            /**
                * <p>Specifies whether the rule is disabled.</p>
                */
            ruleDisabled?: boolean;
            /**
                * <p>The version of the SQL rules engine to use when evaluating the rule.</p>
                */
            awsIotSqlVersion?: string;
            /**
                * <p>The action to perform when an error occurs.</p>
                */
            errorAction?: Action;
    }
    export namespace TopicRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRule) => any;
    }
    /**
        * <p>The output from the GetTopicRule operation.</p>
        */
    export interface GetTopicRuleResponse {
            /**
                * <p>The rule ARN.</p>
                */
            ruleArn?: string;
            /**
                * <p>The rule.</p>
                */
            rule?: TopicRule;
    }
    export namespace GetTopicRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTopicRuleResponse) => any;
    }
    export interface GetTopicRuleDestinationRequest {
            /**
                * <p>The ARN of the topic rule destination.</p>
                */
            arn: string | undefined;
    }
    export namespace GetTopicRuleDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTopicRuleDestinationRequest) => any;
    }
    export interface GetTopicRuleDestinationResponse {
            /**
                * <p>The topic rule destination.</p>
                */
            topicRuleDestination?: TopicRuleDestination;
    }
    export namespace GetTopicRuleDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTopicRuleDestinationResponse) => any;
    }
    export interface GetV2LoggingOptionsRequest {
    }
    export namespace GetV2LoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetV2LoggingOptionsRequest) => any;
    }
    export interface GetV2LoggingOptionsResponse {
            /**
                * <p>The IAM role ARN IoT uses to write to your CloudWatch logs.</p>
                */
            roleArn?: string;
            /**
                * <p>The default log level.</p>
                */
            defaultLogLevel?: LogLevel | string;
            /**
                * <p>Disables all logs.</p>
                */
            disableAllLogs?: boolean;
    }
    export namespace GetV2LoggingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetV2LoggingOptionsResponse) => any;
    }
    /**
        * <p>The resource is not configured.</p>
        */
    export class NotConfiguredException extends __BaseException {
            readonly name: "NotConfiguredException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotConfiguredException, __BaseException>);
    }
    export enum BehaviorCriteriaType {
            MACHINE_LEARNING = "MACHINE_LEARNING",
            STATIC = "STATIC",
            STATISTICAL = "STATISTICAL"
    }
    export interface ListActiveViolationsRequest {
            /**
                * <p>The name of the thing whose active violations are listed.</p>
                */
            thingName?: string;
            /**
                * <p>The name of the Device Defender security profile for which violations are listed.</p>
                */
            securityProfileName?: string;
            /**
                * <p>
                *       The criteria for a behavior.
                *     </p>
                */
            behaviorCriteriaType?: BehaviorCriteriaType | string;
            /**
                * <p>
                *       A list of all suppressed alerts.
                *     </p>
                */
            listSuppressedAlerts?: boolean;
            /**
                * <p>The verification state of the violation (detect alarm).</p>
                */
            verificationState?: VerificationState | string;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListActiveViolationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListActiveViolationsRequest) => any;
    }
    export interface ListActiveViolationsResponse {
            /**
                * <p>The list of active violations.</p>
                */
            activeViolations?: ActiveViolation[];
            /**
                * <p>A token that can be used to retrieve the next set of results,
                *             or <code>null</code> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListActiveViolationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListActiveViolationsResponse) => any;
    }
    export interface ListAttachedPoliciesRequest {
            /**
                * <p>The group or principal for which the policies will be listed. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
                */
            target: string | undefined;
            /**
                * <p>When true, recursively list attached policies.</p>
                */
            recursive?: boolean;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The maximum number of results to be returned per request.</p>
                */
            pageSize?: number;
    }
    export namespace ListAttachedPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttachedPoliciesRequest) => any;
    }
    export interface ListAttachedPoliciesResponse {
            /**
                * <p>The policies.</p>
                */
            policies?: Policy[];
            /**
                * <p>The token to retrieve the next set of results, or ``null`` if there are no more
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListAttachedPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttachedPoliciesResponse) => any;
    }
    export interface ListAuditFindingsRequest {
            /**
                * <p>A filter to limit results to the audit with the specified ID. You must
                *             specify either the taskId or the startTime and endTime, but not both.</p>
                */
            taskId?: string;
            /**
                * <p>A filter to limit results to the findings for the specified audit check.</p>
                */
            checkName?: string;
            /**
                * <p>Information identifying the noncompliant resource.</p>
                */
            resourceIdentifier?: ResourceIdentifier;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>A filter to limit results to those found after the specified time. You must
                *             specify either the startTime and endTime or the taskId, but not both.</p>
                */
            startTime?: Date;
            /**
                * <p>A filter to limit results to those found before the specified time. You must
                *             specify either the startTime and endTime or the taskId, but not both.</p>
                */
            endTime?: Date;
            /**
                * <p>
                *       Boolean flag indicating whether only the suppressed findings or the unsuppressed findings should be listed. If this parameter isn't provided, the response will list both suppressed and unsuppressed findings.
                *     </p>
                */
            listSuppressedFindings?: boolean;
    }
    export namespace ListAuditFindingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditFindingsRequest) => any;
    }
    export interface ListAuditFindingsResponse {
            /**
                * <p>The findings (results) of the audit.</p>
                */
            findings?: AuditFinding[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code>
                *             if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAuditFindingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditFindingsResponse) => any;
    }
    export interface ListAuditMitigationActionsExecutionsRequest {
            /**
                * <p>Specify this filter to limit results to actions for a specific audit mitigation actions task.</p>
                */
            taskId: string | undefined;
            /**
                * <p>Specify this filter to limit results to those with a specific status.</p>
                */
            actionStatus?: AuditMitigationActionsExecutionStatus | string;
            /**
                * <p>Specify this filter to limit results to those that were applied to a specific audit finding.</p>
                */
            findingId: string | undefined;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAuditMitigationActionsExecutionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditMitigationActionsExecutionsRequest) => any;
    }
    export interface ListAuditMitigationActionsExecutionsResponse {
            /**
                * <p>A set of task execution results based on the input parameters. Details include the mitigation action applied, start time, and task status.</p>
                */
            actionsExecutions?: AuditMitigationActionExecutionMetadata[];
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAuditMitigationActionsExecutionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditMitigationActionsExecutionsResponse) => any;
    }
    export interface ListAuditMitigationActionsTasksRequest {
            /**
                * <p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>
                */
            auditTaskId?: string;
            /**
                * <p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>
                */
            findingId?: string;
            /**
                * <p>Specify this filter to limit results to tasks that are in a specific state.</p>
                */
            taskStatus?: AuditMitigationActionsTaskStatus | string;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>
                */
            startTime: Date | undefined;
            /**
                * <p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>
                */
            endTime: Date | undefined;
    }
    export namespace ListAuditMitigationActionsTasksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditMitigationActionsTasksRequest) => any;
    }
    export interface ListAuditMitigationActionsTasksResponse {
            /**
                * <p>The collection of audit mitigation tasks that matched the filter criteria.</p>
                */
            tasks?: AuditMitigationActionsTaskMetadata[];
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAuditMitigationActionsTasksResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditMitigationActionsTasksResponse) => any;
    }
    export interface ListAuditSuppressionsRequest {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName?: string;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier?: ResourceIdentifier;
            /**
                * <p>
                *       Determines whether suppressions are listed in ascending order by expiration date or not. If parameter isn't provided, <code>ascendingOrder=true</code>.
                *     </p>
                */
            ascendingOrder?: boolean;
            /**
                * <p>
                *       The token for the next set of results.
                *     </p>
                */
            nextToken?: string;
            /**
                * <p>
                *       The maximum number of results to return at one time. The default is 25.
                *     </p>
                */
            maxResults?: number;
    }
    export namespace ListAuditSuppressionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditSuppressionsRequest) => any;
    }
    export interface ListAuditSuppressionsResponse {
            /**
                * <p>
                *       List of audit suppressions.
                *     </p>
                */
            suppressions?: AuditSuppression[];
            /**
                * <p>
                *       A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace ListAuditSuppressionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditSuppressionsResponse) => any;
    }
    export interface ListAuditTasksRequest {
            /**
                * <p>The beginning of the time period. Audit information is retained for a
                *               limited time (90 days). Requesting a start time prior to what is retained
                *               results in an "InvalidRequestException".</p>
                */
            startTime: Date | undefined;
            /**
                * <p>The end of the time period.</p>
                */
            endTime: Date | undefined;
            /**
                * <p>A filter to limit the output to the specified type of audit: can be one of
                *             "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".</p>
                */
            taskType?: AuditTaskType | string;
            /**
                * <p>A filter to limit the output to audits with the specified completion
                *             status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".</p>
                */
            taskStatus?: AuditTaskStatus | string;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
    }
    export namespace ListAuditTasksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditTasksRequest) => any;
    }
    export interface ListAuditTasksResponse {
            /**
                * <p>The audits that were performed during the specified time period.</p>
                */
            tasks?: AuditTaskMetadata[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code>
                *             if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAuditTasksResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuditTasksResponse) => any;
    }
    export interface ListAuthorizersRequest {
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            pageSize?: number;
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Return the list of authorizers in ascending alphabetical order.</p>
                */
            ascendingOrder?: boolean;
            /**
                * <p>The status of the list authorizers request.</p>
                */
            status?: AuthorizerStatus | string;
    }
    export namespace ListAuthorizersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuthorizersRequest) => any;
    }
    export interface ListAuthorizersResponse {
            /**
                * <p>The authorizers.</p>
                */
            authorizers?: AuthorizerSummary[];
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListAuthorizersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAuthorizersResponse) => any;
    }
    export interface ListBillingGroupsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return per request.</p>
                */
            maxResults?: number;
            /**
                * <p>Limit the results to billing groups whose names have the given prefix.</p>
                */
            namePrefixFilter?: string;
    }
    export namespace ListBillingGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBillingGroupsRequest) => any;
    }
    export interface ListBillingGroupsResponse {
            /**
                * <p>The list of billing groups.</p>
                */
            billingGroups?: GroupNameAndArn[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListBillingGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBillingGroupsResponse) => any;
    }
    /**
        * <p>Input for the ListCACertificates operation.</p>
        */
    export interface ListCACertificatesRequest {
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Determines the order of the results.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListCACertificatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCACertificatesRequest) => any;
    }
    /**
        * <p>A CA certificate.</p>
        */
    export interface CACertificate {
            /**
                * <p>The ARN of the CA certificate.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the CA certificate.</p>
                */
            certificateId?: string;
            /**
                * <p>The status of the CA certificate.</p>
                *          <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
                */
            status?: CACertificateStatus | string;
            /**
                * <p>The date the CA certificate was created.</p>
                */
            creationDate?: Date;
    }
    export namespace CACertificate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CACertificate) => any;
    }
    /**
        * <p>The output from the ListCACertificates operation.</p>
        */
    export interface ListCACertificatesResponse {
            /**
                * <p>The CA certificates registered in your Amazon Web Services account.</p>
                */
            certificates?: CACertificate[];
            /**
                * <p>The current position within the list of CA certificates.</p>
                */
            nextMarker?: string;
    }
    export namespace ListCACertificatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCACertificatesResponse) => any;
    }
    /**
        * <p>The input for the ListCertificates operation.</p>
        */
    export interface ListCertificatesRequest {
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Specifies the order for results. If True, the results are returned in ascending
                *          order, based on the creation date.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListCertificatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCertificatesRequest) => any;
    }
    /**
        * <p>Information about a certificate.</p>
        */
    export interface Certificate {
            /**
                * <p>The ARN of the certificate.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId?: string;
            /**
                * <p>The status of the certificate.</p>
                *          <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
                */
            status?: CertificateStatus | string;
            /**
                * <p>The mode of the certificate.</p>
                *          <p>
                *             <code>DEFAULT</code>: A certificate in <code>DEFAULT</code> mode is either generated by
                *          Amazon Web Services IoT Core or registered with an issuer certificate authority (CA) in <code>DEFAULT</code> mode. Devices with
                *          certificates in <code>DEFAULT</code> mode aren't required to send the Server Name
                *          Indication (SNI) extension when connecting to Amazon Web Services IoT Core. However, to use features such as
                *          custom domains and VPC endpoints, we recommend that you use the SNI extension when
                *          connecting to Amazon Web Services IoT Core.</p>
                *          <p>
                *             <code>SNI_ONLY</code>: A certificate in <code>SNI_ONLY</code> mode is registered without an issuer CA. Devices with certificates
                *          in <code>SNI_ONLY</code> mode must send the SNI extension when connecting to Amazon Web Services IoT Core. </p>
                */
            certificateMode?: CertificateMode | string;
            /**
                * <p>The date and time the certificate was created.</p>
                */
            creationDate?: Date;
    }
    export namespace Certificate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Certificate) => any;
    }
    /**
        * <p>The output of the ListCertificates operation.</p>
        */
    export interface ListCertificatesResponse {
            /**
                * <p>The descriptions of the certificates.</p>
                */
            certificates?: Certificate[];
            /**
                * <p>The marker for the next set of results, or null if there are no additional
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListCertificatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCertificatesResponse) => any;
    }
    /**
        * <p>The input to the ListCertificatesByCA operation.</p>
        */
    export interface ListCertificatesByCARequest {
            /**
                * <p>The ID of the CA certificate. This operation will list all registered device
                *          certificate that were signed by this CA certificate.</p>
                */
            caCertificateId: string | undefined;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Specifies the order for results. If True, the results are returned in ascending
                *          order, based on the creation date.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListCertificatesByCARequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCertificatesByCARequest) => any;
    }
    /**
        * <p>The output of the ListCertificatesByCA operation.</p>
        */
    export interface ListCertificatesByCAResponse {
            /**
                * <p>The device certificates signed by the specified CA certificate.</p>
                */
            certificates?: Certificate[];
            /**
                * <p>The marker for the next set of results, or null if there are no additional
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListCertificatesByCAResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCertificatesByCAResponse) => any;
    }
    export interface ListCustomMetricsRequest {
            /**
                * <p>
                *       The token for the next set of results.
                *     </p>
                */
            nextToken?: string;
            /**
                * <p>
                *       The maximum number of results to return at one time. The default is 25.
                *     </p>
                */
            maxResults?: number;
    }
    export namespace ListCustomMetricsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCustomMetricsRequest) => any;
    }
    export interface ListCustomMetricsResponse {
            /**
                * <p>
                *       The name of the custom metric.
                *     </p>
                */
            metricNames?: string[];
            /**
                * <p>
                *       A token that can be used to retrieve the next set of results,
                *       or <code>null</code> if there are no additional results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace ListCustomMetricsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCustomMetricsResponse) => any;
    }
    export interface ListDetectMitigationActionsExecutionsRequest {
            /**
                * <p>
                *       The unique identifier of the task.
                *     </p>
                */
            taskId?: string;
            /**
                * <p>
                *       The unique identifier of the violation.
                *     </p>
                */
            violationId?: string;
            /**
                * <p>
                *       The name of the thing whose mitigation actions are listed.
                *     </p>
                */
            thingName?: string;
            /**
                * <p>
                *       A filter to limit results to those found after the specified time. You must
                *       specify either the startTime and endTime or the taskId, but not both.
                *     </p>
                */
            startTime?: Date;
            /**
                * <p>
                *       The end of the time period for which ML Detect mitigation actions executions are returned.
                *     </p>
                */
            endTime?: Date;
            /**
                * <p>
                *       The maximum number of results to return at one time. The default is 25.
                *     </p>
                */
            maxResults?: number;
            /**
                * <p>
                *       The token for the next set of results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace ListDetectMitigationActionsExecutionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDetectMitigationActionsExecutionsRequest) => any;
    }
    export enum DetectMitigationActionExecutionStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SKIPPED = "SKIPPED",
            SUCCESSFUL = "SUCCESSFUL"
    }
    /**
        * <p>
        *             Describes which mitigation actions should be executed.
        *         </p>
        */
    export interface DetectMitigationActionExecution {
            /**
                * <p>
                *             The unique identifier of the task.
                *         </p>
                */
            taskId?: string;
            /**
                * <p>
                *             The unique identifier of the violation.
                *         </p>
                */
            violationId?: string;
            /**
                * <p>
                *             The friendly name that uniquely identifies the mitigation action.
                *         </p>
                */
            actionName?: string;
            /**
                * <p>
                *             The name of the thing.
                *         </p>
                */
            thingName?: string;
            /**
                * <p>
                *             The date a mitigation action was started.
                *         </p>
                */
            executionStartDate?: Date;
            /**
                * <p>
                *             The date a mitigation action ended.
                *         </p>
                */
            executionEndDate?: Date;
            /**
                * <p>
                *             The status of a mitigation action.
                *         </p>
                */
            status?: DetectMitigationActionExecutionStatus | string;
            /**
                * <p>
                *             The error code of a mitigation action.
                *         </p>
                */
            errorCode?: string;
            /**
                * <p>
                *             The message of a mitigation action.
                *         </p>
                */
            message?: string;
    }
    export namespace DetectMitigationActionExecution {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetectMitigationActionExecution) => any;
    }
    export interface ListDetectMitigationActionsExecutionsResponse {
            /**
                * <p>
                *       List of actions executions.
                *     </p>
                */
            actionsExecutions?: DetectMitigationActionExecution[];
            /**
                * <p>
                *       A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace ListDetectMitigationActionsExecutionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDetectMitigationActionsExecutionsResponse) => any;
    }
    export interface ListDetectMitigationActionsTasksRequest {
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
            /**
                * <p>
                *       The token for the next set of results.
                *     </p>
                */
            nextToken?: string;
            /**
                * <p>
                *       A filter to limit results to those found after the specified time. You must
                *       specify either the startTime and endTime or the taskId, but not both.
                *     </p>
                */
            startTime: Date | undefined;
            /**
                * <p>
                *       The end of the time period for which ML Detect mitigation actions tasks are returned.
                *     </p>
                */
            endTime: Date | undefined;
    }
    export namespace ListDetectMitigationActionsTasksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDetectMitigationActionsTasksRequest) => any;
    }
    export interface ListDetectMitigationActionsTasksResponse {
            /**
                * <p>
                *       The collection of ML Detect mitigation tasks that matched the filter criteria.
                *     </p>
                */
            tasks?: DetectMitigationActionsTaskSummary[];
            /**
                * <p>
                *       A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.
                *     </p>
                */
            nextToken?: string;
    }
    export namespace ListDetectMitigationActionsTasksResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDetectMitigationActionsTasksResponse) => any;
    }
    export interface ListDimensionsRequest {
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to retrieve at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListDimensionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDimensionsRequest) => any;
    }
    export interface ListDimensionsResponse {
            /**
                * <p>A list of the names of the defined dimensions. Use <code>DescribeDimension</code> to get details for a dimension.</p>
                */
            dimensionNames?: string[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListDimensionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDimensionsResponse) => any;
    }
    export interface ListDomainConfigurationsRequest {
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>The type of service delivered by the endpoint.</p>
                */
            serviceType?: ServiceType | string;
    }
    export namespace ListDomainConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainConfigurationsRequest) => any;
    }
    /**
        * <p>The summary of a domain configuration. A domain configuration specifies custom IoT-specific information about a domain.
        *          A domain configuration can be associated with an Amazon Web Services-managed domain
        *          (for example, dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain, or a default endpoint.</p>
        *          <ul>
        *             <li>
        *                <p>Data</p>
        *             </li>
        *             <li>
        *                <p>Jobs</p>
        *             </li>
        *             <li>
        *                <p>CredentialProvider</p>
        *             </li>
        *          </ul>
        */
    export interface DomainConfigurationSummary {
            /**
                * <p>The name of the domain configuration. This value must be unique to a region.</p>
                */
            domainConfigurationName?: string;
            /**
                * <p>The ARN of the domain configuration.</p>
                */
            domainConfigurationArn?: string;
            /**
                * <p>The type of service delivered by the endpoint.</p>
                */
            serviceType?: ServiceType | string;
    }
    export namespace DomainConfigurationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainConfigurationSummary) => any;
    }
    export interface ListDomainConfigurationsResponse {
            /**
                * <p>A list of objects that contain summary information about the user's domain configurations.</p>
                */
            domainConfigurations?: DomainConfigurationSummary[];
            /**
                * <p>The marker for the next set of results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListDomainConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainConfigurationsResponse) => any;
    }
    export interface ListFleetMetricsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response;
                *        otherwise <code>null</code> to receive the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in this operation.</p>
                */
            maxResults?: number;
    }
    export namespace ListFleetMetricsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFleetMetricsRequest) => any;
    }
    /**
        * <p>The name and ARN of a fleet metric.</p>
        */
    export interface FleetMetricNameAndArn {
            /**
                * <p>The fleet metric name.</p>
                */
            metricName?: string;
            /**
                * <p>The fleet metric ARN.</p>
                */
            metricArn?: string;
    }
    export namespace FleetMetricNameAndArn {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FleetMetricNameAndArn) => any;
    }
    export interface ListFleetMetricsResponse {
            /**
                * <p>The list of fleet metrics objects.</p>
                */
            fleetMetrics?: FleetMetricNameAndArn[];
            /**
                * <p>The token for the next set of results. Will not be returned if the operation has returned
                *       all results.</p>
                */
            nextToken?: string;
    }
    export namespace ListFleetMetricsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFleetMetricsResponse) => any;
    }
    export interface ListIndicesRequest {
            /**
                * <p>The token used to get the next set of results, or <code>null</code> if there are no additional
                *       results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListIndicesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIndicesRequest) => any;
    }
    export interface ListIndicesResponse {
            /**
                * <p>The index names.</p>
                */
            indexNames?: string[];
            /**
                * <p>The token used to get the next set of results, or <code>null</code> if there are no additional
                *       results.</p>
                */
            nextToken?: string;
    }
    export namespace ListIndicesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIndicesResponse) => any;
    }
    export interface ListJobExecutionsForJobRequest {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The status of the job.</p>
                */
            status?: JobExecutionStatus | string;
            /**
                * <p>The maximum number of results to be returned per request.</p>
                */
            maxResults?: number;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobExecutionsForJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobExecutionsForJobRequest) => any;
    }
    /**
        * <p>The job execution summary.</p>
        */
    export interface JobExecutionSummary {
            /**
                * <p>The status of the job execution.</p>
                */
            status?: JobExecutionStatus | string;
            /**
                * <p>The time, in seconds since the epoch, when the job execution was queued.</p>
                */
            queuedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job execution started.</p>
                */
            startedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on
                *             this particular device. It can be used later in commands which return or update job execution
                *             information.</p>
                */
            executionNumber?: number;
            /**
                * <p>The number that indicates how many retry attempts have been completed for this
                *         job on this device.</p>
                */
            retryAttempt?: number;
    }
    export namespace JobExecutionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionSummary) => any;
    }
    /**
        * <p>Contains a summary of information about job executions for a specific job.</p>
        */
    export interface JobExecutionSummaryForJob {
            /**
                * <p>The ARN of the thing on which the job execution is running.</p>
                */
            thingArn?: string;
            /**
                * <p>Contains a subset of information about a job execution.</p>
                */
            jobExecutionSummary?: JobExecutionSummary;
    }
    export namespace JobExecutionSummaryForJob {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionSummaryForJob) => any;
    }
    export interface ListJobExecutionsForJobResponse {
            /**
                * <p>A list of job execution summaries.</p>
                */
            executionSummaries?: JobExecutionSummaryForJob[];
            /**
                * <p>The token for the next set of results, or <b>null</b> if there are no
                *             additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobExecutionsForJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobExecutionsForJobResponse) => any;
    }
    export interface ListJobExecutionsForThingRequest {
            /**
                * <p>The thing name.</p>
                */
            thingName: string | undefined;
            /**
                * <p>An optional filter that lets you search for jobs that have the specified status.</p>
                */
            status?: JobExecutionStatus | string;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
            /**
                * <p>The maximum number of results to be returned per request.</p>
                */
            maxResults?: number;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
    }
    export namespace ListJobExecutionsForThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobExecutionsForThingRequest) => any;
    }
    /**
        * <p>The job execution summary for a thing.</p>
        */
    export interface JobExecutionSummaryForThing {
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>Contains a subset of information about a job execution.</p>
                */
            jobExecutionSummary?: JobExecutionSummary;
    }
    export namespace JobExecutionSummaryForThing {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobExecutionSummaryForThing) => any;
    }
    export interface ListJobExecutionsForThingResponse {
            /**
                * <p>A list of job execution summaries.</p>
                */
            executionSummaries?: JobExecutionSummaryForThing[];
            /**
                * <p>The token for the next set of results, or <b>null</b> if there are no
                *             additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobExecutionsForThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobExecutionsForThingResponse) => any;
    }
    export interface ListJobsRequest {
            /**
                * <p>An optional filter that lets you search for jobs that have the specified status.</p>
                */
            status?: JobStatus | string;
            /**
                * <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things
                *             specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing
                *             when a change is detected in a target. For example, a job will run on a thing when the thing is added to a
                *             target group, even after the job was completed by all things originally in the group. </p>
                *         <note>
                *             <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets.
                *                 By using continuous jobs, devices that join the group receive the job execution even after the job has
                *                 been created.</p>
                *         </note>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>The maximum number of results to return per request.</p>
                */
            maxResults?: number;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>A filter that limits the returned jobs to those for the specified group.</p>
                */
            thingGroupName?: string;
            /**
                * <p>A filter that limits the returned jobs to those for the specified group.</p>
                */
            thingGroupId?: string;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
    }
    export namespace ListJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsRequest) => any;
    }
    /**
        * <p>The job summary.</p>
        */
    export interface JobSummary {
            /**
                * <p>The job ARN.</p>
                */
            jobArn?: string;
            /**
                * <p>The unique identifier you assigned to this job when it was created.</p>
                */
            jobId?: string;
            /**
                * <p>The ID of the thing group.</p>
                */
            thingGroupId?: string;
            /**
                * <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things
                *             specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing
                *             when a change is detected in a target. For example, a job will run on a thing when the thing is added to a
                *             target group, even after the job was completed by all things originally in the group.</p>
                *         <note>
                *             <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets.
                *                 By using continuous jobs, devices that join the group receive the job execution even after the job has
                *                 been created.</p>
                *         </note>
                */
            targetSelection?: TargetSelection | string;
            /**
                * <p>The job summary status.</p>
                */
            status?: JobStatus | string;
            /**
                * <p>The time, in seconds since the epoch, when the job was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>The time, in seconds since the epoch, when the job completed.</p>
                */
            completedAt?: Date;
            /**
                * <p>Indicates whether a job is concurrent. Will be true when a job is
                *             rolling out new job executions or canceling previously created executions,
                *             otherwise false.</p>
                */
            isConcurrent?: boolean;
    }
    export namespace JobSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobSummary) => any;
    }
    export interface ListJobsResponse {
            /**
                * <p>A list of jobs.</p>
                */
            jobs?: JobSummary[];
            /**
                * <p>The token for the next set of results, or <b>null</b> if there are no
                *             additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsResponse) => any;
    }
    export interface ListJobTemplatesRequest {
            /**
                * <p>The maximum number of results to return in the list.</p>
                */
            maxResults?: number;
            /**
                * <p>The token to use to return the next set of results in the list.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobTemplatesRequest) => any;
    }
    /**
        * <p>An object that contains information about the job template.</p>
        */
    export interface JobTemplateSummary {
            /**
                * <p>The ARN of the job template.</p>
                */
            jobTemplateArn?: string;
            /**
                * <p>The unique identifier of the job template.</p>
                */
            jobTemplateId?: string;
            /**
                * <p>A description of the job template.</p>
                */
            description?: string;
            /**
                * <p>The time, in seconds since the epoch, when the job template was created.</p>
                */
            createdAt?: Date;
    }
    export namespace JobTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobTemplateSummary) => any;
    }
    export interface ListJobTemplatesResponse {
            /**
                * <p>A list of objects that contain information about the job templates.</p>
                */
            jobTemplates?: JobTemplateSummary[];
            /**
                * <p>The token for the next set of results, or <b>null</b> if there are no
                *             additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListJobTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobTemplatesResponse) => any;
    }
    export interface ListManagedJobTemplatesRequest {
            /**
                * <p>An optional parameter for template name. If specified, only the versions of the
                *             managed job templates that have the specified template name will be returned.</p>
                */
            templateName?: string;
            /**
                * <p>Maximum number of entries that can be returned.</p>
                */
            maxResults?: number;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListManagedJobTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListManagedJobTemplatesRequest) => any;
    }
    /**
        * <p>An object that contains information about the managed template.</p>
        */
    export interface ManagedJobTemplateSummary {
            /**
                * <p>The Amazon Resource Name (ARN) for a managed template.</p>
                */
            templateArn?: string;
            /**
                * <p>The unique Name for a managed template.</p>
                */
            templateName?: string;
            /**
                * <p>The description for a managed template.</p>
                */
            description?: string;
            /**
                * <p>A list of environments that are supported with the managed job template.</p>
                */
            environments?: string[];
            /**
                * <p>The version for a managed template.</p>
                */
            templateVersion?: string;
    }
    export namespace ManagedJobTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ManagedJobTemplateSummary) => any;
    }
    export interface ListManagedJobTemplatesResponse {
            /**
                * <p>A list of managed job templates that are returned.</p>
                */
            managedJobTemplates?: ManagedJobTemplateSummary[];
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListManagedJobTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListManagedJobTemplatesResponse) => any;
    }
    export interface ListMetricValuesRequest {
            /**
                * <p>The name of the thing for which security profile metric values are returned.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the security profile metric for which values are returned.</p>
                */
            metricName: string | undefined;
            /**
                * <p>The dimension name.</p>
                */
            dimensionName?: string;
            /**
                * <p>The dimension value operator.</p>
                */
            dimensionValueOperator?: DimensionValueOperator | string;
            /**
                * <p>The start of the time period for which metric values are returned.</p>
                */
            startTime: Date | undefined;
            /**
                * <p>The end of the time period for which metric values are returned.</p>
                */
            endTime: Date | undefined;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListMetricValuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMetricValuesRequest) => any;
    }
    /**
        * <p>A metric.</p>
        */
    export interface MetricDatum {
            /**
                * <p>The time the metric value was reported.</p>
                */
            timestamp?: Date;
            /**
                * <p>The value reported for the metric.</p>
                */
            value?: MetricValue;
    }
    export namespace MetricDatum {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricDatum) => any;
    }
    export interface ListMetricValuesResponse {
            /**
                * <p>The data the thing reports for the metric during the specified time period.</p>
                */
            metricDatumList?: MetricDatum[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code>
                *         if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListMetricValuesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMetricValuesResponse) => any;
    }
    export interface ListMitigationActionsRequest {
            /**
                * <p>Specify a value to limit the result to mitigation actions with a specific action type.</p>
                */
            actionType?: MitigationActionType | string;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListMitigationActionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMitigationActionsRequest) => any;
    }
    /**
        * <p>Information that identifies a mitigation action. This information is returned by ListMitigationActions.</p>
        */
    export interface MitigationActionIdentifier {
            /**
                * <p>The friendly name of the mitigation action.</p>
                */
            actionName?: string;
            /**
                * <p>The IAM role ARN used to apply this mitigation action.</p>
                */
            actionArn?: string;
            /**
                * <p>The date when this mitigation action was created.</p>
                */
            creationDate?: Date;
    }
    export namespace MitigationActionIdentifier {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MitigationActionIdentifier) => any;
    }
    export interface ListMitigationActionsResponse {
            /**
                * <p>A set of actions that matched the specified filter criteria.</p>
                */
            actionIdentifiers?: MitigationActionIdentifier[];
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListMitigationActionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMitigationActionsResponse) => any;
    }
    export interface ListOTAUpdatesRequest {
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>A token used to retrieve the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The OTA update job status.</p>
                */
            otaUpdateStatus?: OTAUpdateStatus | string;
    }
    export namespace ListOTAUpdatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOTAUpdatesRequest) => any;
    }
    /**
        * <p>An OTA update summary.</p>
        */
    export interface OTAUpdateSummary {
            /**
                * <p>The OTA update ID.</p>
                */
            otaUpdateId?: string;
            /**
                * <p>The OTA update ARN.</p>
                */
            otaUpdateArn?: string;
            /**
                * <p>The date when the OTA update was created.</p>
                */
            creationDate?: Date;
    }
    export namespace OTAUpdateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OTAUpdateSummary) => any;
    }
    export interface ListOTAUpdatesResponse {
            /**
                * <p>A list of OTA update jobs.</p>
                */
            otaUpdates?: OTAUpdateSummary[];
            /**
                * <p>A token to use to get the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListOTAUpdatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOTAUpdatesResponse) => any;
    }
    /**
        * <p>The input to the ListOutgoingCertificates operation.</p>
        */
    export interface ListOutgoingCertificatesRequest {
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Specifies the order for results. If True, the results are returned in ascending
                *          order, based on the creation date.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListOutgoingCertificatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOutgoingCertificatesRequest) => any;
    }
    /**
        * <p>A certificate that has been transferred but not yet accepted.</p>
        */
    export interface OutgoingCertificate {
            /**
                * <p>The certificate ARN.</p>
                */
            certificateArn?: string;
            /**
                * <p>The certificate ID.</p>
                */
            certificateId?: string;
            /**
                * <p>The Amazon Web Services account to which the transfer was made.</p>
                */
            transferredTo?: string;
            /**
                * <p>The date the transfer was initiated.</p>
                */
            transferDate?: Date;
            /**
                * <p>The transfer message.</p>
                */
            transferMessage?: string;
            /**
                * <p>The certificate creation date.</p>
                */
            creationDate?: Date;
    }
    export namespace OutgoingCertificate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OutgoingCertificate) => any;
    }
    /**
        * <p>The output from the ListOutgoingCertificates operation.</p>
        */
    export interface ListOutgoingCertificatesResponse {
            /**
                * <p>The certificates that are being transferred but not yet accepted.</p>
                */
            outgoingCertificates?: OutgoingCertificate[];
            /**
                * <p>The marker for the next set of results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListOutgoingCertificatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOutgoingCertificatesResponse) => any;
    }
    /**
        * <p>The input for the ListPolicies operation.</p>
        */
    export interface ListPoliciesRequest {
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>Specifies the order for results. If true, the results are returned in ascending
                *          creation order.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesRequest) => any;
    }
    /**
        * <p>The output from the ListPolicies operation.</p>
        */
    export interface ListPoliciesResponse {
            /**
                * <p>The descriptions of the policies.</p>
                */
            policies?: Policy[];
            /**
                * <p>The marker for the next set of results, or null if there are no additional
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesResponse) => any;
    }
    /**
        * <p>The input for the ListPolicyPrincipals operation.</p>
        */
    export interface ListPolicyPrincipalsRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>Specifies the order for results. If true, the results are returned in ascending
                *          creation order.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListPolicyPrincipalsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPolicyPrincipalsRequest) => any;
    }
    /**
        * <p>The output from the ListPolicyPrincipals operation.</p>
        */
    export interface ListPolicyPrincipalsResponse {
            /**
                * <p>The descriptions of the principals.</p>
                */
            principals?: string[];
            /**
                * <p>The marker for the next set of results, or null if there are no additional
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListPolicyPrincipalsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPolicyPrincipalsResponse) => any;
    }
    /**
        * <p>The input for the ListPolicyVersions operation.</p>
        */
    export interface ListPolicyVersionsRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
    }
    export namespace ListPolicyVersionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPolicyVersionsRequest) => any;
    }
    /**
        * <p>Describes a policy version.</p>
        */
    export interface PolicyVersion {
            /**
                * <p>The policy version ID.</p>
                */
            versionId?: string;
            /**
                * <p>Specifies whether the policy version is the default.</p>
                */
            isDefaultVersion?: boolean;
            /**
                * <p>The date and time the policy was created.</p>
                */
            createDate?: Date;
    }
    export namespace PolicyVersion {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicyVersion) => any;
    }
    /**
        * <p>The output from the ListPolicyVersions operation.</p>
        */
    export interface ListPolicyVersionsResponse {
            /**
                * <p>The policy versions.</p>
                */
            policyVersions?: PolicyVersion[];
    }
    export namespace ListPolicyVersionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPolicyVersionsResponse) => any;
    }
    /**
        * <p>The input for the ListPrincipalPolicies operation.</p>
        */
    export interface ListPrincipalPoliciesRequest {
            /**
                * <p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
                */
            principal: string | undefined;
            /**
                * <p>The marker for the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
            /**
                * <p>Specifies the order for results. If true, results are returned in ascending creation
                *          order.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListPrincipalPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalPoliciesRequest) => any;
    }
    /**
        * <p>The output from the ListPrincipalPolicies operation.</p>
        */
    export interface ListPrincipalPoliciesResponse {
            /**
                * <p>The policies.</p>
                */
            policies?: Policy[];
            /**
                * <p>The marker for the next set of results, or null if there are no additional
                *          results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListPrincipalPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalPoliciesResponse) => any;
    }
    /**
        * <p>The input for the ListPrincipalThings operation.</p>
        */
    export interface ListPrincipalThingsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in this operation.</p>
                */
            maxResults?: number;
            /**
                * <p>The principal.</p>
                */
            principal: string | undefined;
    }
    export namespace ListPrincipalThingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalThingsRequest) => any;
    }
    /**
        * <p>The output from the ListPrincipalThings operation.</p>
        */
    export interface ListPrincipalThingsResponse {
            /**
                * <p>The things.</p>
                */
            things?: string[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPrincipalThingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalThingsResponse) => any;
    }
    export interface ListProvisioningTemplatesRequest {
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>A token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProvisioningTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningTemplatesRequest) => any;
    }
    /**
        * <p>A summary of information about a fleet provisioning template.</p>
        */
    export interface ProvisioningTemplateSummary {
            /**
                * <p>The ARN of the fleet provisioning template.</p>
                */
            templateArn?: string;
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName?: string;
            /**
                * <p>The description of the fleet provisioning template.</p>
                */
            description?: string;
            /**
                * <p>The date when the fleet provisioning template summary was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date when the fleet provisioning template summary was last modified.</p>
                */
            lastModifiedDate?: Date;
            /**
                * <p>True if the fleet provision template is enabled, otherwise false.</p>
                */
            enabled?: boolean;
    }
    export namespace ProvisioningTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningTemplateSummary) => any;
    }
    export interface ListProvisioningTemplatesResponse {
            /**
                * <p>A list of fleet provisioning templates</p>
                */
            templates?: ProvisioningTemplateSummary[];
            /**
                * <p>A token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProvisioningTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningTemplatesResponse) => any;
    }
    export interface ListProvisioningTemplateVersionsRequest {
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>A token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProvisioningTemplateVersionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningTemplateVersionsRequest) => any;
    }
    /**
        * <p>A summary of information about a fleet provision template version.</p>
        */
    export interface ProvisioningTemplateVersionSummary {
            /**
                * <p>The ID of the fleet privisioning template version.</p>
                */
            versionId?: number;
            /**
                * <p>The date when the fleet provisioning template version was created</p>
                */
            creationDate?: Date;
            /**
                * <p>True if the fleet provisioning template version is the default version, otherwise
                *          false.</p>
                */
            isDefaultVersion?: boolean;
    }
    export namespace ProvisioningTemplateVersionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningTemplateVersionSummary) => any;
    }
    export interface ListProvisioningTemplateVersionsResponse {
            /**
                * <p>The list of fleet provisioning template versions.</p>
                */
            versions?: ProvisioningTemplateVersionSummary[];
            /**
                * <p>A token to retrieve the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProvisioningTemplateVersionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningTemplateVersionsResponse) => any;
    }
    export interface ListRoleAliasesRequest {
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            pageSize?: number;
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>Return the list of role aliases in ascending alphabetical order.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListRoleAliasesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoleAliasesRequest) => any;
    }
    export interface ListRoleAliasesResponse {
            /**
                * <p>The role aliases.</p>
                */
            roleAliases?: string[];
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListRoleAliasesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoleAliasesResponse) => any;
    }
    export interface ListScheduledAuditsRequest {
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time. The default is 25.</p>
                */
            maxResults?: number;
    }
    export namespace ListScheduledAuditsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListScheduledAuditsRequest) => any;
    }
    /**
        * <p>Information about the scheduled audit.</p>
        */
    export interface ScheduledAuditMetadata {
            /**
                * <p>The name of the scheduled audit.</p>
                */
            scheduledAuditName?: string;
            /**
                * <p>The ARN of the scheduled audit.</p>
                */
            scheduledAuditArn?: string;
            /**
                * <p>How often the scheduled audit occurs.</p>
                */
            frequency?: AuditFrequency | string;
            /**
                * <p>The day of the month on which the scheduled audit is run (if the
                *           <code>frequency</code> is "MONTHLY").
                *         If days 29-31 are specified, and the month does not have that many
                *         days, the audit takes place on the "LAST" day of the month.</p>
                */
            dayOfMonth?: string;
            /**
                * <p>The day of the week on which the scheduled audit is run (if the
                *           <code>frequency</code> is "WEEKLY" or "BIWEEKLY").</p>
                */
            dayOfWeek?: DayOfWeek | string;
    }
    export namespace ScheduledAuditMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ScheduledAuditMetadata) => any;
    }
    export interface ListScheduledAuditsResponse {
            /**
                * <p>The list of scheduled audits.</p>
                */
            scheduledAudits?: ScheduledAuditMetadata[];
            /**
                * <p>A token that can be used to retrieve the next set of results,
                *             or <code>null</code> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListScheduledAuditsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListScheduledAuditsResponse) => any;
    }
    export interface ListSecurityProfilesRequest {
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>A filter to limit results to the security profiles that use the defined dimension.
                *       Cannot be used with <code>metricName</code>
                *          </p>
                */
            dimensionName?: string;
            /**
                * <p> The name of the custom metric.
                *       Cannot be used with <code>dimensionName</code>. </p>
                */
            metricName?: string;
    }
    export namespace ListSecurityProfilesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesRequest) => any;
    }
    /**
        * <p>Identifying information for a Device Defender security profile.</p>
        */
    export interface SecurityProfileIdentifier {
            /**
                * <p>The name you've given to the security profile.</p>
                */
            name: string | undefined;
            /**
                * <p>The ARN of the security profile.</p>
                */
            arn: string | undefined;
    }
    export namespace SecurityProfileIdentifier {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityProfileIdentifier) => any;
    }
    export interface ListSecurityProfilesResponse {
            /**
                * <p>A list of security profile identifiers (names and ARNs).</p>
                */
            securityProfileIdentifiers?: SecurityProfileIdentifier[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no
                *         additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListSecurityProfilesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesResponse) => any;
    }
    export interface ListSecurityProfilesForTargetRequest {
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>If true, return child groups too.</p>
                */
            recursive?: boolean;
            /**
                * <p>The ARN of the target (thing group) whose attached security profiles you want to get.</p>
                */
            securityProfileTargetArn: string | undefined;
    }
    export namespace ListSecurityProfilesForTargetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesForTargetRequest) => any;
    }
    /**
        * <p>A target to which an alert is sent when a security profile behavior is
        *           violated.</p>
        */
    export interface SecurityProfileTarget {
            /**
                * <p>The ARN of the security profile.</p>
                */
            arn: string | undefined;
    }
    export namespace SecurityProfileTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityProfileTarget) => any;
    }
    /**
        * <p>Information about a security profile and the target associated with it.</p>
        */
    export interface SecurityProfileTargetMapping {
            /**
                * <p>Information that identifies the security profile.</p>
                */
            securityProfileIdentifier?: SecurityProfileIdentifier;
            /**
                * <p>Information about the target (thing group) associated with the security profile.</p>
                */
            target?: SecurityProfileTarget;
    }
    export namespace SecurityProfileTargetMapping {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityProfileTargetMapping) => any;
    }
    export interface ListSecurityProfilesForTargetResponse {
            /**
                * <p>A list of security profiles and their associated targets.</p>
                */
            securityProfileTargetMappings?: SecurityProfileTargetMapping[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no
                *         additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListSecurityProfilesForTargetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesForTargetResponse) => any;
    }
    export interface ListStreamsRequest {
            /**
                * <p>The maximum number of results to return at a time.</p>
                */
            maxResults?: number;
            /**
                * <p>A token used to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Set to true to return the list of streams in ascending order.</p>
                */
            ascendingOrder?: boolean;
    }
    export namespace ListStreamsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStreamsRequest) => any;
    }
    /**
        * <p>A summary of a stream.</p>
        */
    export interface StreamSummary {
            /**
                * <p>The stream ID.</p>
                */
            streamId?: string;
            /**
                * <p>The stream ARN.</p>
                */
            streamArn?: string;
            /**
                * <p>The stream version.</p>
                */
            streamVersion?: number;
            /**
                * <p>A description of the stream.</p>
                */
            description?: string;
    }
    export namespace StreamSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StreamSummary) => any;
    }
    export interface ListStreamsResponse {
            /**
                * <p>A list of streams.</p>
                */
            streams?: StreamSummary[];
            /**
                * <p>A token used to get the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListStreamsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStreamsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The list of tags assigned to the resource.</p>
                */
            tags?: Tag[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListTargetsForPolicyRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            marker?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            pageSize?: number;
    }
    export namespace ListTargetsForPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForPolicyRequest) => any;
    }
    export interface ListTargetsForPolicyResponse {
            /**
                * <p>The policy targets.</p>
                */
            targets?: string[];
            /**
                * <p>A marker used to get the next set of results.</p>
                */
            nextMarker?: string;
    }
    export namespace ListTargetsForPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForPolicyResponse) => any;
    }
    export interface ListTargetsForSecurityProfileRequest {
            /**
                * <p>The security profile.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListTargetsForSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForSecurityProfileRequest) => any;
    }
    export interface ListTargetsForSecurityProfileResponse {
            /**
                * <p>The thing groups to which the security profile is attached.</p>
                */
            securityProfileTargets?: SecurityProfileTarget[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no
                *         additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTargetsForSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForSecurityProfileResponse) => any;
    }
    export interface ListThingGroupsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>A filter that limits the results to those with the specified parent group.</p>
                */
            parentGroup?: string;
            /**
                * <p>A filter that limits the results to those with the specified name prefix.</p>
                */
            namePrefixFilter?: string;
            /**
                * <p>If true, return child groups as well.</p>
                */
            recursive?: boolean;
    }
    export namespace ListThingGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingGroupsRequest) => any;
    }
    export interface ListThingGroupsResponse {
            /**
                * <p>The thing groups.</p>
                */
            thingGroups?: GroupNameAndArn[];
            /**
                * <p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingGroupsResponse) => any;
    }
    export interface ListThingGroupsForThingRequest {
            /**
                * <p>The thing name.</p>
                */
            thingName: string | undefined;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListThingGroupsForThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingGroupsForThingRequest) => any;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_2' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTServiceException as __BaseException } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/IoTServiceException";
    import { AbortConfig, AggregationType, AlertTarget, AttributePayload, AuditCheckConfiguration, AuditFrequency, AuditMitigationActionsTaskTarget, AuditNotificationTarget, AuthInfo, AuthorizerConfig, AuthorizerStatus, AuthResult, AutoRegistrationStatus, Behavior, BillingGroupProperties, CustomMetricType, DayOfWeek, DimensionType, FleetMetricUnit, JobExecutionsRetryConfig, JobExecutionsRolloutConfig, LogLevel, MetricToRetain, MetricValue, MitigationActionParams, PresignedUrlConfig, ProvisioningHook, ResourceIdentifier, StreamFile, Tag, ThingGroupProperties, ThingTypeProperties, TimeoutConfig, TopicRuleDestinationStatus, TopicRulePayload, VerificationState, ViolationEventAdditionalInfo } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_0";
    import { BehaviorCriteriaType, CACertificateStatus, CertificateMode, CertificateStatus, Configuration, DetectMitigationActionsTaskTarget, DomainConfigurationStatus, GroupNameAndArn, LogTargetType, RegistrationConfig, Status, ThingGroupIndexingConfiguration, ThingIndexingConfiguration, ThingTypeMetadata, ViolationEventOccurrenceRange } from "@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/models_1";
    export interface ListThingGroupsForThingResponse {
            /**
                * <p>The thing groups.</p>
                */
            thingGroups?: GroupNameAndArn[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingGroupsForThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingGroupsForThingResponse) => any;
    }
    /**
        * <p>The input for the ListThingPrincipal operation.</p>
        */
    export interface ListThingPrincipalsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in this operation.</p>
                */
            maxResults?: number;
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
    }
    export namespace ListThingPrincipalsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingPrincipalsRequest) => any;
    }
    /**
        * <p>The output from the ListThingPrincipals operation.</p>
        */
    export interface ListThingPrincipalsResponse {
            /**
                * <p>The principals associated with the thing.</p>
                */
            principals?: string[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingPrincipalsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingPrincipalsResponse) => any;
    }
    export enum ReportType {
            ERRORS = "ERRORS",
            RESULTS = "RESULTS"
    }
    export interface ListThingRegistrationTaskReportsRequest {
            /**
                * <p>The id of the task.</p>
                */
            taskId: string | undefined;
            /**
                * <p>The type of task report.</p>
                */
            reportType: ReportType | string | undefined;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 		the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return per request.</p>
                */
            maxResults?: number;
    }
    export namespace ListThingRegistrationTaskReportsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingRegistrationTaskReportsRequest) => any;
    }
    export interface ListThingRegistrationTaskReportsResponse {
            /**
                * <p>Links to the task resources.</p>
                */
            resourceLinks?: string[];
            /**
                * <p>The type of task report.</p>
                */
            reportType?: ReportType | string;
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingRegistrationTaskReportsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingRegistrationTaskReportsResponse) => any;
    }
    export interface ListThingRegistrationTasksRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>The status of the bulk thing provisioning task.</p>
                */
            status?: Status | string;
    }
    export namespace ListThingRegistrationTasksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingRegistrationTasksRequest) => any;
    }
    export interface ListThingRegistrationTasksResponse {
            /**
                * <p>A list of bulk thing provisioning task IDs.</p>
                */
            taskIds?: string[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingRegistrationTasksResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingRegistrationTasksResponse) => any;
    }
    /**
        * <p>The input for the ListThings operation.</p>
        */
    export interface ListThingsRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in this operation.</p>
                */
            maxResults?: number;
            /**
                * <p>The attribute name used to search for things.</p>
                */
            attributeName?: string;
            /**
                * <p>The attribute value used to search for things.</p>
                */
            attributeValue?: string;
            /**
                * <p>The name of the thing type used to search for things.</p>
                */
            thingTypeName?: string;
            /**
                * <p>When <code>true</code>, the action returns the thing resources with attribute values
                *                      that start with the <code>attributeValue</code> provided.</p>
                *             <p>When <code>false</code>, or not present, the action returns only the thing
                * 			resources with attribute values that match the entire <code>attributeValue</code>
                * 			provided. </p>
                */
            usePrefixAttributeValue?: boolean;
    }
    export namespace ListThingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsRequest) => any;
    }
    /**
        * <p>The properties of the thing, including thing name, thing type name, and a list of thing
        * 			attributes.</p>
        */
    export interface ThingAttribute {
            /**
                * <p>The name of the thing.</p>
                */
            thingName?: string;
            /**
                * <p>The name of the thing type, if the thing has been associated with a type.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The thing ARN.</p>
                */
            thingArn?: string;
            /**
                * <p>A list of thing attributes which are name-value pairs.</p>
                */
            attributes?: Record<string, string>;
            /**
                * <p>The version of the thing record in the registry.</p>
                */
            version?: number;
    }
    export namespace ThingAttribute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingAttribute) => any;
    }
    /**
        * <p>The output from the ListThings operation.</p>
        */
    export interface ListThingsResponse {
            /**
                * <p>The things.</p>
                */
            things?: ThingAttribute[];
            /**
                * <p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsResponse) => any;
    }
    export interface ListThingsInBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName: string | undefined;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return per request.</p>
                */
            maxResults?: number;
    }
    export namespace ListThingsInBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsInBillingGroupRequest) => any;
    }
    export interface ListThingsInBillingGroupResponse {
            /**
                * <p>A list of things in the billing group.</p>
                */
            things?: string[];
            /**
                * <p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingsInBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsInBillingGroupResponse) => any;
    }
    export interface ListThingsInThingGroupRequest {
            /**
                * <p>The thing group name.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>When true, list things in this thing group and in all child groups as
                * 			well.</p>
                */
            recursive?: boolean;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListThingsInThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsInThingGroupRequest) => any;
    }
    export interface ListThingsInThingGroupResponse {
            /**
                * <p>The things in the specified thing group.</p>
                */
            things?: string[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingsInThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingsInThingGroupResponse) => any;
    }
    /**
        * <p>The input for the ListThingTypes operation.</p>
        */
    export interface ListThingTypesRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                * 			value from a previous response; otherwise <b>null</b> to receive
                * 			the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in this operation.</p>
                */
            maxResults?: number;
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName?: string;
    }
    export namespace ListThingTypesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingTypesRequest) => any;
    }
    /**
        * <p>The definition of the thing type, including thing type name and description.</p>
        */
    export interface ThingTypeDefinition {
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName?: string;
            /**
                * <p>The thing type ARN.</p>
                */
            thingTypeArn?: string;
            /**
                * <p>The ThingTypeProperties for the thing type.</p>
                */
            thingTypeProperties?: ThingTypeProperties;
            /**
                * <p>The ThingTypeMetadata contains additional information about the thing type including: creation date and
                * 			time, a value indicating whether the thing type is deprecated, and a date and time when it was
                * 			deprecated.</p>
                */
            thingTypeMetadata?: ThingTypeMetadata;
    }
    export namespace ThingTypeDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingTypeDefinition) => any;
    }
    /**
        * <p>The output for the ListThingTypes operation.</p>
        */
    export interface ListThingTypesResponse {
            /**
                * <p>The thing types.</p>
                */
            thingTypes?: ThingTypeDefinition[];
            /**
                * <p>The token for the next set of results. Will not be returned if operation has returned all results.</p>
                */
            nextToken?: string;
    }
    export namespace ListThingTypesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListThingTypesResponse) => any;
    }
    export interface ListTopicRuleDestinationsRequest {
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                *          value from a previous response; otherwise <b>null</b> to receive
                *          the first set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTopicRuleDestinationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTopicRuleDestinationsRequest) => any;
    }
    /**
        * <p>Information about an HTTP URL destination.</p>
        */
    export interface HttpUrlDestinationSummary {
            /**
                * <p>The URL used to confirm ownership of or access to the HTTP topic rule destination
                *          URL.</p>
                */
            confirmationUrl?: string;
    }
    export namespace HttpUrlDestinationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpUrlDestinationSummary) => any;
    }
    /**
        * <p>The summary of a virtual private cloud (VPC) destination.</p>
        */
    export interface VpcDestinationSummary {
            /**
                * <p>The subnet IDs of the VPC destination.</p>
                */
            subnetIds?: string[];
            /**
                * <p>The security groups of the VPC destination.</p>
                */
            securityGroups?: string[];
            /**
                * <p>The ID of the VPC.</p>
                */
            vpcId?: string;
            /**
                * <p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>
                */
            roleArn?: string;
    }
    export namespace VpcDestinationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VpcDestinationSummary) => any;
    }
    /**
        * <p>Information about the topic rule destination.</p>
        */
    export interface TopicRuleDestinationSummary {
            /**
                * <p>The topic rule destination ARN.</p>
                */
            arn?: string;
            /**
                * <p>The status of the topic rule destination. Valid values are:</p>
                *          <dl>
                *             <dt>IN_PROGRESS</dt>
                *             <dd>
                *                <p>A topic rule destination was created but has not been confirmed. You can set
                *                      <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *             <dt>ENABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is allowed. You can
                *                   set <code>status</code> to <code>DISABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>DISABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is not allowed. You
                *                   can set <code>status</code> to <code>ENABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>ERROR</dt>
                *             <dd>
                *                <p>Confirmation could not be completed, for example if the confirmation timed out.
                *                   You can call <code>GetTopicRuleDestination</code> for details about the error. You
                *                   can set <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *          </dl>
                */
            status?: TopicRuleDestinationStatus | string;
            /**
                * <p>The date and time when the topic rule destination was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The date and time when the topic rule destination was last updated.</p>
                */
            lastUpdatedAt?: Date;
            /**
                * <p>The reason the topic rule destination is in the current status.</p>
                */
            statusReason?: string;
            /**
                * <p>Information about the HTTP URL.</p>
                */
            httpUrlSummary?: HttpUrlDestinationSummary;
            /**
                * <p>Information about the virtual private cloud (VPC) connection.</p>
                */
            vpcDestinationSummary?: VpcDestinationSummary;
    }
    export namespace TopicRuleDestinationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRuleDestinationSummary) => any;
    }
    export interface ListTopicRuleDestinationsResponse {
            /**
                * <p>Information about a topic rule destination.</p>
                */
            destinationSummaries?: TopicRuleDestinationSummary[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTopicRuleDestinationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTopicRuleDestinationsResponse) => any;
    }
    /**
        * <p>The input for the ListTopicRules operation.</p>
        */
    export interface ListTopicRulesRequest {
            /**
                * <p>The topic.</p>
                */
            topic?: string;
            /**
                * <p>The maximum number of results to return.</p>
                */
            maxResults?: number;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                *          value from a previous response; otherwise <b>null</b> to receive
                *          the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies whether the rule is disabled.</p>
                */
            ruleDisabled?: boolean;
    }
    export namespace ListTopicRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTopicRulesRequest) => any;
    }
    /**
        * <p>Describes a rule.</p>
        */
    export interface TopicRuleListItem {
            /**
                * <p>The rule ARN.</p>
                */
            ruleArn?: string;
            /**
                * <p>The name of the rule.</p>
                */
            ruleName?: string;
            /**
                * <p>The pattern for the topic names that apply.</p>
                */
            topicPattern?: string;
            /**
                * <p>The date and time the rule was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>Specifies whether the rule is disabled.</p>
                */
            ruleDisabled?: boolean;
    }
    export namespace TopicRuleListItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicRuleListItem) => any;
    }
    /**
        * <p>The output from the ListTopicRules operation.</p>
        */
    export interface ListTopicRulesResponse {
            /**
                * <p>The rules.</p>
                */
            rules?: TopicRuleListItem[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTopicRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTopicRulesResponse) => any;
    }
    export interface ListV2LoggingLevelsRequest {
            /**
                * <p>The type of resource for which you are configuring logging. Must be
                *             <code>THING_Group</code>.</p>
                */
            targetType?: LogTargetType | string;
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                *          value from a previous response; otherwise <b>null</b> to receive
                *          the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListV2LoggingLevelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListV2LoggingLevelsRequest) => any;
    }
    /**
        * <p>A log target.</p>
        */
    export interface LogTarget {
            /**
                * <p>The target type.</p>
                */
            targetType: LogTargetType | string | undefined;
            /**
                * <p>The target name.</p>
                */
            targetName?: string;
    }
    export namespace LogTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogTarget) => any;
    }
    /**
        * <p>The target configuration.</p>
        */
    export interface LogTargetConfiguration {
            /**
                * <p>A log target</p>
                */
            logTarget?: LogTarget;
            /**
                * <p>The logging level.</p>
                */
            logLevel?: LogLevel | string;
    }
    export namespace LogTargetConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogTargetConfiguration) => any;
    }
    export interface ListV2LoggingLevelsResponse {
            /**
                * <p>The logging configuration for a target.</p>
                */
            logTargetConfigurations?: LogTargetConfiguration[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListV2LoggingLevelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListV2LoggingLevelsResponse) => any;
    }
    export interface ListViolationEventsRequest {
            /**
                * <p>The start time for the alerts to be listed.</p>
                */
            startTime: Date | undefined;
            /**
                * <p>The end time for the alerts to be listed.</p>
                */
            endTime: Date | undefined;
            /**
                * <p>A filter to limit results to those alerts caused by the specified thing.</p>
                */
            thingName?: string;
            /**
                * <p>A filter to limit results to those alerts generated by the specified security profile.</p>
                */
            securityProfileName?: string;
            /**
                * <p>
                *       The criteria for a behavior.
                *     </p>
                */
            behaviorCriteriaType?: BehaviorCriteriaType | string;
            /**
                * <p>
                *       A list of all suppressed alerts.
                *     </p>
                */
            listSuppressedAlerts?: boolean;
            /**
                * <p>The verification state of the violation (detect alarm).</p>
                */
            verificationState?: VerificationState | string;
            /**
                * <p>The token for the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListViolationEventsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListViolationEventsRequest) => any;
    }
    export enum ViolationEventType {
            ALARM_CLEARED = "alarm-cleared",
            ALARM_INVALIDATED = "alarm-invalidated",
            IN_ALARM = "in-alarm"
    }
    /**
        * <p>Information about a Device Defender security profile behavior violation.</p>
        */
    export interface ViolationEvent {
            /**
                * <p>The ID of the violation event.</p>
                */
            violationId?: string;
            /**
                * <p>The name of the thing responsible for the violation event.</p>
                */
            thingName?: string;
            /**
                * <p>The name of the security profile whose behavior was violated.</p>
                */
            securityProfileName?: string;
            /**
                * <p>The behavior that was violated.</p>
                */
            behavior?: Behavior;
            /**
                * <p>The value of the metric (the measurement).</p>
                */
            metricValue?: MetricValue;
            /**
                * <p>
                *             The details of a violation event.
                *         </p>
                */
            violationEventAdditionalInfo?: ViolationEventAdditionalInfo;
            /**
                * <p>The type of violation event.</p>
                */
            violationEventType?: ViolationEventType | string;
            /**
                * <p>The verification state of the violation (detect alarm).</p>
                */
            verificationState?: VerificationState | string;
            /**
                * <p>The description of the verification state of the violation.</p>
                */
            verificationStateDescription?: string;
            /**
                * <p>The time the violation event occurred.</p>
                */
            violationEventTime?: Date;
    }
    export namespace ViolationEvent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ViolationEvent) => any;
    }
    export interface ListViolationEventsResponse {
            /**
                * <p>The security profile violation alerts issued for this account during the given time period,
                *       potentially filtered by security profile, behavior violated, or thing (device) violating.</p>
                */
            violationEvents?: ViolationEvent[];
            /**
                * <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no
                *         additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListViolationEventsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListViolationEventsResponse) => any;
    }
    export interface PutVerificationStateOnViolationRequest {
            /**
                * <p>The violation ID.</p>
                */
            violationId: string | undefined;
            /**
                * <p>The verification state of the violation.</p>
                */
            verificationState: VerificationState | string | undefined;
            /**
                * <p>The description of the verification state of the violation (detect alarm).</p>
                */
            verificationStateDescription?: string;
    }
    export namespace PutVerificationStateOnViolationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVerificationStateOnViolationRequest) => any;
    }
    export interface PutVerificationStateOnViolationResponse {
    }
    export namespace PutVerificationStateOnViolationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVerificationStateOnViolationResponse) => any;
    }
    /**
        * <p>The input to the RegisterCACertificate operation.</p>
        */
    export interface RegisterCACertificateRequest {
            /**
                * <p>The CA certificate.</p>
                */
            caCertificate: string | undefined;
            /**
                * <p>The private key verification certificate. If <code>certificateMode</code> is
                *             <code>SNI_ONLY</code>, the <code>verificationCertificate</code> field must be empty. If
                *             <code>certificateMode</code> is <code>DEFAULT</code> or not provided, the
                *             <code>verificationCertificate</code> field must not be empty. </p>
                */
            verificationCertificate?: string;
            /**
                * <p>A boolean value that specifies if the CA certificate is set to active.</p>
                *          <p>Valid values: <code>ACTIVE | INACTIVE</code>
                *          </p>
                */
            setAsActive?: boolean;
            /**
                * <p>Allows this CA certificate to be used for auto registration of device
                *          certificates.</p>
                */
            allowAutoRegistration?: boolean;
            /**
                * <p>Information about the registration configuration.</p>
                */
            registrationConfig?: RegistrationConfig;
            /**
                * <p>Metadata which can be used to manage the CA certificate.</p>
                *          <note>
                *             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
                *             <p>For the CLI command-line parameter use format: &&tags
                *             "key1=value1&key2=value2..."</p>
                *             <p>For the cli-input-json file use format: "tags":
                *             "key1=value1&key2=value2..."</p>
                *          </note>
                */
            tags?: Tag[];
            /**
                * <p>Describes the certificate mode in which the Certificate Authority (CA) will be
                *          registered. If the <code>verificationCertificate</code> field is not provided, set <code>certificateMode</code> to be <code>SNI_ONLY</code>.
                *          If the <code>verificationCertificate</code> field is provided, set <code>certificateMode</code> to be <code>DEFAULT</code>.
                *          When <code>certificateMode</code> is not provided, it defaults to <code>DEFAULT</code>.
                *          All the device certificates that are registered using this CA will be registered in the same certificate mode as the CA.
                *          For more information about certificate mode for device certificates, see
                *          <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode">
                *             certificate mode</a>.
                *       </p>
                */
            certificateMode?: CertificateMode | string;
    }
    export namespace RegisterCACertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCACertificateRequest) => any;
    }
    /**
        * <p>The output from the RegisterCACertificateResponse operation.</p>
        */
    export interface RegisterCACertificateResponse {
            /**
                * <p>The CA certificate ARN.</p>
                */
            certificateArn?: string;
            /**
                * <p>The CA certificate identifier.</p>
                */
            certificateId?: string;
    }
    export namespace RegisterCACertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCACertificateResponse) => any;
    }
    /**
        * <p>The registration code is invalid.</p>
        */
    export class RegistrationCodeValidationException extends __BaseException {
            readonly name: "RegistrationCodeValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<RegistrationCodeValidationException, __BaseException>);
    }
    /**
        * <p>Unable to verify the CA certificate used to sign the device certificate you are
        *          attempting to register. This is happens when you have registered more than one CA
        *          certificate that has the same subject field and public key.</p>
        */
    export class CertificateConflictException extends __BaseException {
            readonly name: "CertificateConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CertificateConflictException, __BaseException>);
    }
    /**
        * <p>The input to the RegisterCertificate operation.</p>
        */
    export interface RegisterCertificateRequest {
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem: string | undefined;
            /**
                * <p>The CA certificate used to sign the device certificate being registered.</p>
                */
            caCertificatePem?: string;
            /**
                * @deprecated
                *
                * <p>A boolean value that specifies if the certificate is set to active.</p>
                *          <p>Valid values: <code>ACTIVE | INACTIVE</code>
                *          </p>
                */
            setAsActive?: boolean;
            /**
                * <p>The status of the register certificate request. Valid values that you can use include
                *          <code>ACTIVE</code>, <code>INACTIVE</code>, and <code>REVOKED</code>.</p>
                */
            status?: CertificateStatus | string;
    }
    export namespace RegisterCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCertificateRequest) => any;
    }
    /**
        * <p>The output from the RegisterCertificate operation.</p>
        */
    export interface RegisterCertificateResponse {
            /**
                * <p>The certificate ARN.</p>
                */
            certificateArn?: string;
            /**
                * <p>The certificate identifier.</p>
                */
            certificateId?: string;
    }
    export namespace RegisterCertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCertificateResponse) => any;
    }
    export interface RegisterCertificateWithoutCARequest {
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem: string | undefined;
            /**
                * <p>The status of the register certificate request.</p>
                */
            status?: CertificateStatus | string;
    }
    export namespace RegisterCertificateWithoutCARequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCertificateWithoutCARequest) => any;
    }
    export interface RegisterCertificateWithoutCAResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the registered certificate.</p>
                */
            certificateArn?: string;
            /**
                * <p>The ID of the registered certificate. (The last part of the certificate ARN contains the
                *          certificate ID.</p>
                */
            certificateId?: string;
    }
    export namespace RegisterCertificateWithoutCAResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCertificateWithoutCAResponse) => any;
    }
    export interface RegisterThingRequest {
            /**
                * <p>The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html">Provisioning Devices That Have Device Certificates</a> for more information.</p>
                */
            templateBody: string | undefined;
            /**
                * <p>The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning Templates</a> for more information.</p>
                */
            parameters?: Record<string, string>;
    }
    export namespace RegisterThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterThingRequest) => any;
    }
    export interface RegisterThingResponse {
            /**
                * <p>The certificate data, in PEM format.</p>
                */
            certificatePem?: string;
            /**
                * <p>ARNs for the generated resources.</p>
                */
            resourceArns?: Record<string, string>;
    }
    export namespace RegisterThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterThingResponse) => any;
    }
    /**
        * <p>The resource registration failed.</p>
        */
    export class ResourceRegistrationFailureException extends __BaseException {
            readonly name: "ResourceRegistrationFailureException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceRegistrationFailureException, __BaseException>);
    }
    /**
        * <p>The input for the RejectCertificateTransfer operation.</p>
        */
    export interface RejectCertificateTransferRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
            /**
                * <p>The reason the certificate transfer was rejected.</p>
                */
            rejectReason?: string;
    }
    export namespace RejectCertificateTransferRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectCertificateTransferRequest) => any;
    }
    export interface RemoveThingFromBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName?: string;
            /**
                * <p>The ARN of the billing group.</p>
                */
            billingGroupArn?: string;
            /**
                * <p>The name of the thing to be removed from the billing group.</p>
                */
            thingName?: string;
            /**
                * <p>The ARN of the thing to be removed from the billing group.</p>
                */
            thingArn?: string;
    }
    export namespace RemoveThingFromBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveThingFromBillingGroupRequest) => any;
    }
    export interface RemoveThingFromBillingGroupResponse {
    }
    export namespace RemoveThingFromBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveThingFromBillingGroupResponse) => any;
    }
    export interface RemoveThingFromThingGroupRequest {
            /**
                * <p>The group name.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The group ARN.</p>
                */
            thingGroupArn?: string;
            /**
                * <p>The name of the thing to remove from the group.</p>
                */
            thingName?: string;
            /**
                * <p>The ARN of the thing to remove from the group.</p>
                */
            thingArn?: string;
    }
    export namespace RemoveThingFromThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveThingFromThingGroupRequest) => any;
    }
    export interface RemoveThingFromThingGroupResponse {
    }
    export namespace RemoveThingFromThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveThingFromThingGroupResponse) => any;
    }
    /**
        * <p>The input for the ReplaceTopicRule operation.</p>
        */
    export interface ReplaceTopicRuleRequest {
            /**
                * <p>The name of the rule.</p>
                */
            ruleName: string | undefined;
            /**
                * <p>The rule payload.</p>
                */
            topicRulePayload: TopicRulePayload | undefined;
    }
    export namespace ReplaceTopicRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReplaceTopicRuleRequest) => any;
    }
    export interface SearchIndexRequest {
            /**
                * <p>The search index name.</p>
                */
            indexName?: string;
            /**
                * <p>The search query string. For more information about the search query syntax, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query
                *       syntax</a>.</p>
                */
            queryString: string | undefined;
            /**
                * <p>The token used to get the next set of results, or <code>null</code> if there are no additional
                *       results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
            /**
                * <p>The query version.</p>
                */
            queryVersion?: string;
    }
    export namespace SearchIndexRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchIndexRequest) => any;
    }
    /**
        * <p>The thing group search index document.</p>
        */
    export interface ThingGroupDocument {
            /**
                * <p>The thing group name.</p>
                */
            thingGroupName?: string;
            /**
                * <p>The thing group ID.</p>
                */
            thingGroupId?: string;
            /**
                * <p>The thing group description.</p>
                */
            thingGroupDescription?: string;
            /**
                * <p>The thing group attributes.</p>
                */
            attributes?: Record<string, string>;
            /**
                * <p>Parent group names.</p>
                */
            parentGroupNames?: string[];
    }
    export namespace ThingGroupDocument {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingGroupDocument) => any;
    }
    /**
        * <p>The connectivity status of the thing.</p>
        */
    export interface ThingConnectivity {
            /**
                * <p>True if the thing is connected to the Amazon Web Services IoT Core service; false if it is not
                *       connected.</p>
                */
            connected?: boolean;
            /**
                * <p>The epoch time (in milliseconds) when the thing last connected or disconnected. If the
                *       thing has been disconnected for approximately an hour, the time value might be missing.</p>
                */
            timestamp?: number;
            /**
                * <p>The reason why the client is disconnected. If the thing has been disconnected for approximately an hour, the <code>disconnectReason</code> value might be missing.</p>
                */
            disconnectReason?: string;
    }
    export namespace ThingConnectivity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingConnectivity) => any;
    }
    /**
        * <p>The thing search index document.</p>
        */
    export interface ThingDocument {
            /**
                * <p>The thing name.</p>
                */
            thingName?: string;
            /**
                * <p>The thing ID.</p>
                */
            thingId?: string;
            /**
                * <p>The thing type name.</p>
                */
            thingTypeName?: string;
            /**
                * <p>Thing group names.</p>
                */
            thingGroupNames?: string[];
            /**
                * <p>The attributes.</p>
                */
            attributes?: Record<string, string>;
            /**
                * <p>The unnamed shadow and named shadow.</p>
                *          <p>For more information about shadows, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html">IoT Device Shadow service.</a>
                *          </p>
                */
            shadow?: string;
            /**
                * <p>Contains Device Defender data.</p>
                *          <p>For more information about Device Defender, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender.html">Device Defender</a>. </p>
                */
            deviceDefender?: string;
            /**
                * <p>Indicates whether the thing is connected to the Amazon Web Services IoT Core service.</p>
                */
            connectivity?: ThingConnectivity;
    }
    export namespace ThingDocument {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ThingDocument) => any;
    }
    export interface SearchIndexResponse {
            /**
                * <p>The token used to get the next set of results, or <code>null</code> if there are no additional
                *       results.</p>
                */
            nextToken?: string;
            /**
                * <p>The things that match the search query.</p>
                */
            things?: ThingDocument[];
            /**
                * <p>The thing groups that match the search query.</p>
                */
            thingGroups?: ThingGroupDocument[];
    }
    export namespace SearchIndexResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchIndexResponse) => any;
    }
    export interface SetDefaultAuthorizerRequest {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName: string | undefined;
    }
    export namespace SetDefaultAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetDefaultAuthorizerRequest) => any;
    }
    export interface SetDefaultAuthorizerResponse {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName?: string;
            /**
                * <p>The authorizer ARN.</p>
                */
            authorizerArn?: string;
    }
    export namespace SetDefaultAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetDefaultAuthorizerResponse) => any;
    }
    /**
        * <p>The input for the SetDefaultPolicyVersion operation.</p>
        */
    export interface SetDefaultPolicyVersionRequest {
            /**
                * <p>The policy name.</p>
                */
            policyName: string | undefined;
            /**
                * <p>The policy version ID.</p>
                */
            policyVersionId: string | undefined;
    }
    export namespace SetDefaultPolicyVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetDefaultPolicyVersionRequest) => any;
    }
    /**
        * <p>Describes the logging options payload.</p>
        */
    export interface LoggingOptionsPayload {
            /**
                * <p>The ARN of the IAM role that grants access.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The log level.</p>
                */
            logLevel?: LogLevel | string;
    }
    export namespace LoggingOptionsPayload {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingOptionsPayload) => any;
    }
    /**
        * <p>The input for the SetLoggingOptions operation.</p>
        */
    export interface SetLoggingOptionsRequest {
            /**
                * <p>The logging options payload.</p>
                */
            loggingOptionsPayload: LoggingOptionsPayload | undefined;
    }
    export namespace SetLoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetLoggingOptionsRequest) => any;
    }
    export interface SetV2LoggingLevelRequest {
            /**
                * <p>The log target.</p>
                */
            logTarget: LogTarget | undefined;
            /**
                * <p>The log level.</p>
                */
            logLevel: LogLevel | string | undefined;
    }
    export namespace SetV2LoggingLevelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetV2LoggingLevelRequest) => any;
    }
    export interface SetV2LoggingOptionsRequest {
            /**
                * <p>The ARN of the role that allows IoT to write to Cloudwatch logs.</p>
                */
            roleArn?: string;
            /**
                * <p>The default logging level.</p>
                */
            defaultLogLevel?: LogLevel | string;
            /**
                * <p>If true all logs are disabled. The default is false.</p>
                */
            disableAllLogs?: boolean;
    }
    export namespace SetV2LoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetV2LoggingOptionsRequest) => any;
    }
    export interface StartAuditMitigationActionsTaskRequest {
            /**
                * <p>A unique identifier for the task. You can use this identifier to check the status of the task or to cancel it.</p>
                */
            taskId: string | undefined;
            /**
                * <p>Specifies the audit findings to which the mitigation actions are applied. You can apply
                *       them to a type of audit check, to all findings from an audit, or to a
                *       specific set of
                *       findings.</p>
                */
            target: AuditMitigationActionsTaskTarget | undefined;
            /**
                * <p>For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your Amazon Web Services accounts.</p>
                */
            auditCheckToActionsMapping: Record<string, string[]> | undefined;
            /**
                * <p>Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.</p>
                */
            clientRequestToken?: string;
    }
    export namespace StartAuditMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAuditMitigationActionsTaskRequest) => any;
    }
    export interface StartAuditMitigationActionsTaskResponse {
            /**
                * <p>The unique identifier for the audit mitigation task. This matches the <code>taskId</code> that you specified in the request.</p>
                */
            taskId?: string;
    }
    export namespace StartAuditMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAuditMitigationActionsTaskResponse) => any;
    }
    /**
        * <p>
        *             This exception occurs if you attempt to start a task with the same task-id as an existing task but with a different clientRequestToken.
        *         </p>
        */
    export class TaskAlreadyExistsException extends __BaseException {
            readonly name: "TaskAlreadyExistsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TaskAlreadyExistsException, __BaseException>);
    }
    export interface StartDetectMitigationActionsTaskRequest {
            /**
                * <p>
                *       The unique identifier of the task.
                *     </p>
                */
            taskId: string | undefined;
            /**
                * <p>
                *       Specifies the ML Detect findings to which the mitigation actions are applied.
                *     </p>
                */
            target: DetectMitigationActionsTaskTarget | undefined;
            /**
                * <p>
                *       The actions to be performed when a device has unexpected behavior.
                *     </p>
                */
            actions: string[] | undefined;
            /**
                * <p>
                *       Specifies the time period of which violation events occurred between.
                *     </p>
                */
            violationEventOccurrenceRange?: ViolationEventOccurrenceRange;
            /**
                * <p>
                *       Specifies to list only active violations.
                *     </p>
                */
            includeOnlyActiveViolations?: boolean;
            /**
                * <p>
                *       Specifies to include suppressed alerts.
                *     </p>
                */
            includeSuppressedAlerts?: boolean;
            /**
                * <p>
                *       Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.
                *     </p>
                */
            clientRequestToken?: string;
    }
    export namespace StartDetectMitigationActionsTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDetectMitigationActionsTaskRequest) => any;
    }
    export interface StartDetectMitigationActionsTaskResponse {
            /**
                * <p>
                *       The unique identifier of the task.
                *     </p>
                */
            taskId?: string;
    }
    export namespace StartDetectMitigationActionsTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDetectMitigationActionsTaskResponse) => any;
    }
    export interface StartOnDemandAuditTaskRequest {
            /**
                * <p>Which checks are performed during the audit. The checks you specify must be enabled
                *             for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code>
                *             to see the list of all checks, including those that are enabled or
                *             <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.</p>
                */
            targetCheckNames: string[] | undefined;
    }
    export namespace StartOnDemandAuditTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartOnDemandAuditTaskRequest) => any;
    }
    export interface StartOnDemandAuditTaskResponse {
            /**
                * <p>The ID of the on-demand audit you started.</p>
                */
            taskId?: string;
    }
    export namespace StartOnDemandAuditTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartOnDemandAuditTaskResponse) => any;
    }
    export interface StartThingRegistrationTaskRequest {
            /**
                * <p>The provisioning template.</p>
                */
            templateBody: string | undefined;
            /**
                * <p>The S3 bucket that contains the input file.</p>
                */
            inputFileBucket: string | undefined;
            /**
                * <p>The name of input file within the S3 bucket. This file contains a newline delimited
                * 			JSON file. Each line contains the parameter values to provision one device
                * 			(thing).</p>
                */
            inputFileKey: string | undefined;
            /**
                * <p>The IAM role ARN that grants permission the input file.</p>
                */
            roleArn: string | undefined;
    }
    export namespace StartThingRegistrationTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartThingRegistrationTaskRequest) => any;
    }
    export interface StartThingRegistrationTaskResponse {
            /**
                * <p>The bulk thing provisioning task ID.</p>
                */
            taskId?: string;
    }
    export namespace StartThingRegistrationTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartThingRegistrationTaskResponse) => any;
    }
    export interface StopThingRegistrationTaskRequest {
            /**
                * <p>The bulk thing provisioning task ID.</p>
                */
            taskId: string | undefined;
    }
    export namespace StopThingRegistrationTaskRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopThingRegistrationTaskRequest) => any;
    }
    export interface StopThingRegistrationTaskResponse {
    }
    export namespace StopThingRegistrationTaskResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopThingRegistrationTaskResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The new or modified tags for the resource.</p>
                */
            tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface TestAuthorizationRequest {
            /**
                * <p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
                */
            principal?: string;
            /**
                * <p>The Cognito identity pool ID.</p>
                */
            cognitoIdentityPoolId?: string;
            /**
                * <p>A list of authorization info objects. Simulating authorization will create a response
                *          for each <code>authInfo</code> object in the list.</p>
                */
            authInfos: AuthInfo[] | undefined;
            /**
                * <p>The MQTT client ID.</p>
                */
            clientId?: string;
            /**
                * <p>When testing custom authorization, the policies specified here are treated as if they
                *          are attached to the principal being authorized.</p>
                */
            policyNamesToAdd?: string[];
            /**
                * <p>When testing custom authorization, the policies specified here are treated as if they
                *          are not attached to the principal being authorized.</p>
                */
            policyNamesToSkip?: string[];
    }
    export namespace TestAuthorizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestAuthorizationRequest) => any;
    }
    export interface TestAuthorizationResponse {
            /**
                * <p>The authentication results.</p>
                */
            authResults?: AuthResult[];
    }
    export namespace TestAuthorizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestAuthorizationResponse) => any;
    }
    /**
        * <p>The response is invalid.</p>
        */
    export class InvalidResponseException extends __BaseException {
            readonly name: "InvalidResponseException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidResponseException, __BaseException>);
    }
    /**
        * <p>Specifies the HTTP context to use for the test authorizer request.</p>
        */
    export interface HttpContext {
            /**
                * <p>The header keys and values in an HTTP authorization request.</p>
                */
            headers?: Record<string, string>;
            /**
                * <p>The query string keys and values in an HTTP authorization request.</p>
                */
            queryString?: string;
    }
    export namespace HttpContext {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HttpContext) => any;
    }
    /**
        * <p>Specifies the MQTT context to use for the test authorizer request</p>
        */
    export interface MqttContext {
            /**
                * <p>The value of the <code>username</code> key in an MQTT authorization request.</p>
                */
            username?: string;
            /**
                * <p>The value of the <code>password</code> key in an MQTT authorization request.</p>
                */
            password?: Uint8Array;
            /**
                * <p>The value of the <code>clientId</code> key in an MQTT authorization request.</p>
                */
            clientId?: string;
    }
    export namespace MqttContext {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MqttContext) => any;
    }
    /**
        * <p>Specifies the TLS context to use for the test authorizer request.</p>
        */
    export interface TlsContext {
            /**
                * <p>The value of the <code>serverName</code> key in a TLS authorization request.</p>
                */
            serverName?: string;
    }
    export namespace TlsContext {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TlsContext) => any;
    }
    export interface TestInvokeAuthorizerRequest {
            /**
                * <p>The custom authorizer name.</p>
                */
            authorizerName: string | undefined;
            /**
                * <p>The token returned by your custom authentication service.</p>
                */
            token?: string;
            /**
                * <p>The signature made with the token and your custom authentication service's private
                *          key. This value must be Base-64-encoded.</p>
                */
            tokenSignature?: string;
            /**
                * <p>Specifies a test HTTP authorization request.</p>
                */
            httpContext?: HttpContext;
            /**
                * <p>Specifies a test MQTT authorization request.</p>
                */
            mqttContext?: MqttContext;
            /**
                * <p>Specifies a test TLS authorization request.</p>
                */
            tlsContext?: TlsContext;
    }
    export namespace TestInvokeAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestInvokeAuthorizerRequest) => any;
    }
    export interface TestInvokeAuthorizerResponse {
            /**
                * <p>True if the token is authenticated, otherwise false.</p>
                */
            isAuthenticated?: boolean;
            /**
                * <p>The principal ID.</p>
                */
            principalId?: string;
            /**
                * <p>IAM policy documents.</p>
                */
            policyDocuments?: string[];
            /**
                * <p>The number of seconds after which the temporary credentials are refreshed.</p>
                */
            refreshAfterInSeconds?: number;
            /**
                * <p>The number of seconds after which the connection is terminated.</p>
                */
            disconnectAfterInSeconds?: number;
    }
    export namespace TestInvokeAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestInvokeAuthorizerResponse) => any;
    }
    /**
        * <p>The input for the TransferCertificate operation.</p>
        */
    export interface TransferCertificateRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
            /**
                * <p>The Amazon Web Services account.</p>
                */
            targetAwsAccount: string | undefined;
            /**
                * <p>The transfer message.</p>
                */
            transferMessage?: string;
    }
    export namespace TransferCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransferCertificateRequest) => any;
    }
    /**
        * <p>The output from the TransferCertificate operation.</p>
        */
    export interface TransferCertificateResponse {
            /**
                * <p>The ARN of the certificate.</p>
                */
            transferredCertificateArn?: string;
    }
    export namespace TransferCertificateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransferCertificateResponse) => any;
    }
    /**
        * <p>You can't transfer the certificate because authorization policies are still
        *          attached.</p>
        */
    export class TransferConflictException extends __BaseException {
            readonly name: "TransferConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TransferConflictException, __BaseException>);
    }
    export interface UntagResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of the keys of the tags to be removed from the resource.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateAccountAuditConfigurationRequest {
            /**
                * <p>The Amazon
                *       Resource Name
                *       (ARN)
                *       of the role that grants permission
                *       to
                *       IoT to access information about your devices, policies,
                *       certificates,
                *       and other items as required when performing an audit.</p>
                */
            roleArn?: string;
            /**
                * <p>Information about the targets to which audit notifications are sent.</p>
                */
            auditNotificationTargetConfigurations?: Record<string, AuditNotificationTarget>;
            /**
                * <p>Specifies which audit checks are enabled and disabled for this account. Use
                *             <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those
                *             that are currently enabled.</p>
                *           <p>Some data collection might start immediately when certain checks are enabled.
                *             When a check is disabled, any data collected so far in relation to the check is deleted.</p>
                *           <p>You
                *       cannot
                *       disable a check if
                *       it's
                *       used by any scheduled audit. You must first delete the check from the scheduled audit or
                *       delete the scheduled audit itself.</p>
                *           <p>On the first call to <code>UpdateAccountAuditConfiguration</code>,
                *             this parameter is required and must specify at least one enabled check.</p>
                */
            auditCheckConfigurations?: Record<string, AuditCheckConfiguration>;
    }
    export namespace UpdateAccountAuditConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountAuditConfigurationRequest) => any;
    }
    export interface UpdateAccountAuditConfigurationResponse {
    }
    export namespace UpdateAccountAuditConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountAuditConfigurationResponse) => any;
    }
    export interface UpdateAuditSuppressionRequest {
            /**
                * <p>An audit check name. Checks must be enabled
                *         for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *         of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *         to select which checks are enabled.)</p>
                */
            checkName: string | undefined;
            /**
                * <p>Information that identifies the noncompliant resource.</p>
                */
            resourceIdentifier: ResourceIdentifier | undefined;
            /**
                * <p>
                *       The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to.
                *     </p>
                */
            expirationDate?: Date;
            /**
                * <p>
                *       Indicates whether a suppression should exist indefinitely or not.
                *     </p>
                */
            suppressIndefinitely?: boolean;
            /**
                * <p>
                *       The description of the audit suppression.
                *     </p>
                */
            description?: string;
    }
    export namespace UpdateAuditSuppressionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuditSuppressionRequest) => any;
    }
    export interface UpdateAuditSuppressionResponse {
    }
    export namespace UpdateAuditSuppressionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuditSuppressionResponse) => any;
    }
    export interface UpdateAuthorizerRequest {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName: string | undefined;
            /**
                * <p>The ARN of the authorizer's Lambda function.</p>
                */
            authorizerFunctionArn?: string;
            /**
                * <p>The key used to extract the token from the HTTP headers. </p>
                */
            tokenKeyName?: string;
            /**
                * <p>The public keys used to verify the token signature.</p>
                */
            tokenSigningPublicKeys?: Record<string, string>;
            /**
                * <p>The status of the update authorizer request.</p>
                */
            status?: AuthorizerStatus | string;
            /**
                * <p>When <code>true</code>, the result from the authorizer’s Lambda function is
                * 	  cached for the time specified in <code>refreshAfterInSeconds</code>. The cached
                * 	  result is used while the device reuses the same HTTP connection.</p>
                */
            enableCachingForHttp?: boolean;
    }
    export namespace UpdateAuthorizerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuthorizerRequest) => any;
    }
    export interface UpdateAuthorizerResponse {
            /**
                * <p>The authorizer name.</p>
                */
            authorizerName?: string;
            /**
                * <p>The authorizer ARN.</p>
                */
            authorizerArn?: string;
    }
    export namespace UpdateAuthorizerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuthorizerResponse) => any;
    }
    export interface UpdateBillingGroupRequest {
            /**
                * <p>The name of the billing group.</p>
                */
            billingGroupName: string | undefined;
            /**
                * <p>The properties of the billing group.</p>
                */
            billingGroupProperties: BillingGroupProperties | undefined;
            /**
                * <p>The expected version of the billing group. If the version of the billing group does
                * 			not match the expected version specified in the request, the
                * 				<code>UpdateBillingGroup</code> request is rejected with a
                * 				<code>VersionConflictException</code>.</p>
                */
            expectedVersion?: number;
    }
    export namespace UpdateBillingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBillingGroupRequest) => any;
    }
    export interface UpdateBillingGroupResponse {
            /**
                * <p>The latest version of the billing group.</p>
                */
            version?: number;
    }
    export namespace UpdateBillingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBillingGroupResponse) => any;
    }
    /**
        * <p>The input to the UpdateCACertificate operation.</p>
        */
    export interface UpdateCACertificateRequest {
            /**
                * <p>The CA certificate identifier.</p>
                */
            certificateId: string | undefined;
            /**
                * <p>The updated status of the CA certificate.</p>
                *          <p>
                *             <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and
                *          should not be used.</p>
                */
            newStatus?: CACertificateStatus | string;
            /**
                * <p>The new value for the auto registration status. Valid values are: "ENABLE" or
                *          "DISABLE".</p>
                */
            newAutoRegistrationStatus?: AutoRegistrationStatus | string;
            /**
                * <p>Information about the registration configuration.</p>
                */
            registrationConfig?: RegistrationConfig;
            /**
                * <p>If true, removes auto registration.</p>
                */
            removeAutoRegistration?: boolean;
    }
    export namespace UpdateCACertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCACertificateRequest) => any;
    }
    /**
        * <p>The input for the UpdateCertificate operation.</p>
        */
    export interface UpdateCertificateRequest {
            /**
                * <p>The ID of the certificate. (The last part of the certificate ARN contains the
                *          certificate ID.)</p>
                */
            certificateId: string | undefined;
            /**
                * <p>The new status.</p>
                *          <p>
                *             <b>Note:</b> Setting the status to PENDING_TRANSFER  or PENDING_ACTIVATION will result
                *          in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses used internally by IoT. They
                *          are not intended for developer use.</p>
                *          <p>
                *             <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and
                *          should not be used.</p>
                */
            newStatus: CertificateStatus | string | undefined;
    }
    export namespace UpdateCertificateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCertificateRequest) => any;
    }
    export interface UpdateCustomMetricRequest {
            /**
                * <p> The name of the custom metric.
                *       Cannot be updated. </p>
                */
            metricName: string | undefined;
            /**
                * <p>
                *       Field
                *       represents a friendly name in the console for the custom metric,
                *       it
                *       doesn't have to be unique. Don't use this name as the metric identifier in
                *       the device metric report.
                *       Can
                *       be updated. </p>
                */
            displayName: string | undefined;
    }
    export namespace UpdateCustomMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCustomMetricRequest) => any;
    }
    export interface UpdateCustomMetricResponse {
            /**
                * <p>
                *       The name of the custom metric.
                *     </p>
                */
            metricName?: string;
            /**
                * <p>
                *       The Amazon Resource Number (ARN) of the custom metric.
                *     </p>
                */
            metricArn?: string;
            /**
                * <p> The type of the custom metric. </p>
                *          <important>
                *             <p>The type <code>number</code> only takes a single metric value as an input, but while submitting the metrics value in the DeviceMetrics report, it must be passed as an array with a single value.</p>
                *          </important>
                */
            metricType?: CustomMetricType | string;
            /**
                * <p>
                *       A friendly name in the console for the custom metric
                *     </p>
                */
            displayName?: string;
            /**
                * <p>
                *       The creation date of the custom metric in milliseconds since epoch.
                *     </p>
                */
            creationDate?: Date;
            /**
                * <p>
                *       The time the custom metric was last modified in milliseconds since epoch.
                *     </p>
                */
            lastModifiedDate?: Date;
    }
    export namespace UpdateCustomMetricResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCustomMetricResponse) => any;
    }
    export interface UpdateDimensionRequest {
            /**
                * <p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>
                */
            name: string | undefined;
            /**
                * <p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</p>
                */
            stringValues: string[] | undefined;
    }
    export namespace UpdateDimensionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDimensionRequest) => any;
    }
    export interface UpdateDimensionResponse {
            /**
                * <p>A unique identifier for the dimension.</p>
                */
            name?: string;
            /**
                * <p>The Amazon Resource
                *       Name (ARN)of
                *       the created dimension.</p>
                */
            arn?: string;
            /**
                * <p>The type of the dimension.</p>
                */
            type?: DimensionType | string;
            /**
                * <p>The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.</p>
                */
            stringValues?: string[];
            /**
                * <p>The date and time, in milliseconds since epoch, when the dimension was initially created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date and time, in milliseconds since epoch, when the dimension was most recently updated.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace UpdateDimensionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDimensionResponse) => any;
    }
    export interface UpdateDomainConfigurationRequest {
            /**
                * <p>The name of the domain configuration to be updated.</p>
                */
            domainConfigurationName: string | undefined;
            /**
                * <p>An object that specifies the authorization service for a domain.</p>
                */
            authorizerConfig?: AuthorizerConfig;
            /**
                * <p>The status to which the domain configuration should be updated.</p>
                */
            domainConfigurationStatus?: DomainConfigurationStatus | string;
            /**
                * <p>Removes the authorization configuration from a domain.</p>
                */
            removeAuthorizerConfig?: boolean;
    }
    export namespace UpdateDomainConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainConfigurationRequest) => any;
    }
    export interface UpdateDomainConfigurationResponse {
            /**
                * <p>The name of the domain configuration that was updated.</p>
                */
            domainConfigurationName?: string;
            /**
                * <p>The ARN of the domain configuration that was updated.</p>
                */
            domainConfigurationArn?: string;
    }
    export namespace UpdateDomainConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainConfigurationResponse) => any;
    }
    export interface UpdateDynamicThingGroupRequest {
            /**
                * <p>The name of the dynamic thing group to update.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The dynamic thing group properties to update.</p>
                */
            thingGroupProperties: ThingGroupProperties | undefined;
            /**
                * <p>The expected version of the dynamic thing group to update.</p>
                */
            expectedVersion?: number;
            /**
                * <p>The dynamic thing group index to update.</p>
                * 		       <note>
                * 			         <p>Currently one index is supported: <code>AWS_Things</code>.</p>
                * 		       </note>
                */
            indexName?: string;
            /**
                * <p>The dynamic thing group search query string to update.</p>
                */
            queryString?: string;
            /**
                * <p>The dynamic thing group query version to update.</p>
                * 		       <note>
                * 			         <p>Currently one query version is supported: "2017-09-30". If not specified, the
                * 				query version defaults to this value.</p>
                * 		       </note>
                */
            queryVersion?: string;
    }
    export namespace UpdateDynamicThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDynamicThingGroupRequest) => any;
    }
    export interface UpdateDynamicThingGroupResponse {
            /**
                * <p>The dynamic thing group version.</p>
                */
            version?: number;
    }
    export namespace UpdateDynamicThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDynamicThingGroupResponse) => any;
    }
    export interface UpdateEventConfigurationsRequest {
            /**
                * <p>The new event configuration values.</p>
                */
            eventConfigurations?: Record<string, Configuration>;
    }
    export namespace UpdateEventConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEventConfigurationsRequest) => any;
    }
    export interface UpdateEventConfigurationsResponse {
    }
    export namespace UpdateEventConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEventConfigurationsResponse) => any;
    }
    export interface UpdateFleetMetricRequest {
            /**
                * <p>The name of the fleet metric to update.</p>
                */
            metricName: string | undefined;
            /**
                * <p>The search query string.</p>
                */
            queryString?: string;
            /**
                * <p>The type of the aggregation query.</p>
                */
            aggregationType?: AggregationType;
            /**
                * <p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>
                */
            period?: number;
            /**
                * <p>The field to aggregate.</p>
                */
            aggregationField?: string;
            /**
                * <p>The description of the fleet metric.</p>
                */
            description?: string;
            /**
                * <p>The version of the query.</p>
                */
            queryVersion?: string;
            /**
                * <p>The name of the index to search.</p>
                */
            indexName: string | undefined;
            /**
                * <p>Used to support unit transformation such as milliseconds to seconds. The unit must be
                *       supported by <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>.</p>
                */
            unit?: FleetMetricUnit | string;
            /**
                * <p>The expected version of the fleet metric record in the registry.</p>
                */
            expectedVersion?: number;
    }
    export namespace UpdateFleetMetricRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateFleetMetricRequest) => any;
    }
    export interface UpdateIndexingConfigurationRequest {
            /**
                * <p>Thing indexing configuration.</p>
                */
            thingIndexingConfiguration?: ThingIndexingConfiguration;
            /**
                * <p>Thing group indexing configuration.</p>
                */
            thingGroupIndexingConfiguration?: ThingGroupIndexingConfiguration;
    }
    export namespace UpdateIndexingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIndexingConfigurationRequest) => any;
    }
    export interface UpdateIndexingConfigurationResponse {
    }
    export namespace UpdateIndexingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIndexingConfigurationResponse) => any;
    }
    export interface UpdateJobRequest {
            /**
                * <p>The ID of the job to be updated.</p>
                */
            jobId: string | undefined;
            /**
                * <p>A short text description of the job.</p>
                */
            description?: string;
            /**
                * <p>Configuration information for pre-signed S3 URLs.</p>
                */
            presignedUrlConfig?: PresignedUrlConfig;
            /**
                * <p>Allows you to create a staged rollout of the job.</p>
                */
            jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
            /**
                * <p>Allows you to create criteria to abort a job.</p>
                */
            abortConfig?: AbortConfig;
            /**
                * <p>Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>.
                *             If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>. </p>
                */
            timeoutConfig?: TimeoutConfig;
            /**
                * <p>The namespace used to indicate that a job is a customer-managed job.</p>
                *         <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that
                *             contain the value in the following format.</p>
                *         <p>
                *             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
                *          </p>
                *         <note>
                *             <p>The <code>namespaceId</code> feature is in public preview.</p>
                *          </note>
                */
            namespaceId?: string;
            /**
                * <p>Allows you to create the criteria to retry a job.</p>
                */
            jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
    }
    export namespace UpdateJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateJobRequest) => any;
    }
    export interface UpdateMitigationActionRequest {
            /**
                * <p>The friendly name for the mitigation action. You cannot change the name by using
                *         <code>UpdateMitigationAction</code>. Instead, you must delete and
                *       recreate the
                *       mitigation action with the new name.</p>
                */
            actionName: string | undefined;
            /**
                * <p>The ARN of the IAM role that is used to apply the mitigation action.</p>
                */
            roleArn?: string;
            /**
                * <p>Defines the type of action and the parameters for that action.</p>
                */
            actionParams?: MitigationActionParams;
    }
    export namespace UpdateMitigationActionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMitigationActionRequest) => any;
    }
    export interface UpdateMitigationActionResponse {
            /**
                * <p>The ARN for the new mitigation action.</p>
                */
            actionArn?: string;
            /**
                * <p>A unique identifier for the mitigation action.</p>
                */
            actionId?: string;
    }
    export namespace UpdateMitigationActionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMitigationActionResponse) => any;
    }
    export interface UpdateProvisioningTemplateRequest {
            /**
                * <p>The name of the fleet provisioning template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The description of the fleet provisioning template.</p>
                */
            description?: string;
            /**
                * <p>True to enable the fleet provisioning template, otherwise false.</p>
                */
            enabled?: boolean;
            /**
                * <p>The ID of the default provisioning template version.</p>
                */
            defaultVersionId?: number;
            /**
                * <p>The ARN of the role associated with the provisioning template. This IoT role grants
                *          permission to provision a device.</p>
                */
            provisioningRoleArn?: string;
            /**
                * <p>Updates the pre-provisioning hook template.</p>
                */
            preProvisioningHook?: ProvisioningHook;
            /**
                * <p>Removes pre-provisioning hook template.</p>
                */
            removePreProvisioningHook?: boolean;
    }
    export namespace UpdateProvisioningTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningTemplateRequest) => any;
    }
    export interface UpdateProvisioningTemplateResponse {
    }
    export namespace UpdateProvisioningTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningTemplateResponse) => any;
    }
    export interface UpdateRoleAliasRequest {
            /**
                * <p>The role alias to update.</p>
                */
            roleAlias: string | undefined;
            /**
                * <p>The role ARN.</p>
                */
            roleArn?: string;
            /**
                * <p>The number of seconds the credential will be valid.</p>
                *          <p>This value must be less than or equal to the maximum session duration of the IAM role
                *          that the role alias references.</p>
                */
            credentialDurationSeconds?: number;
    }
    export namespace UpdateRoleAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoleAliasRequest) => any;
    }
    export interface UpdateRoleAliasResponse {
            /**
                * <p>The role alias.</p>
                */
            roleAlias?: string;
            /**
                * <p>The role alias ARN.</p>
                */
            roleAliasArn?: string;
    }
    export namespace UpdateRoleAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoleAliasResponse) => any;
    }
    export interface UpdateScheduledAuditRequest {
            /**
                * <p>How often the scheduled audit takes
                *       place,
                *       either <code>DAILY</code>,
                *       <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the
                *       system.</p>
                */
            frequency?: AuditFrequency | string;
            /**
                * <p>The day of the month on which the scheduled audit takes place.
                *       This
                *       can
                *       be <code>1</code> through <code>31</code> or <code>LAST</code>. This field is required if the <code>frequency</code> parameter is set to
                *             <code>MONTHLY</code>. If days 29-31 are specified, and the month does not have that many days, the audit
                *       takes place on the "LAST" day of the month.</p>
                */
            dayOfMonth?: string;
            /**
                * <p>The day of the week on which the scheduled audit takes place.
                *       This
                *       can
                *       be one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the
                *             "frequency" parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.</p>
                */
            dayOfWeek?: DayOfWeek | string;
            /**
                * <p>Which checks are performed during the scheduled audit. Checks must be enabled
                *             for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
                *             of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
                *             to select which checks are enabled.)</p>
                */
            targetCheckNames?: string[];
            /**
                * <p>The name of the scheduled audit. (Max. 128 chars)</p>
                */
            scheduledAuditName: string | undefined;
    }
    export namespace UpdateScheduledAuditRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateScheduledAuditRequest) => any;
    }
    export interface UpdateScheduledAuditResponse {
            /**
                * <p>The ARN of the scheduled audit.</p>
                */
            scheduledAuditArn?: string;
    }
    export namespace UpdateScheduledAuditResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateScheduledAuditResponse) => any;
    }
    export interface UpdateSecurityProfileRequest {
            /**
                * <p>The name of the security profile you want to update.</p>
                */
            securityProfileName: string | undefined;
            /**
                * <p>A description of the security profile.</p>
                */
            securityProfileDescription?: string;
            /**
                * <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>
                */
            behaviors?: Behavior[];
            /**
                * <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>
                */
            alertTargets?: Record<string, AlertTarget>;
            /**
                * @deprecated
                *
                * <p>
                *             <i>Please use
                *           <a>UpdateSecurityProfileRequest$additionalMetricsToRetainV2</a>
                *         instead.</i>
                *          </p>
                *          <p>A list of metrics
                *      whose data is retained (stored). By default, data is retained for any metric
                *       used in the profile's <code>behaviors</code>, but
                *       it is
                *       also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>
                */
            additionalMetricsToRetain?: string[];
            /**
                * <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>
                */
            additionalMetricsToRetainV2?: MetricToRetain[];
            /**
                * <p>If true, delete all <code>behaviors</code> defined for this security profile.
                *         If any <code>behaviors</code> are defined in the current invocation, an exception occurs.</p>
                */
            deleteBehaviors?: boolean;
            /**
                * <p>If true, delete all <code>alertTargets</code> defined for this security profile.
                *         If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.</p>
                */
            deleteAlertTargets?: boolean;
            /**
                * <p>If true, delete all <code>additionalMetricsToRetain</code> defined for this
                *         security profile. If any <code>additionalMetricsToRetain</code> are defined in the current
                *         invocation, an exception occurs.</p>
                */
            deleteAdditionalMetricsToRetain?: boolean;
            /**
                * <p>The expected version of the security profile. A new version is generated whenever
                *         the security profile is updated. If you specify a value that is different from the actual
                *         version, a <code>VersionConflictException</code> is thrown.</p>
                */
            expectedVersion?: number;
    }
    export namespace UpdateSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSecurityProfileRequest) => any;
    }
    export interface UpdateSecurityProfileResponse {
            /**
                * <p>The name of the security profile that was updated.</p>
                */
            securityProfileName?: string;
            /**
                * <p>The ARN of the security profile that was updated.</p>
                */
            securityProfileArn?: string;
            /**
                * <p>The description of the security profile.</p>
                */
            securityProfileDescription?: string;
            /**
                * <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>
                */
            behaviors?: Behavior[];
            /**
                * <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>
                */
            alertTargets?: Record<string, AlertTarget>;
            /**
                * @deprecated
                *
                * <p>
                *             <i>Please use
                *           <a>UpdateSecurityProfileResponse$additionalMetricsToRetainV2</a>
                *         instead.</i>
                *          </p>
                *          <p>A list of metrics
                *       whose data is retained (stored). By default, data is retained for any metric
                *       used in the security profile's <code>behaviors</code>, but
                *       it is
                *       also retained for any metric specified here.</p>
                */
            additionalMetricsToRetain?: string[];
            /**
                * <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>
                */
            additionalMetricsToRetainV2?: MetricToRetain[];
            /**
                * <p>The updated version of the security profile.</p>
                */
            version?: number;
            /**
                * <p>The time the security profile was created.</p>
                */
            creationDate?: Date;
            /**
                * <p>The time the security profile was last modified.</p>
                */
            lastModifiedDate?: Date;
    }
    export namespace UpdateSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSecurityProfileResponse) => any;
    }
    export interface UpdateStreamRequest {
            /**
                * <p>The stream ID.</p>
                */
            streamId: string | undefined;
            /**
                * <p>The description of the stream.</p>
                */
            description?: string;
            /**
                * <p>The files associated with the stream.</p>
                */
            files?: StreamFile[];
            /**
                * <p>An IAM role that allows the IoT service principal assumes to access your S3 files.</p>
                */
            roleArn?: string;
    }
    export namespace UpdateStreamRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateStreamRequest) => any;
    }
    export interface UpdateStreamResponse {
            /**
                * <p>The stream ID.</p>
                */
            streamId?: string;
            /**
                * <p>The stream ARN.</p>
                */
            streamArn?: string;
            /**
                * <p>A description of the stream.</p>
                */
            description?: string;
            /**
                * <p>The stream version.</p>
                */
            streamVersion?: number;
    }
    export namespace UpdateStreamResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateStreamResponse) => any;
    }
    /**
        * <p>The input for the UpdateThing operation.</p>
        */
    export interface UpdateThingRequest {
            /**
                * <p>The name of the thing to update.</p>
                * 		       <p>You can't change a thing's name. To change a thing's name, you must create a
                * 			new thing, give it the new name, and then delete the old thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the thing type.</p>
                */
            thingTypeName?: string;
            /**
                * <p>A list of thing attributes, a JSON string containing name-value pairs. For
                * 			example:</p>
                * 		       <p>
                * 			         <code>{\"attributes\":{\"name1\":\"value2\"}}</code>
                * 		       </p>
                * 		       <p>This data is used to add new attributes or update existing attributes.</p>
                */
            attributePayload?: AttributePayload;
            /**
                * <p>The expected version of the thing record in the registry. If the version of the
                * 			record in the registry does not match the expected version specified in the request, the
                * 				<code>UpdateThing</code> request is rejected with a
                * 				<code>VersionConflictException</code>.</p>
                */
            expectedVersion?: number;
            /**
                * <p>Remove a thing type association. If <b>true</b>, the
                * 			association is removed.</p>
                */
            removeThingType?: boolean;
    }
    export namespace UpdateThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingRequest) => any;
    }
    /**
        * <p>The output from the UpdateThing operation.</p>
        */
    export interface UpdateThingResponse {
    }
    export namespace UpdateThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingResponse) => any;
    }
    export interface UpdateThingGroupRequest {
            /**
                * <p>The thing group to update.</p>
                */
            thingGroupName: string | undefined;
            /**
                * <p>The thing group properties.</p>
                */
            thingGroupProperties: ThingGroupProperties | undefined;
            /**
                * <p>The expected version of the thing group. If this does not match the version of the
                * 			thing group being updated, the update will fail.</p>
                */
            expectedVersion?: number;
    }
    export namespace UpdateThingGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingGroupRequest) => any;
    }
    export interface UpdateThingGroupResponse {
            /**
                * <p>The version of the updated thing group.</p>
                */
            version?: number;
    }
    export namespace UpdateThingGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingGroupResponse) => any;
    }
    export interface UpdateThingGroupsForThingRequest {
            /**
                * <p>The thing whose group memberships will be updated.</p>
                */
            thingName?: string;
            /**
                * <p>The groups to which the thing will be added.</p>
                */
            thingGroupsToAdd?: string[];
            /**
                * <p>The groups from which the thing will be removed.</p>
                */
            thingGroupsToRemove?: string[];
            /**
                * <p>Override dynamic thing groups with static thing groups when 10-group limit is
                * 			reached. If a thing belongs to 10 thing groups, and one or more of those groups are
                * 			dynamic thing groups, adding a thing to a static group removes the thing from the last
                * 			dynamic group.</p>
                */
            overrideDynamicGroups?: boolean;
    }
    export namespace UpdateThingGroupsForThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingGroupsForThingRequest) => any;
    }
    export interface UpdateThingGroupsForThingResponse {
    }
    export namespace UpdateThingGroupsForThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingGroupsForThingResponse) => any;
    }
    export interface UpdateTopicRuleDestinationRequest {
            /**
                * <p>The ARN of the topic rule destination.</p>
                */
            arn: string | undefined;
            /**
                * <p>The status of the topic rule destination. Valid values are:</p>
                *          <dl>
                *             <dt>IN_PROGRESS</dt>
                *             <dd>
                *                <p>A topic rule destination was created but has not been confirmed. You can set
                *                      <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *             <dt>ENABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is allowed. You can
                *                   set <code>status</code> to <code>DISABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>DISABLED</dt>
                *             <dd>
                *                <p>Confirmation was completed, and traffic to this destination is not allowed. You
                *                   can set <code>status</code> to <code>ENABLED</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>.</p>
                *             </dd>
                *             <dt>ERROR</dt>
                *             <dd>
                *                <p>Confirmation could not be completed, for example if the confirmation timed out.
                *                   You can call <code>GetTopicRuleDestination</code> for details about the error. You
                *                   can set <code>status</code> to <code>IN_PROGRESS</code> by calling
                *                      <code>UpdateTopicRuleDestination</code>. Calling
                *                      <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to
                *                   be sent to your confirmation endpoint.</p>
                *             </dd>
                *          </dl>
                */
            status: TopicRuleDestinationStatus | string | undefined;
    }
    export namespace UpdateTopicRuleDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTopicRuleDestinationRequest) => any;
    }
    export interface UpdateTopicRuleDestinationResponse {
    }
    export namespace UpdateTopicRuleDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTopicRuleDestinationResponse) => any;
    }
    export interface ValidateSecurityProfileBehaviorsRequest {
            /**
                * <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>
                */
            behaviors: Behavior[] | undefined;
    }
    export namespace ValidateSecurityProfileBehaviorsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ValidateSecurityProfileBehaviorsRequest) => any;
    }
    /**
        * <p>Information about an error found in a behavior specification.</p>
        */
    export interface ValidationError {
            /**
                * <p>The description of an error found in the behaviors.</p>
                */
            errorMessage?: string;
    }
    export namespace ValidationError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ValidationError) => any;
    }
    export interface ValidateSecurityProfileBehaviorsResponse {
            /**
                * <p>True if the behaviors were valid.</p>
                */
            valid?: boolean;
            /**
                * <p>The list of any errors found in the behaviors.</p>
                */
            validationErrors?: ValidationError[];
    }
    export namespace ValidateSecurityProfileBehaviorsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ValidateSecurityProfileBehaviorsResponse) => any;
    }
}

declare module '@aws-sdk/client-iot/node_modules/@aws-sdk/client-iot/dist-types/models/IoTServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from IoT service.
        */
    export class IoTServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

