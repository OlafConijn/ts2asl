// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-amp' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AmpClient } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { CreateAlertManagerDefinitionCommandInput, CreateAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateAlertManagerDefinitionCommand";
    import { CreateRuleGroupsNamespaceCommandInput, CreateRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateRuleGroupsNamespaceCommand";
    import { CreateWorkspaceCommandInput, CreateWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateWorkspaceCommand";
    import { DeleteAlertManagerDefinitionCommandInput, DeleteAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteAlertManagerDefinitionCommand";
    import { DeleteRuleGroupsNamespaceCommandInput, DeleteRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteRuleGroupsNamespaceCommand";
    import { DeleteWorkspaceCommandInput, DeleteWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteWorkspaceCommand";
    import { DescribeAlertManagerDefinitionCommandInput, DescribeAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeAlertManagerDefinitionCommand";
    import { DescribeRuleGroupsNamespaceCommandInput, DescribeRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeRuleGroupsNamespaceCommand";
    import { DescribeWorkspaceCommandInput, DescribeWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeWorkspaceCommand";
    import { ListRuleGroupsNamespacesCommandInput, ListRuleGroupsNamespacesCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListRuleGroupsNamespacesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListTagsForResourceCommand";
    import { ListWorkspacesCommandInput, ListWorkspacesCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListWorkspacesCommand";
    import { PutAlertManagerDefinitionCommandInput, PutAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutAlertManagerDefinitionCommand";
    import { PutRuleGroupsNamespaceCommandInput, PutRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutRuleGroupsNamespaceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UntagResourceCommand";
    import { UpdateWorkspaceAliasCommandInput, UpdateWorkspaceAliasCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UpdateWorkspaceAliasCommand";
    /**
        * Amazon Managed Service for Prometheus
        */
    export class Amp extends AmpClient {
            /**
                * Create an alert manager definition.
                */
            createAlertManagerDefinition(args: CreateAlertManagerDefinitionCommandInput, options?: __HttpHandlerOptions): Promise<CreateAlertManagerDefinitionCommandOutput>;
            createAlertManagerDefinition(args: CreateAlertManagerDefinitionCommandInput, cb: (err: any, data?: CreateAlertManagerDefinitionCommandOutput) => void): void;
            createAlertManagerDefinition(args: CreateAlertManagerDefinitionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAlertManagerDefinitionCommandOutput) => void): void;
            /**
                * Create a rule group namespace.
                */
            createRuleGroupsNamespace(args: CreateRuleGroupsNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<CreateRuleGroupsNamespaceCommandOutput>;
            createRuleGroupsNamespace(args: CreateRuleGroupsNamespaceCommandInput, cb: (err: any, data?: CreateRuleGroupsNamespaceCommandOutput) => void): void;
            createRuleGroupsNamespace(args: CreateRuleGroupsNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRuleGroupsNamespaceCommandOutput) => void): void;
            /**
                * Creates a new AMP workspace.
                */
            createWorkspace(args: CreateWorkspaceCommandInput, options?: __HttpHandlerOptions): Promise<CreateWorkspaceCommandOutput>;
            createWorkspace(args: CreateWorkspaceCommandInput, cb: (err: any, data?: CreateWorkspaceCommandOutput) => void): void;
            createWorkspace(args: CreateWorkspaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWorkspaceCommandOutput) => void): void;
            /**
                * Deletes an alert manager definition.
                */
            deleteAlertManagerDefinition(args: DeleteAlertManagerDefinitionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAlertManagerDefinitionCommandOutput>;
            deleteAlertManagerDefinition(args: DeleteAlertManagerDefinitionCommandInput, cb: (err: any, data?: DeleteAlertManagerDefinitionCommandOutput) => void): void;
            deleteAlertManagerDefinition(args: DeleteAlertManagerDefinitionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAlertManagerDefinitionCommandOutput) => void): void;
            /**
                * Delete a rule groups namespace.
                */
            deleteRuleGroupsNamespace(args: DeleteRuleGroupsNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRuleGroupsNamespaceCommandOutput>;
            deleteRuleGroupsNamespace(args: DeleteRuleGroupsNamespaceCommandInput, cb: (err: any, data?: DeleteRuleGroupsNamespaceCommandOutput) => void): void;
            deleteRuleGroupsNamespace(args: DeleteRuleGroupsNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRuleGroupsNamespaceCommandOutput) => void): void;
            /**
                * Deletes an AMP workspace.
                */
            deleteWorkspace(args: DeleteWorkspaceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWorkspaceCommandOutput>;
            deleteWorkspace(args: DeleteWorkspaceCommandInput, cb: (err: any, data?: DeleteWorkspaceCommandOutput) => void): void;
            deleteWorkspace(args: DeleteWorkspaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWorkspaceCommandOutput) => void): void;
            /**
                * Describes an alert manager definition.
                */
            describeAlertManagerDefinition(args: DescribeAlertManagerDefinitionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAlertManagerDefinitionCommandOutput>;
            describeAlertManagerDefinition(args: DescribeAlertManagerDefinitionCommandInput, cb: (err: any, data?: DescribeAlertManagerDefinitionCommandOutput) => void): void;
            describeAlertManagerDefinition(args: DescribeAlertManagerDefinitionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAlertManagerDefinitionCommandOutput) => void): void;
            /**
                * Describe a rule groups namespace.
                */
            describeRuleGroupsNamespace(args: DescribeRuleGroupsNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRuleGroupsNamespaceCommandOutput>;
            describeRuleGroupsNamespace(args: DescribeRuleGroupsNamespaceCommandInput, cb: (err: any, data?: DescribeRuleGroupsNamespaceCommandOutput) => void): void;
            describeRuleGroupsNamespace(args: DescribeRuleGroupsNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRuleGroupsNamespaceCommandOutput) => void): void;
            /**
                * Describes an existing AMP workspace.
                */
            describeWorkspace(args: DescribeWorkspaceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeWorkspaceCommandOutput>;
            describeWorkspace(args: DescribeWorkspaceCommandInput, cb: (err: any, data?: DescribeWorkspaceCommandOutput) => void): void;
            describeWorkspace(args: DescribeWorkspaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeWorkspaceCommandOutput) => void): void;
            /**
                * Lists rule groups namespaces.
                */
            listRuleGroupsNamespaces(args: ListRuleGroupsNamespacesCommandInput, options?: __HttpHandlerOptions): Promise<ListRuleGroupsNamespacesCommandOutput>;
            listRuleGroupsNamespaces(args: ListRuleGroupsNamespacesCommandInput, cb: (err: any, data?: ListRuleGroupsNamespacesCommandOutput) => void): void;
            listRuleGroupsNamespaces(args: ListRuleGroupsNamespacesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRuleGroupsNamespacesCommandOutput) => void): void;
            /**
                * Lists the tags you have assigned to the resource.
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * Lists all AMP workspaces, including workspaces being created or deleted.
                */
            listWorkspaces(args: ListWorkspacesCommandInput, options?: __HttpHandlerOptions): Promise<ListWorkspacesCommandOutput>;
            listWorkspaces(args: ListWorkspacesCommandInput, cb: (err: any, data?: ListWorkspacesCommandOutput) => void): void;
            listWorkspaces(args: ListWorkspacesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWorkspacesCommandOutput) => void): void;
            /**
                * Update an alert manager definition.
                */
            putAlertManagerDefinition(args: PutAlertManagerDefinitionCommandInput, options?: __HttpHandlerOptions): Promise<PutAlertManagerDefinitionCommandOutput>;
            putAlertManagerDefinition(args: PutAlertManagerDefinitionCommandInput, cb: (err: any, data?: PutAlertManagerDefinitionCommandOutput) => void): void;
            putAlertManagerDefinition(args: PutAlertManagerDefinitionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAlertManagerDefinitionCommandOutput) => void): void;
            /**
                * Update a rule groups namespace.
                */
            putRuleGroupsNamespace(args: PutRuleGroupsNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<PutRuleGroupsNamespaceCommandOutput>;
            putRuleGroupsNamespace(args: PutRuleGroupsNamespaceCommandInput, cb: (err: any, data?: PutRuleGroupsNamespaceCommandOutput) => void): void;
            putRuleGroupsNamespace(args: PutRuleGroupsNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutRuleGroupsNamespaceCommandOutput) => void): void;
            /**
                * Creates tags for the specified resource.
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * Deletes tags from the specified resource.
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * Updates an AMP workspace alias.
                */
            updateWorkspaceAlias(args: UpdateWorkspaceAliasCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWorkspaceAliasCommandOutput>;
            updateWorkspaceAlias(args: UpdateWorkspaceAliasCommandInput, cb: (err: any, data?: UpdateWorkspaceAliasCommandOutput) => void): void;
            updateWorkspaceAlias(args: UpdateWorkspaceAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWorkspaceAliasCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateAlertManagerDefinitionCommandInput, CreateAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateAlertManagerDefinitionCommand";
    import { CreateRuleGroupsNamespaceCommandInput, CreateRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateRuleGroupsNamespaceCommand";
    import { CreateWorkspaceCommandInput, CreateWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateWorkspaceCommand";
    import { DeleteAlertManagerDefinitionCommandInput, DeleteAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteAlertManagerDefinitionCommand";
    import { DeleteRuleGroupsNamespaceCommandInput, DeleteRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteRuleGroupsNamespaceCommand";
    import { DeleteWorkspaceCommandInput, DeleteWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteWorkspaceCommand";
    import { DescribeAlertManagerDefinitionCommandInput, DescribeAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeAlertManagerDefinitionCommand";
    import { DescribeRuleGroupsNamespaceCommandInput, DescribeRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeRuleGroupsNamespaceCommand";
    import { DescribeWorkspaceCommandInput, DescribeWorkspaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeWorkspaceCommand";
    import { ListRuleGroupsNamespacesCommandInput, ListRuleGroupsNamespacesCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListRuleGroupsNamespacesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListTagsForResourceCommand";
    import { ListWorkspacesCommandInput, ListWorkspacesCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListWorkspacesCommand";
    import { PutAlertManagerDefinitionCommandInput, PutAlertManagerDefinitionCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutAlertManagerDefinitionCommand";
    import { PutRuleGroupsNamespaceCommandInput, PutRuleGroupsNamespaceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutRuleGroupsNamespaceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UntagResourceCommand";
    import { UpdateWorkspaceAliasCommandInput, UpdateWorkspaceAliasCommandOutput } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UpdateWorkspaceAliasCommand";
    export type ServiceInputTypes = CreateAlertManagerDefinitionCommandInput | CreateRuleGroupsNamespaceCommandInput | CreateWorkspaceCommandInput | DeleteAlertManagerDefinitionCommandInput | DeleteRuleGroupsNamespaceCommandInput | DeleteWorkspaceCommandInput | DescribeAlertManagerDefinitionCommandInput | DescribeRuleGroupsNamespaceCommandInput | DescribeWorkspaceCommandInput | ListRuleGroupsNamespacesCommandInput | ListTagsForResourceCommandInput | ListWorkspacesCommandInput | PutAlertManagerDefinitionCommandInput | PutRuleGroupsNamespaceCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateWorkspaceAliasCommandInput;
    export type ServiceOutputTypes = CreateAlertManagerDefinitionCommandOutput | CreateRuleGroupsNamespaceCommandOutput | CreateWorkspaceCommandOutput | DeleteAlertManagerDefinitionCommandOutput | DeleteRuleGroupsNamespaceCommandOutput | DeleteWorkspaceCommandOutput | DescribeAlertManagerDefinitionCommandOutput | DescribeRuleGroupsNamespaceCommandOutput | DescribeWorkspaceCommandOutput | ListRuleGroupsNamespacesCommandOutput | ListTagsForResourceCommandOutput | ListWorkspacesCommandOutput | PutAlertManagerDefinitionCommandOutput | PutRuleGroupsNamespaceCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateWorkspaceAliasCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type AmpClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of AmpClient class constructor that set the region, credentials and other options.
        */
    export interface AmpClientConfig extends AmpClientConfigType {
    }
    type AmpClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of AmpClient class. This is resolved and normalized from the {@link AmpClientConfig | constructor configuration interface}.
        */
    export interface AmpClientResolvedConfig extends AmpClientResolvedConfigType {
    }
    /**
        * Amazon Managed Service for Prometheus
        */
    export class AmpClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AmpClientResolvedConfig> {
            /**
                * The resolved configuration of AmpClient class. This is resolved and normalized from the {@link AmpClientConfig | constructor configuration interface}.
                */
            readonly config: AmpClientResolvedConfig;
            constructor(configuration: AmpClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateAlertManagerDefinitionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { CreateAlertManagerDefinitionRequest, CreateAlertManagerDefinitionResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface CreateAlertManagerDefinitionCommandInput extends CreateAlertManagerDefinitionRequest {
    }
    export interface CreateAlertManagerDefinitionCommandOutput extends CreateAlertManagerDefinitionResponse, __MetadataBearer {
    }
    /**
        * Create an alert manager definition.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, CreateAlertManagerDefinitionCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, CreateAlertManagerDefinitionCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new CreateAlertManagerDefinitionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAlertManagerDefinitionCommandInput} for command's `input` shape.
        * @see {@link CreateAlertManagerDefinitionCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class CreateAlertManagerDefinitionCommand extends $Command<CreateAlertManagerDefinitionCommandInput, CreateAlertManagerDefinitionCommandOutput, AmpClientResolvedConfig> {
            readonly input: CreateAlertManagerDefinitionCommandInput;
            constructor(input: CreateAlertManagerDefinitionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAlertManagerDefinitionCommandInput, CreateAlertManagerDefinitionCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateRuleGroupsNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { CreateRuleGroupsNamespaceRequest, CreateRuleGroupsNamespaceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface CreateRuleGroupsNamespaceCommandInput extends CreateRuleGroupsNamespaceRequest {
    }
    export interface CreateRuleGroupsNamespaceCommandOutput extends CreateRuleGroupsNamespaceResponse, __MetadataBearer {
    }
    /**
        * Create a rule group namespace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, CreateRuleGroupsNamespaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, CreateRuleGroupsNamespaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new CreateRuleGroupsNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRuleGroupsNamespaceCommandInput} for command's `input` shape.
        * @see {@link CreateRuleGroupsNamespaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class CreateRuleGroupsNamespaceCommand extends $Command<CreateRuleGroupsNamespaceCommandInput, CreateRuleGroupsNamespaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: CreateRuleGroupsNamespaceCommandInput;
            constructor(input: CreateRuleGroupsNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRuleGroupsNamespaceCommandInput, CreateRuleGroupsNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/CreateWorkspaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { CreateWorkspaceRequest, CreateWorkspaceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface CreateWorkspaceCommandInput extends CreateWorkspaceRequest {
    }
    export interface CreateWorkspaceCommandOutput extends CreateWorkspaceResponse, __MetadataBearer {
    }
    /**
        * Creates a new AMP workspace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, CreateWorkspaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, CreateWorkspaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new CreateWorkspaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateWorkspaceCommandInput} for command's `input` shape.
        * @see {@link CreateWorkspaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class CreateWorkspaceCommand extends $Command<CreateWorkspaceCommandInput, CreateWorkspaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: CreateWorkspaceCommandInput;
            constructor(input: CreateWorkspaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWorkspaceCommandInput, CreateWorkspaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteAlertManagerDefinitionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DeleteAlertManagerDefinitionRequest } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DeleteAlertManagerDefinitionCommandInput extends DeleteAlertManagerDefinitionRequest {
    }
    export interface DeleteAlertManagerDefinitionCommandOutput extends __MetadataBearer {
    }
    /**
        * Deletes an alert manager definition.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DeleteAlertManagerDefinitionCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DeleteAlertManagerDefinitionCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DeleteAlertManagerDefinitionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAlertManagerDefinitionCommandInput} for command's `input` shape.
        * @see {@link DeleteAlertManagerDefinitionCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DeleteAlertManagerDefinitionCommand extends $Command<DeleteAlertManagerDefinitionCommandInput, DeleteAlertManagerDefinitionCommandOutput, AmpClientResolvedConfig> {
            readonly input: DeleteAlertManagerDefinitionCommandInput;
            constructor(input: DeleteAlertManagerDefinitionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAlertManagerDefinitionCommandInput, DeleteAlertManagerDefinitionCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteRuleGroupsNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DeleteRuleGroupsNamespaceRequest } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DeleteRuleGroupsNamespaceCommandInput extends DeleteRuleGroupsNamespaceRequest {
    }
    export interface DeleteRuleGroupsNamespaceCommandOutput extends __MetadataBearer {
    }
    /**
        * Delete a rule groups namespace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DeleteRuleGroupsNamespaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DeleteRuleGroupsNamespaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DeleteRuleGroupsNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRuleGroupsNamespaceCommandInput} for command's `input` shape.
        * @see {@link DeleteRuleGroupsNamespaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DeleteRuleGroupsNamespaceCommand extends $Command<DeleteRuleGroupsNamespaceCommandInput, DeleteRuleGroupsNamespaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: DeleteRuleGroupsNamespaceCommandInput;
            constructor(input: DeleteRuleGroupsNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRuleGroupsNamespaceCommandInput, DeleteRuleGroupsNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DeleteWorkspaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DeleteWorkspaceRequest } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DeleteWorkspaceCommandInput extends DeleteWorkspaceRequest {
    }
    export interface DeleteWorkspaceCommandOutput extends __MetadataBearer {
    }
    /**
        * Deletes an AMP workspace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DeleteWorkspaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DeleteWorkspaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DeleteWorkspaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteWorkspaceCommandInput} for command's `input` shape.
        * @see {@link DeleteWorkspaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DeleteWorkspaceCommand extends $Command<DeleteWorkspaceCommandInput, DeleteWorkspaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: DeleteWorkspaceCommandInput;
            constructor(input: DeleteWorkspaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteWorkspaceCommandInput, DeleteWorkspaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeAlertManagerDefinitionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DescribeAlertManagerDefinitionRequest, DescribeAlertManagerDefinitionResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DescribeAlertManagerDefinitionCommandInput extends DescribeAlertManagerDefinitionRequest {
    }
    export interface DescribeAlertManagerDefinitionCommandOutput extends DescribeAlertManagerDefinitionResponse, __MetadataBearer {
    }
    /**
        * Describes an alert manager definition.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DescribeAlertManagerDefinitionCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DescribeAlertManagerDefinitionCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DescribeAlertManagerDefinitionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAlertManagerDefinitionCommandInput} for command's `input` shape.
        * @see {@link DescribeAlertManagerDefinitionCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DescribeAlertManagerDefinitionCommand extends $Command<DescribeAlertManagerDefinitionCommandInput, DescribeAlertManagerDefinitionCommandOutput, AmpClientResolvedConfig> {
            readonly input: DescribeAlertManagerDefinitionCommandInput;
            constructor(input: DescribeAlertManagerDefinitionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAlertManagerDefinitionCommandInput, DescribeAlertManagerDefinitionCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeRuleGroupsNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DescribeRuleGroupsNamespaceRequest, DescribeRuleGroupsNamespaceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DescribeRuleGroupsNamespaceCommandInput extends DescribeRuleGroupsNamespaceRequest {
    }
    export interface DescribeRuleGroupsNamespaceCommandOutput extends DescribeRuleGroupsNamespaceResponse, __MetadataBearer {
    }
    /**
        * Describe a rule groups namespace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DescribeRuleGroupsNamespaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DescribeRuleGroupsNamespaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DescribeRuleGroupsNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeRuleGroupsNamespaceCommandInput} for command's `input` shape.
        * @see {@link DescribeRuleGroupsNamespaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DescribeRuleGroupsNamespaceCommand extends $Command<DescribeRuleGroupsNamespaceCommandInput, DescribeRuleGroupsNamespaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: DescribeRuleGroupsNamespaceCommandInput;
            constructor(input: DescribeRuleGroupsNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeRuleGroupsNamespaceCommandInput, DescribeRuleGroupsNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/DescribeWorkspaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { DescribeWorkspaceRequest, DescribeWorkspaceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface DescribeWorkspaceCommandInput extends DescribeWorkspaceRequest {
    }
    export interface DescribeWorkspaceCommandOutput extends DescribeWorkspaceResponse, __MetadataBearer {
    }
    /**
        * Describes an existing AMP workspace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, DescribeWorkspaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, DescribeWorkspaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new DescribeWorkspaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeWorkspaceCommandInput} for command's `input` shape.
        * @see {@link DescribeWorkspaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class DescribeWorkspaceCommand extends $Command<DescribeWorkspaceCommandInput, DescribeWorkspaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: DescribeWorkspaceCommandInput;
            constructor(input: DescribeWorkspaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeWorkspaceCommandInput, DescribeWorkspaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListRuleGroupsNamespacesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { ListRuleGroupsNamespacesRequest, ListRuleGroupsNamespacesResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface ListRuleGroupsNamespacesCommandInput extends ListRuleGroupsNamespacesRequest {
    }
    export interface ListRuleGroupsNamespacesCommandOutput extends ListRuleGroupsNamespacesResponse, __MetadataBearer {
    }
    /**
        * Lists rule groups namespaces.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, ListRuleGroupsNamespacesCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, ListRuleGroupsNamespacesCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new ListRuleGroupsNamespacesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRuleGroupsNamespacesCommandInput} for command's `input` shape.
        * @see {@link ListRuleGroupsNamespacesCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class ListRuleGroupsNamespacesCommand extends $Command<ListRuleGroupsNamespacesCommandInput, ListRuleGroupsNamespacesCommandOutput, AmpClientResolvedConfig> {
            readonly input: ListRuleGroupsNamespacesCommandInput;
            constructor(input: ListRuleGroupsNamespacesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRuleGroupsNamespacesCommandInput, ListRuleGroupsNamespacesCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * Lists the tags you have assigned to the resource.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, ListTagsForResourceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, ListTagsForResourceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, AmpClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/ListWorkspacesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { ListWorkspacesRequest, ListWorkspacesResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface ListWorkspacesCommandInput extends ListWorkspacesRequest {
    }
    export interface ListWorkspacesCommandOutput extends ListWorkspacesResponse, __MetadataBearer {
    }
    /**
        * Lists all AMP workspaces, including workspaces being created or deleted.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, ListWorkspacesCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, ListWorkspacesCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new ListWorkspacesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListWorkspacesCommandInput} for command's `input` shape.
        * @see {@link ListWorkspacesCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class ListWorkspacesCommand extends $Command<ListWorkspacesCommandInput, ListWorkspacesCommandOutput, AmpClientResolvedConfig> {
            readonly input: ListWorkspacesCommandInput;
            constructor(input: ListWorkspacesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListWorkspacesCommandInput, ListWorkspacesCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutAlertManagerDefinitionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { PutAlertManagerDefinitionRequest, PutAlertManagerDefinitionResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface PutAlertManagerDefinitionCommandInput extends PutAlertManagerDefinitionRequest {
    }
    export interface PutAlertManagerDefinitionCommandOutput extends PutAlertManagerDefinitionResponse, __MetadataBearer {
    }
    /**
        * Update an alert manager definition.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, PutAlertManagerDefinitionCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, PutAlertManagerDefinitionCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new PutAlertManagerDefinitionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAlertManagerDefinitionCommandInput} for command's `input` shape.
        * @see {@link PutAlertManagerDefinitionCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class PutAlertManagerDefinitionCommand extends $Command<PutAlertManagerDefinitionCommandInput, PutAlertManagerDefinitionCommandOutput, AmpClientResolvedConfig> {
            readonly input: PutAlertManagerDefinitionCommandInput;
            constructor(input: PutAlertManagerDefinitionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAlertManagerDefinitionCommandInput, PutAlertManagerDefinitionCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/PutRuleGroupsNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { PutRuleGroupsNamespaceRequest, PutRuleGroupsNamespaceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface PutRuleGroupsNamespaceCommandInput extends PutRuleGroupsNamespaceRequest {
    }
    export interface PutRuleGroupsNamespaceCommandOutput extends PutRuleGroupsNamespaceResponse, __MetadataBearer {
    }
    /**
        * Update a rule groups namespace.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, PutRuleGroupsNamespaceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, PutRuleGroupsNamespaceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new PutRuleGroupsNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutRuleGroupsNamespaceCommandInput} for command's `input` shape.
        * @see {@link PutRuleGroupsNamespaceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class PutRuleGroupsNamespaceCommand extends $Command<PutRuleGroupsNamespaceCommandInput, PutRuleGroupsNamespaceCommandOutput, AmpClientResolvedConfig> {
            readonly input: PutRuleGroupsNamespaceCommandInput;
            constructor(input: PutRuleGroupsNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutRuleGroupsNamespaceCommandInput, PutRuleGroupsNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * Creates tags for the specified resource.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, TagResourceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, TagResourceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, AmpClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * Deletes tags from the specified resource.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, UntagResourceCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, UntagResourceCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, AmpClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/commands/UpdateWorkspaceAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmpClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/AmpClient";
    import { UpdateWorkspaceAliasRequest } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0";
    export interface UpdateWorkspaceAliasCommandInput extends UpdateWorkspaceAliasRequest {
    }
    export interface UpdateWorkspaceAliasCommandOutput extends __MetadataBearer {
    }
    /**
        * Updates an AMP workspace alias.
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmpClient, UpdateWorkspaceAliasCommand } from "@aws-sdk/client-amp"; // ES Modules import
        * // const { AmpClient, UpdateWorkspaceAliasCommand } = require("@aws-sdk/client-amp"); // CommonJS import
        * const client = new AmpClient(config);
        * const command = new UpdateWorkspaceAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateWorkspaceAliasCommandInput} for command's `input` shape.
        * @see {@link UpdateWorkspaceAliasCommandOutput} for command's `response` shape.
        * @see {@link AmpClientResolvedConfig | config} for AmpClient's `config` shape.
        *
        */
    export class UpdateWorkspaceAliasCommand extends $Command<UpdateWorkspaceAliasCommandInput, UpdateWorkspaceAliasCommandOutput, AmpClientResolvedConfig> {
            readonly input: UpdateWorkspaceAliasCommandInput;
            constructor(input: UpdateWorkspaceAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmpClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateWorkspaceAliasCommandInput, UpdateWorkspaceAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { AmpServiceException as __BaseException } from "@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/AmpServiceException";
    /**
        * User does not have sufficient access to perform this action.
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    /**
        * Updating or deleting a resource can cause an inconsistent state.
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * Identifier of the resource affected.
                */
            resourceId: string | undefined;
            /**
                * Type of the resource affected.
                */
            resourceType: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * Represents the input of a CreateAlertManagerDefinition operation.
        */
    export interface CreateAlertManagerDefinitionRequest {
            /**
                * The ID of the workspace in which to create the alert manager definition.
                */
            workspaceId: string | undefined;
            /**
                * The alert manager definition data.
                */
            data: Uint8Array | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace CreateAlertManagerDefinitionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAlertManagerDefinitionRequest) => any;
    }
    export enum AlertManagerDefinitionStatusCode {
            /**
                * Definition has been created/updated. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
                */
            ACTIVE = "ACTIVE",
            /**
                * Definition is being created. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
                */
            CREATING = "CREATING",
            /**
                * Definition creation failed.
                */
            CREATION_FAILED = "CREATION_FAILED",
            /**
                * Definition is being deleting. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
                */
            DELETING = "DELETING",
            /**
                * Definition update failed.
                */
            UPDATE_FAILED = "UPDATE_FAILED",
            /**
                * Definition is being updated. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
                */
            UPDATING = "UPDATING"
    }
    /**
        * Represents the status of a definition.
        */
    export interface AlertManagerDefinitionStatus {
            /**
                * Status code of this definition.
                */
            statusCode: AlertManagerDefinitionStatusCode | string | undefined;
            /**
                * The reason for failure if any.
                */
            statusReason?: string;
    }
    export namespace AlertManagerDefinitionStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlertManagerDefinitionStatus) => any;
    }
    /**
        * Represents the output of a CreateAlertManagerDefinition operation.
        */
    export interface CreateAlertManagerDefinitionResponse {
            /**
                * The status of alert manager definition.
                */
            status: AlertManagerDefinitionStatus | undefined;
    }
    export namespace CreateAlertManagerDefinitionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAlertManagerDefinitionResponse) => any;
    }
    /**
        * Unexpected error during processing of request.
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            $retryable: {};
            /**
                * Advice to clients on when the call can be safely retried.
                */
            retryAfterSeconds?: number;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * Request references a resource which does not exist.
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * Identifier of the resource affected.
                */
            resourceId: string | undefined;
            /**
                * Type of the resource affected.
                */
            resourceType: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * Request would cause a service quota to be exceeded.
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            /**
                * Identifier of the resource affected.
                */
            resourceId: string | undefined;
            /**
                * Type of the resource affected.
                */
            resourceType: string | undefined;
            /**
                * Service Quotas requirement to identify originating service.
                */
            serviceCode: string | undefined;
            /**
                * Service Quotas requirement to identify originating quota.
                */
            quotaCode: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    /**
        * Request was denied due to request throttling.
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            $retryable: {};
            /**
                * Service Quotas requirement to identify originating service.
                */
            serviceCode?: string;
            /**
                * Service Quotas requirement to identify originating quota.
                */
            quotaCode?: string;
            /**
                * Advice to clients on when the call can be safely retried.
                */
            retryAfterSeconds?: number;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * Stores information about a field passed inside a request that resulted in an exception.
        */
    export interface ValidationExceptionField {
            /**
                * The field name.
                */
            name: string | undefined;
            /**
                * Message describing why the field failed validation.
                */
            message: string | undefined;
    }
    export namespace ValidationExceptionField {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ValidationExceptionField) => any;
    }
    export enum ValidationExceptionReason {
            CANNOT_PARSE = "CANNOT_PARSE",
            FIELD_VALIDATION_FAILED = "FIELD_VALIDATION_FAILED",
            OTHER = "OTHER",
            UNKNOWN_OPERATION = "UNKNOWN_OPERATION"
    }
    /**
        * The input fails to satisfy the constraints specified by an AWS service.
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * Reason the request failed validation.
                */
            reason: ValidationExceptionReason | string | undefined;
            /**
                * The field that caused the error, if applicable. If more than one field caused the error, pick one and elaborate in the message.
                */
            fieldList?: ValidationExceptionField[];
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    /**
        * Represents the input of a DeleteAlertManagerDefinition operation.
        */
    export interface DeleteAlertManagerDefinitionRequest {
            /**
                * The ID of the workspace in which to delete the alert manager definition.
                */
            workspaceId: string | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace DeleteAlertManagerDefinitionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAlertManagerDefinitionRequest) => any;
    }
    /**
        * Represents the input of a DescribeAlertManagerDefinition operation.
        */
    export interface DescribeAlertManagerDefinitionRequest {
            /**
                * The ID of the workspace to describe.
                */
            workspaceId: string | undefined;
    }
    export namespace DescribeAlertManagerDefinitionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAlertManagerDefinitionRequest) => any;
    }
    /**
        * Represents the properties of an alert manager definition.
        */
    export interface AlertManagerDefinitionDescription {
            /**
                * The status of alert manager definition.
                */
            status: AlertManagerDefinitionStatus | undefined;
            /**
                * The alert manager definition.
                */
            data: Uint8Array | undefined;
            /**
                * The time when the alert manager definition was created.
                */
            createdAt: Date | undefined;
            /**
                * The time when the alert manager definition was modified.
                */
            modifiedAt: Date | undefined;
    }
    export namespace AlertManagerDefinitionDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlertManagerDefinitionDescription) => any;
    }
    /**
        * Represents the output of a DescribeAlertManagerDefinition operation.
        */
    export interface DescribeAlertManagerDefinitionResponse {
            /**
                * The properties of the selected workspace's alert manager definition.
                */
            alertManagerDefinition: AlertManagerDefinitionDescription | undefined;
    }
    export namespace DescribeAlertManagerDefinitionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAlertManagerDefinitionResponse) => any;
    }
    /**
        * Represents the input of a PutAlertManagerDefinition operation.
        */
    export interface PutAlertManagerDefinitionRequest {
            /**
                * The ID of the workspace in which to update the alert manager definition.
                */
            workspaceId: string | undefined;
            /**
                * The alert manager definition data.
                */
            data: Uint8Array | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace PutAlertManagerDefinitionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAlertManagerDefinitionRequest) => any;
    }
    /**
        * Represents the output of a PutAlertManagerDefinition operation.
        */
    export interface PutAlertManagerDefinitionResponse {
            /**
                * The status of alert manager definition.
                */
            status: AlertManagerDefinitionStatus | undefined;
    }
    export namespace PutAlertManagerDefinitionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAlertManagerDefinitionResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * The ARN of the resource.
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * The list of tags assigned to the resource.
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * The ARN of the resource.
                */
            resourceArn: string | undefined;
            /**
                * The list of tags assigned to the resource.
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * The ARN of the resource.
                */
            resourceArn: string | undefined;
            /**
                * One or more tag keys
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    /**
        * Represents the input of a CreateWorkspace operation.
        */
    export interface CreateWorkspaceRequest {
            /**
                * An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.
                */
            alias?: string;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
            /**
                * Optional, user-provided tags for this workspace.
                */
            tags?: Record<string, string>;
    }
    export namespace CreateWorkspaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWorkspaceRequest) => any;
    }
    export enum WorkspaceStatusCode {
            /**
                * Workspace has been created and is usable.
                */
            ACTIVE = "ACTIVE",
            /**
                * Workspace is being created. Deletion is disallowed until status is ACTIVE.
                */
            CREATING = "CREATING",
            /**
                * Workspace creation failed. Refer to WorkspaceStatus.failureReason for more details.
                */
            CREATION_FAILED = "CREATION_FAILED",
            /**
                * Workspace is being deleted. Deletions are allowed only when status is ACTIVE.
                */
            DELETING = "DELETING",
            /**
                * Workspace is being updated. Updates are allowed only when status is ACTIVE.
                */
            UPDATING = "UPDATING"
    }
    /**
        * Represents the status of a workspace.
        */
    export interface WorkspaceStatus {
            /**
                * Status code of this workspace.
                */
            statusCode: WorkspaceStatusCode | string | undefined;
    }
    export namespace WorkspaceStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WorkspaceStatus) => any;
    }
    /**
        * Represents the output of a CreateWorkspace operation.
        */
    export interface CreateWorkspaceResponse {
            /**
                * The generated ID of the workspace that was just created.
                */
            workspaceId: string | undefined;
            /**
                * The ARN of the workspace that was just created.
                */
            arn: string | undefined;
            /**
                * The status of the workspace that was just created (usually CREATING).
                */
            status: WorkspaceStatus | undefined;
            /**
                * The tags of this workspace.
                */
            tags?: Record<string, string>;
    }
    export namespace CreateWorkspaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWorkspaceResponse) => any;
    }
    /**
        * Represents the input of a DeleteWorkspace operation.
        */
    export interface DeleteWorkspaceRequest {
            /**
                * The ID of the workspace to delete.
                */
            workspaceId: string | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace DeleteWorkspaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteWorkspaceRequest) => any;
    }
    /**
        * Represents the input of a DescribeWorkspace operation.
        */
    export interface DescribeWorkspaceRequest {
            /**
                * The ID of the workspace to describe.
                */
            workspaceId: string | undefined;
    }
    export namespace DescribeWorkspaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeWorkspaceRequest) => any;
    }
    /**
        * Represents the properties of a workspace.
        */
    export interface WorkspaceDescription {
            /**
                * Unique string identifying this workspace.
                */
            workspaceId: string | undefined;
            /**
                * Alias of this workspace.
                */
            alias?: string;
            /**
                * The Amazon Resource Name (ARN) of this workspace.
                */
            arn: string | undefined;
            /**
                * The status of this workspace.
                */
            status: WorkspaceStatus | undefined;
            /**
                * Prometheus endpoint URI.
                */
            prometheusEndpoint?: string;
            /**
                * The time when the workspace was created.
                */
            createdAt: Date | undefined;
            /**
                * The tags of this workspace.
                */
            tags?: Record<string, string>;
    }
    export namespace WorkspaceDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WorkspaceDescription) => any;
    }
    /**
        * Represents the output of a DescribeWorkspace operation.
        */
    export interface DescribeWorkspaceResponse {
            /**
                * The properties of the selected workspace.
                */
            workspace: WorkspaceDescription | undefined;
    }
    export namespace DescribeWorkspaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeWorkspaceResponse) => any;
    }
    /**
        * Represents the input of a ListWorkspaces operation.
        */
    export interface ListWorkspacesRequest {
            /**
                * Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.
                */
            nextToken?: string;
            /**
                * Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.
                */
            alias?: string;
            /**
                * Maximum results to return in response (default=100, maximum=1000).
                */
            maxResults?: number;
    }
    export namespace ListWorkspacesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWorkspacesRequest) => any;
    }
    /**
        * Represents a summary of the properties of a workspace.
        */
    export interface WorkspaceSummary {
            /**
                * Unique string identifying this workspace.
                */
            workspaceId: string | undefined;
            /**
                * Alias of this workspace.
                */
            alias?: string;
            /**
                * The AmazonResourceName of this workspace.
                */
            arn: string | undefined;
            /**
                * The status of this workspace.
                */
            status: WorkspaceStatus | undefined;
            /**
                * The time when the workspace was created.
                */
            createdAt: Date | undefined;
            /**
                * The tags of this workspace.
                */
            tags?: Record<string, string>;
    }
    export namespace WorkspaceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WorkspaceSummary) => any;
    }
    /**
        * Represents the output of a ListWorkspaces operation.
        */
    export interface ListWorkspacesResponse {
            /**
                * The list of existing workspaces, including those undergoing creation or deletion.
                */
            workspaces: WorkspaceSummary[] | undefined;
            /**
                * Pagination token to use when requesting the next page in this list.
                */
            nextToken?: string;
    }
    export namespace ListWorkspacesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWorkspacesResponse) => any;
    }
    /**
        * Represents the input of a CreateRuleGroupsNamespace operation.
        */
    export interface CreateRuleGroupsNamespaceRequest {
            /**
                * The ID of the workspace in which to create the rule group namespace.
                */
            workspaceId: string | undefined;
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The namespace data that define the rule groups.
                */
            data: Uint8Array | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
            /**
                * Optional, user-provided tags for this rule groups namespace.
                */
            tags?: Record<string, string>;
    }
    export namespace CreateRuleGroupsNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleGroupsNamespaceRequest) => any;
    }
    export enum RuleGroupsNamespaceStatusCode {
            /**
                * Namespace has been created/updated. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
                */
            ACTIVE = "ACTIVE",
            /**
                * Namespace is being created. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
                */
            CREATING = "CREATING",
            /**
                * Namespace creation failed.
                */
            CREATION_FAILED = "CREATION_FAILED",
            /**
                * Namespace is being deleting. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
                */
            DELETING = "DELETING",
            /**
                * Namespace update failed.
                */
            UPDATE_FAILED = "UPDATE_FAILED",
            /**
                * Namespace is being updated. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
                */
            UPDATING = "UPDATING"
    }
    /**
        * Represents the status of a namespace.
        */
    export interface RuleGroupsNamespaceStatus {
            /**
                * Status code of this namespace.
                */
            statusCode: RuleGroupsNamespaceStatusCode | string | undefined;
            /**
                * The reason for failure if any.
                */
            statusReason?: string;
    }
    export namespace RuleGroupsNamespaceStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroupsNamespaceStatus) => any;
    }
    /**
        * Represents the output of a CreateRuleGroupsNamespace operation.
        */
    export interface CreateRuleGroupsNamespaceResponse {
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The Amazon Resource Name (ARN) of this rule groups namespace.
                */
            arn: string | undefined;
            /**
                * The status of rule groups namespace.
                */
            status: RuleGroupsNamespaceStatus | undefined;
            /**
                * The tags of this rule groups namespace.
                */
            tags?: Record<string, string>;
    }
    export namespace CreateRuleGroupsNamespaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleGroupsNamespaceResponse) => any;
    }
    /**
        * Represents the input of a DeleteRuleGroupsNamespace operation.
        */
    export interface DeleteRuleGroupsNamespaceRequest {
            /**
                * The ID of the workspace to delete rule group definition.
                */
            workspaceId: string | undefined;
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace DeleteRuleGroupsNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleGroupsNamespaceRequest) => any;
    }
    /**
        * Represents the input of a DescribeRuleGroupsNamespace operation.
        */
    export interface DescribeRuleGroupsNamespaceRequest {
            /**
                * The ID of the workspace to describe.
                */
            workspaceId: string | undefined;
            /**
                * The rule groups namespace.
                */
            name: string | undefined;
    }
    export namespace DescribeRuleGroupsNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRuleGroupsNamespaceRequest) => any;
    }
    /**
        * Represents a description of the rule groups namespace.
        */
    export interface RuleGroupsNamespaceDescription {
            /**
                * The Amazon Resource Name (ARN) of this rule groups namespace.
                */
            arn: string | undefined;
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The status of rule groups namespace.
                */
            status: RuleGroupsNamespaceStatus | undefined;
            /**
                * The rule groups namespace data.
                */
            data: Uint8Array | undefined;
            /**
                * The time when the rule groups namespace was created.
                */
            createdAt: Date | undefined;
            /**
                * The time when the rule groups namespace was modified.
                */
            modifiedAt: Date | undefined;
            /**
                * The tags of this rule groups namespace.
                */
            tags?: Record<string, string>;
    }
    export namespace RuleGroupsNamespaceDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroupsNamespaceDescription) => any;
    }
    /**
        * Represents the output of a DescribeRuleGroupsNamespace operation.
        */
    export interface DescribeRuleGroupsNamespaceResponse {
            /**
                * The selected rule groups namespace.
                */
            ruleGroupsNamespace: RuleGroupsNamespaceDescription | undefined;
    }
    export namespace DescribeRuleGroupsNamespaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRuleGroupsNamespaceResponse) => any;
    }
    /**
        * Represents the input of a ListRuleGroupsNamespaces operation.
        */
    export interface ListRuleGroupsNamespacesRequest {
            /**
                * The ID of the workspace.
                */
            workspaceId: string | undefined;
            /**
                * Optional filter for rule groups namespace name. Only the rule groups namespace that begin with this value will be returned.
                */
            name?: string;
            /**
                * Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListRuleGroupsNamespaces request.
                */
            nextToken?: string;
            /**
                * Maximum results to return in response (default=100, maximum=1000).
                */
            maxResults?: number;
    }
    export namespace ListRuleGroupsNamespacesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRuleGroupsNamespacesRequest) => any;
    }
    /**
        * Represents a summary of the rule groups namespace.
        */
    export interface RuleGroupsNamespaceSummary {
            /**
                * The Amazon Resource Name (ARN) of this rule groups namespace.
                */
            arn: string | undefined;
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The status of rule groups namespace.
                */
            status: RuleGroupsNamespaceStatus | undefined;
            /**
                * The time when the rule groups namespace was created.
                */
            createdAt: Date | undefined;
            /**
                * The time when the rule groups namespace was modified.
                */
            modifiedAt: Date | undefined;
            /**
                * The tags of this rule groups namespace.
                */
            tags?: Record<string, string>;
    }
    export namespace RuleGroupsNamespaceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroupsNamespaceSummary) => any;
    }
    /**
        * Represents the output of a ListRuleGroupsNamespaces operation.
        */
    export interface ListRuleGroupsNamespacesResponse {
            /**
                * The list of the selected rule groups namespaces.
                */
            ruleGroupsNamespaces: RuleGroupsNamespaceSummary[] | undefined;
            /**
                * Pagination token to use when requesting the next page in this list.
                */
            nextToken?: string;
    }
    export namespace ListRuleGroupsNamespacesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRuleGroupsNamespacesResponse) => any;
    }
    /**
        * Represents the input of a PutRuleGroupsNamespace operation.
        */
    export interface PutRuleGroupsNamespaceRequest {
            /**
                * The ID of the workspace in which to update the rule group namespace.
                */
            workspaceId: string | undefined;
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The namespace data that define the rule groups.
                */
            data: Uint8Array | undefined;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace PutRuleGroupsNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRuleGroupsNamespaceRequest) => any;
    }
    /**
        * Represents the output of a PutRuleGroupsNamespace operation.
        */
    export interface PutRuleGroupsNamespaceResponse {
            /**
                * The rule groups namespace name.
                */
            name: string | undefined;
            /**
                * The Amazon Resource Name (ARN) of this rule groups namespace.
                */
            arn: string | undefined;
            /**
                * The status of rule groups namespace.
                */
            status: RuleGroupsNamespaceStatus | undefined;
            /**
                * The tags of this rule groups namespace.
                */
            tags?: Record<string, string>;
    }
    export namespace PutRuleGroupsNamespaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRuleGroupsNamespaceResponse) => any;
    }
    /**
        * Represents the input of an UpdateWorkspaceAlias operation.
        */
    export interface UpdateWorkspaceAliasRequest {
            /**
                * The ID of the workspace being updated.
                */
            workspaceId: string | undefined;
            /**
                * The new alias of the workspace.
                */
            alias?: string;
            /**
                * Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
                */
            clientToken?: string;
    }
    export namespace UpdateWorkspaceAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateWorkspaceAliasRequest) => any;
    }
}

declare module '@aws-sdk/client-amp/node_modules/@aws-sdk/client-amp/dist-types/models/AmpServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Amp service.
        */
    export class AmpServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

