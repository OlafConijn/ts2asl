// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   stream

declare module '@aws-sdk/client-glacier' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AbortMultipartUploadCommandInput, AbortMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortMultipartUploadCommand";
    import { AbortVaultLockCommandInput, AbortVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortVaultLockCommand";
    import { AddTagsToVaultCommandInput, AddTagsToVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AddTagsToVaultCommand";
    import { CompleteMultipartUploadCommandInput, CompleteMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteMultipartUploadCommand";
    import { CompleteVaultLockCommandInput, CompleteVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteVaultLockCommand";
    import { CreateVaultCommandInput, CreateVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CreateVaultCommand";
    import { DeleteArchiveCommandInput, DeleteArchiveCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteArchiveCommand";
    import { DeleteVaultAccessPolicyCommandInput, DeleteVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultAccessPolicyCommand";
    import { DeleteVaultCommandInput, DeleteVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultCommand";
    import { DeleteVaultNotificationsCommandInput, DeleteVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultNotificationsCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeJobCommand";
    import { DescribeVaultCommandInput, DescribeVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeVaultCommand";
    import { GetDataRetrievalPolicyCommandInput, GetDataRetrievalPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetDataRetrievalPolicyCommand";
    import { GetJobOutputCommandInput, GetJobOutputCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetJobOutputCommand";
    import { GetVaultAccessPolicyCommandInput, GetVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultAccessPolicyCommand";
    import { GetVaultLockCommandInput, GetVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultLockCommand";
    import { GetVaultNotificationsCommandInput, GetVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultNotificationsCommand";
    import { InitiateJobCommandInput, InitiateJobCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateJobCommand";
    import { InitiateMultipartUploadCommandInput, InitiateMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateMultipartUploadCommand";
    import { InitiateVaultLockCommandInput, InitiateVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateVaultLockCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListJobsCommand";
    import { ListMultipartUploadsCommandInput, ListMultipartUploadsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListMultipartUploadsCommand";
    import { ListPartsCommandInput, ListPartsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListPartsCommand";
    import { ListProvisionedCapacityCommandInput, ListProvisionedCapacityCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListProvisionedCapacityCommand";
    import { ListTagsForVaultCommandInput, ListTagsForVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListTagsForVaultCommand";
    import { ListVaultsCommandInput, ListVaultsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListVaultsCommand";
    import { PurchaseProvisionedCapacityCommandInput, PurchaseProvisionedCapacityCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/PurchaseProvisionedCapacityCommand";
    import { RemoveTagsFromVaultCommandInput, RemoveTagsFromVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/RemoveTagsFromVaultCommand";
    import { SetDataRetrievalPolicyCommandInput, SetDataRetrievalPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetDataRetrievalPolicyCommand";
    import { SetVaultAccessPolicyCommandInput, SetVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultAccessPolicyCommand";
    import { SetVaultNotificationsCommandInput, SetVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultNotificationsCommand";
    import { UploadArchiveCommandInput, UploadArchiveCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadArchiveCommand";
    import { UploadMultipartPartCommandInput, UploadMultipartPartCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadMultipartPartCommand";
    import { GlacierClient } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    /**
        * <p> Amazon S3 Glacier (Glacier) is a storage solution for "cold data."</p>
        *
        *          <p>Glacier is an extremely low-cost storage service that provides secure,
        *          durable, and easy-to-use storage for data backup and archival. With Glacier,
        *          customers can store their data cost effectively for months, years, or decades.
        *          Glacier also enables customers to offload the administrative burdens of operating and
        *          scaling storage to AWS, so they don't have to worry about capacity planning, hardware
        *          provisioning, data replication, hardware failure and recovery, or time-consuming hardware
        *          migrations.</p>
        *
        *          <p>Glacier is a great storage choice when low storage cost is paramount and your
        *          data is rarely retrieved. If your
        *          application requires fast or frequent access to your data, consider using Amazon S3. For
        *          more information, see <a href="http://aws.amazon.com/s3/">Amazon Simple Storage Service
        *             (Amazon S3)</a>.</p>
        *
        *          <p>You can store any kind of data in any format. There is no maximum limit on the total
        *          amount of data you can store in Glacier.</p>
        *
        *          <p>If you are a first-time user of Glacier, we recommend that you begin by
        *          reading the following sections in the <i>Amazon S3 Glacier Developer
        *          Guide</i>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html">What is
        *                   Amazon S3 Glacier</a> - This section of the Developer Guide describes the
        *                underlying data model, the operations it supports, and the AWS SDKs that you can use
        *                to interact with the service.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html">Getting Started
        *                   with Amazon S3 Glacier</a> - The Getting Started section walks you through the
        *                process of creating a vault, uploading archives, creating jobs to download archives,
        *                retrieving the job output, and deleting archives.</p>
        *             </li>
        *          </ul>
        */
    export class Glacier extends GlacierClient {
            /**
                * <p>This operation aborts a multipart upload identified by the upload ID.</p>
                *
                *
                *          <p>After the Abort Multipart Upload request succeeds, you cannot upload any more parts
                *          to the multipart upload or complete the multipart upload. Aborting a completed upload
                *          fails. However, aborting an already-aborted upload will succeed, for a short time. For more
                *          information about uploading a part and completing a multipart upload, see <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.</p>
                *
                *          <p>This operation is idempotent.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in
                *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort Multipart
                *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>
                */
            abortMultipartUpload(args: AbortMultipartUploadCommandInput, options?: __HttpHandlerOptions): Promise<AbortMultipartUploadCommandOutput>;
            abortMultipartUpload(args: AbortMultipartUploadCommandInput, cb: (err: any, data?: AbortMultipartUploadCommandOutput) => void): void;
            abortMultipartUpload(args: AbortMultipartUploadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AbortMultipartUploadCommandOutput) => void): void;
            /**
                * <p>This operation aborts the vault locking process if the vault lock is not in the
                *             <code>Locked</code> state. If the vault lock is in the <code>Locked</code> state when
                *          this operation is requested, the operation returns an <code>AccessDeniedException</code>
                *          error. Aborting the vault locking process removes the vault lock policy from the specified
                *          vault. </p>
                *          <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by
                *          calling <a>CompleteVaultLock</a>. You can get the state of a vault lock by
                *          calling <a>GetVaultLock</a>. For more information about the vault locking
                *          process, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault Lock</a>. For more information about vault lock policies, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
                *             Glacier Access Control with Vault Lock Policies</a>. </p>
                *          <p>This operation is idempotent. You can successfully invoke this operation multiple
                *          times, if the vault lock is in the <code>InProgress</code> state or if there is no policy
                *          associated with the vault.</p>
                */
            abortVaultLock(args: AbortVaultLockCommandInput, options?: __HttpHandlerOptions): Promise<AbortVaultLockCommandOutput>;
            abortVaultLock(args: AbortVaultLockCommandInput, cb: (err: any, data?: AbortVaultLockCommandOutput) => void): void;
            abortVaultLock(args: AbortVaultLockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AbortVaultLockCommandOutput) => void): void;
            /**
                * <p>This operation adds the specified tags to a vault. Each tag is composed of a key and
                *          a value. Each vault can have up to 10 tags. If your request would cause the tag limit for
                *          the vault to be exceeded, the operation throws the <code>LimitExceededException</code>
                *          error. If a tag already exists on the vault under a specified key, the existing key value
                *          will be overwritten. For more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier Resources</a>.
                *       </p>
                */
            addTagsToVault(args: AddTagsToVaultCommandInput, options?: __HttpHandlerOptions): Promise<AddTagsToVaultCommandOutput>;
            addTagsToVault(args: AddTagsToVaultCommandInput, cb: (err: any, data?: AddTagsToVaultCommandOutput) => void): void;
            addTagsToVault(args: AddTagsToVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddTagsToVaultCommandOutput) => void): void;
            /**
                * <p>You call this operation to inform Amazon S3 Glacier (Glacier) that all the archive parts have been
                *          uploaded and that Glacier can now assemble the archive from the uploaded parts.
                *          After assembling and saving the archive to the vault, Glacier returns the URI path
                *          of the newly created archive resource. Using the URI path, you can then access the archive.
                *          After you upload an archive, you should save the archive ID returned to retrieve the
                *          archive at a later point. You can also get the vault inventory to obtain a list of archive
                *          IDs in a vault. For more information, see <a>InitiateJob</a>.</p>
                *
                *          <p>In the request, you must include the computed SHA256 tree hash of the entire archive
                *          you have uploaded. For information about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
                *             Checksums</a>. On the server side, Glacier also constructs the SHA256 tree
                *          hash of the assembled archive. If the values match, Glacier saves the archive to the
                *          vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a> operation returns a list of parts uploaded for a specific
                *          multipart upload. It includes checksum information for each uploaded part that can be used
                *          to debug a bad checksum issue.</p>
                *
                *          <p>Additionally, Glacier also checks for any missing content ranges when
                *          assembling the archive, if missing content ranges are found, Glacier returns an
                *          error and the operation fails.</p>
                *
                *          <p>Complete Multipart Upload is an idempotent operation. After your first successful
                *          complete multipart upload, if you call the operation again within a short period, the
                *          operation will succeed and return the same archive ID. This is useful in the event you
                *          experience a network issue that causes an aborted connection or receive a 500 server error,
                *          in which case you can repeat your Complete Multipart Upload request and get the same
                *          archive ID without creating duplicate archives. Note, however, that after the multipart
                *          upload completes, you cannot call the List Parts operation and the multipart upload will
                *          not appear in List Multipart Uploads response, even if idempotent complete is
                *          possible.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
                *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html">Complete Multipart
                *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>
                */
            completeMultipartUpload(args: CompleteMultipartUploadCommandInput, options?: __HttpHandlerOptions): Promise<CompleteMultipartUploadCommandOutput>;
            completeMultipartUpload(args: CompleteMultipartUploadCommandInput, cb: (err: any, data?: CompleteMultipartUploadCommandOutput) => void): void;
            completeMultipartUpload(args: CompleteMultipartUploadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CompleteMultipartUploadCommandOutput) => void): void;
            /**
                * <p>This operation completes the vault locking process by transitioning the vault lock
                *          from the <code>InProgress</code> state to the <code>Locked</code> state, which causes the
                *          vault lock policy to become unchangeable. A vault lock is put into the
                *             <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. You can
                *          obtain the state of the vault lock by calling <a>GetVaultLock</a>. For more
                *          information about the vault locking process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault Lock</a>. </p>
                *          <p>This operation is idempotent. This request is always successful if the vault lock is
                *          in the <code>Locked</code> state and the provided lock ID matches the lock ID originally
                *          used to lock the vault.</p>
                *          <p>If an invalid lock ID is passed in the request when the vault lock is in the
                *             <code>Locked</code> state, the operation returns an <code>AccessDeniedException</code>
                *          error. If an invalid lock ID is passed in the request when the vault lock is in the
                *             <code>InProgress</code> state, the operation throws an <code>InvalidParameter</code>
                *          error.</p>
                */
            completeVaultLock(args: CompleteVaultLockCommandInput, options?: __HttpHandlerOptions): Promise<CompleteVaultLockCommandOutput>;
            completeVaultLock(args: CompleteVaultLockCommandInput, cb: (err: any, data?: CompleteVaultLockCommandOutput) => void): void;
            completeVaultLock(args: CompleteVaultLockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CompleteVaultLockCommandOutput) => void): void;
            /**
                * <p>This operation creates a new vault with the specified name. The name of the vault
                *          must be unique within a region for an AWS account. You can create up to 1,000 vaults per
                *          account. If you need to create more vaults, contact Amazon S3 Glacier.</p>
                *          <p>You must use the following guidelines when naming a vault.</p>
                *          <ul>
                *             <li>
                *                <p>Names can be between 1 and 255 characters long.</p>
                *             </li>
                *             <li>
                *                <p>Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.'
                *                (period).</p>
                *             </li>
                *          </ul>
                *
                *          <p>This operation is idempotent.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html">Creating a Vault in Amazon
                *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">Create Vault </a> in the
                *             <i>Amazon Glacier Developer Guide</i>. </p>
                */
            createVault(args: CreateVaultCommandInput, options?: __HttpHandlerOptions): Promise<CreateVaultCommandOutput>;
            createVault(args: CreateVaultCommandInput, cb: (err: any, data?: CreateVaultCommandOutput) => void): void;
            createVault(args: CreateVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVaultCommandOutput) => void): void;
            /**
                * <p>This operation deletes an archive from a vault. Subsequent requests to initiate a
                *          retrieval of this archive will fail. Archive retrievals that are in progress for this
                *          archive ID may or may not succeed according to the following scenarios:</p>
                *          <ul>
                *             <li>
                *                <p>If the archive retrieval job is actively preparing the data for download when
                *                Amazon S3 Glacier receives the delete archive request, the archival retrieval operation
                *                might fail.</p>
                *             </li>
                *             <li>
                *                <p>If the archive retrieval job has successfully prepared the archive for download
                *                when Amazon S3 Glacier receives the delete archive request, you will be able to download
                *                the output.</p>
                *             </li>
                *          </ul>
                *
                *          <p>This operation is idempotent. Attempting to delete an already-deleted archive does
                *          not result in an error.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html">Deleting an Archive in Amazon
                *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete Archive</a> in the
                *             <i>Amazon Glacier Developer Guide</i>. </p>
                */
            deleteArchive(args: DeleteArchiveCommandInput, options?: __HttpHandlerOptions): Promise<DeleteArchiveCommandOutput>;
            deleteArchive(args: DeleteArchiveCommandInput, cb: (err: any, data?: DeleteArchiveCommandOutput) => void): void;
            deleteArchive(args: DeleteArchiveCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteArchiveCommandOutput) => void): void;
            /**
                * <p>This operation deletes a vault. Amazon S3 Glacier will delete a vault only if there are
                *          no archives in the vault as of the last inventory and there have been no writes to the
                *          vault since the last inventory. If either of these conditions is not satisfied, the vault
                *          deletion fails (that is, the vault is not removed) and Amazon S3 Glacier returns an error. You
                *          can use <a>DescribeVault</a> to return the number of archives in a vault, and
                *          you can use <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate a Job (POST
                *             jobs)</a> to initiate a new inventory retrieval for a vault. The inventory contains
                *          the archive IDs you use to delete archives using <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete Archive (DELETE
                *             archive)</a>.</p>
                *
                *          <p>This operation is idempotent.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html">Deleting a Vault in Amazon
                *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">Delete Vault </a> in the
                *             <i>Amazon S3 Glacier Developer Guide</i>. </p>
                */
            deleteVault(args: DeleteVaultCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVaultCommandOutput>;
            deleteVault(args: DeleteVaultCommandInput, cb: (err: any, data?: DeleteVaultCommandOutput) => void): void;
            deleteVault(args: DeleteVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVaultCommandOutput) => void): void;
            /**
                * <p>This operation deletes the access policy associated with the specified vault. The
                *          operation is eventually consistent; that is, it might take some time for Amazon S3 Glacier to
                *          completely remove the access policy, and you might still see the effect of the policy for a
                *          short time after you send the delete request.</p>
                *          <p>This operation is idempotent. You can invoke delete multiple times, even if there is
                *          no policy associated with the vault. For more information about vault access policies, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control with Vault Access Policies</a>. </p>
                */
            deleteVaultAccessPolicy(args: DeleteVaultAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVaultAccessPolicyCommandOutput>;
            deleteVaultAccessPolicy(args: DeleteVaultAccessPolicyCommandInput, cb: (err: any, data?: DeleteVaultAccessPolicyCommandOutput) => void): void;
            deleteVaultAccessPolicy(args: DeleteVaultAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVaultAccessPolicyCommandOutput) => void): void;
            /**
                * <p>This operation deletes the notification configuration set for a vault. The operation
                *          is eventually consistent; that is, it might take some time for Amazon S3 Glacier to completely
                *          disable the notifications and you might still receive some notifications for a short time
                *          after you send the delete request.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *          <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
                *             Control Using AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
                *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html">Delete Vault
                *             Notification Configuration </a> in the Amazon S3 Glacier Developer Guide. </p>
                */
            deleteVaultNotifications(args: DeleteVaultNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVaultNotificationsCommandOutput>;
            deleteVaultNotifications(args: DeleteVaultNotificationsCommandInput, cb: (err: any, data?: DeleteVaultNotificationsCommandOutput) => void): void;
            deleteVaultNotifications(args: DeleteVaultNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVaultNotificationsCommandOutput) => void): void;
            /**
                * <p>This operation returns information about a job you previously initiated, including
                *          the job initiation date, the user who initiated the job, the job status code/message and
                *          the Amazon SNS topic to notify after Amazon S3 Glacier (Glacier) completes the job. For more information
                *          about initiating a job, see <a>InitiateJob</a>. </p>
                *
                *          <note>
                *             <p>This operation enables you to check the status of your job. However, it is
                *             strongly recommended that you set up an Amazon SNS topic and specify it in your initiate
                *             job request so that Glacier can notify the topic after it completes the
                *             job.</p>
                *          </note>
                *
                *          <p>A job ID will not expire for at least 24 hours after Glacier completes the
                *          job.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *
                *          <p> For more information about using this operation,
                *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html">Describe Job</a>
                *          in the <i>Amazon Glacier Developer Guide</i>. </p>
                */
            describeJob(args: DescribeJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobCommandOutput>;
            describeJob(args: DescribeJobCommandInput, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            describeJob(args: DescribeJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            /**
                * <p>This operation returns information about a vault, including the vault's Amazon
                *          Resource Name (ARN), the date the vault was created, the number of archives it contains,
                *          and the total size of all the archives in the vault. The number of archives and their total
                *          size are as of the last inventory generation. This means that if you add or remove an
                *          archive from a vault, and then immediately use Describe Vault, the change in contents will
                *          not be immediately reflected. If you want to retrieve the latest inventory of the vault,
                *          use <a>InitiateJob</a>. Amazon S3 Glacier generates vault inventories approximately
                *          daily. For more information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading a Vault Inventory in
                *             Amazon S3 Glacier</a>. </p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving Vault Metadata in
                *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">Describe Vault </a> in the
                *             <i>Amazon Glacier Developer Guide</i>. </p>
                */
            describeVault(args: DescribeVaultCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVaultCommandOutput>;
            describeVault(args: DescribeVaultCommandInput, cb: (err: any, data?: DescribeVaultCommandOutput) => void): void;
            describeVault(args: DescribeVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVaultCommandOutput) => void): void;
            /**
                * <p>This operation returns the current data retrieval policy for the account and region
                *          specified in the GET request. For more information about data retrieval policies, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon Glacier Data Retrieval Policies</a>.</p>
                */
            getDataRetrievalPolicy(args: GetDataRetrievalPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetDataRetrievalPolicyCommandOutput>;
            getDataRetrievalPolicy(args: GetDataRetrievalPolicyCommandInput, cb: (err: any, data?: GetDataRetrievalPolicyCommandOutput) => void): void;
            getDataRetrievalPolicy(args: GetDataRetrievalPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDataRetrievalPolicyCommandOutput) => void): void;
            /**
                * <p>This operation downloads the output of the job you initiated using <a>InitiateJob</a>. Depending on the job type you specified when you initiated the
                *          job, the output will be either the content of an archive or a vault inventory.</p>
                *
                *          <p>You can download all the job output or download a portion of the output by specifying
                *          a byte range. In the case of an archive retrieval job, depending on the byte range you
                *          specify, Amazon S3 Glacier (Glacier) returns the checksum for the portion of the data. You can compute the
                *          checksum on the client and verify that the values match to ensure the portion you downloaded
                *          is the correct data.</p>
                *          <p>A job ID will not expire for at least 24 hours after Glacier completes the job. That
                *          a byte range. For both archive and inventory retrieval jobs, you should verify the downloaded
                *          size against the size returned in the headers from the
                *          <b>Get Job Output</b> response.</p>
                *          <p>For archive retrieval jobs, you should also verify that the size is what you expected. If
                *          you download a portion of the output, the expected size is based on the range of bytes
                *          you specified. For example, if you specify a range of <code>bytes=0-1048575</code>, you should
                *          verify your download size is 1,048,576 bytes. If you download an entire archive, the
                *          expected size is the size of the archive when you uploaded it to Amazon S3 Glacier
                *          The expected size is also returned in the headers from the
                *          <b>Get Job Output</b> response.</p>
                *          <p>In the case of an archive retrieval job, depending on the byte range you
                *          specify, Glacier returns the checksum for the portion of the data. To ensure the portion you downloaded
                *          is the correct data, compute the checksum on the client, verify that the values match,
                *          and verify that the size is what you expected.</p>
                *
                *          <p>A job ID does not expire for at least 24 hours after Glacier completes the
                *          job. That is, you can download the job output within the 24 hours period after Amazon
                *          Glacier completes the job.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading a
                *             Vault Inventory</a>, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html">Downloading an
                *             Archive</a>, and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">Get Job Output </a>
                *          </p>
                */
            getJobOutput(args: GetJobOutputCommandInput, options?: __HttpHandlerOptions): Promise<GetJobOutputCommandOutput>;
            getJobOutput(args: GetJobOutputCommandInput, cb: (err: any, data?: GetJobOutputCommandOutput) => void): void;
            getJobOutput(args: GetJobOutputCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetJobOutputCommandOutput) => void): void;
            /**
                * <p>This operation retrieves the <code>access-policy</code> subresource set on the vault;
                *          for more information on setting this subresource, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html">Set Vault Access Policy
                *             (PUT access-policy)</a>. If there is no access policy set on the vault, the
                *          operation returns a <code>404 Not found</code> error. For more information about vault
                *          access policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control
                *             with Vault Access Policies</a>.</p>
                */
            getVaultAccessPolicy(args: GetVaultAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetVaultAccessPolicyCommandOutput>;
            getVaultAccessPolicy(args: GetVaultAccessPolicyCommandInput, cb: (err: any, data?: GetVaultAccessPolicyCommandOutput) => void): void;
            getVaultAccessPolicy(args: GetVaultAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVaultAccessPolicyCommandOutput) => void): void;
            /**
                * <p>This operation retrieves the following attributes from the <code>lock-policy</code>
                *          subresource set on the specified vault: </p>
                *          <ul>
                *             <li>
                *                <p>The vault lock policy set on the vault.</p>
                *             </li>
                *             <li>
                *                <p>The state of the vault lock, which is either <code>InProgess</code> or
                *                   <code>Locked</code>.</p>
                *             </li>
                *             <li>
                *                <p>When the lock ID expires. The lock ID is used to complete the vault locking
                *                process.</p>
                *             </li>
                *             <li>
                *                <p>When the vault lock was initiated and put into the <code>InProgress</code>
                *                state.</p>
                *             </li>
                *          </ul>
                *
                *          <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by
                *          calling <a>CompleteVaultLock</a>. You can abort the vault locking process by
                *          calling <a>AbortVaultLock</a>. For more information about the vault locking
                *          process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
                *             Glacier Vault Lock</a>. </p>
                *          <p>If there is no vault lock policy set on the vault, the operation returns a <code>404
                *             Not found</code> error. For more information about vault lock policies, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
                *             Glacier Access Control with Vault Lock Policies</a>. </p>
                */
            getVaultLock(args: GetVaultLockCommandInput, options?: __HttpHandlerOptions): Promise<GetVaultLockCommandOutput>;
            getVaultLock(args: GetVaultLockCommandInput, cb: (err: any, data?: GetVaultLockCommandOutput) => void): void;
            getVaultLock(args: GetVaultLockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVaultLockCommandOutput) => void): void;
            /**
                * <p>This operation retrieves the <code>notification-configuration</code> subresource of
                *          the specified vault.</p>
                *
                *          <p>For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>. If a notification configuration for a vault is not
                *          set, the operation returns a <code>404 Not Found</code> error. For more information about
                *          vault notifications, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
                *             Notifications in Amazon S3 Glacier</a>. </p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
                *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html">Get Vault Notification
                *             Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>
                */
            getVaultNotifications(args: GetVaultNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<GetVaultNotificationsCommandOutput>;
            getVaultNotifications(args: GetVaultNotificationsCommandInput, cb: (err: any, data?: GetVaultNotificationsCommandOutput) => void): void;
            getVaultNotifications(args: GetVaultNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVaultNotificationsCommandOutput) => void): void;
            /**
                * <p>This operation initiates a job of the specified type, which can be a select, an archival retrieval,
                *          or a vault retrieval. For more information about using this operation,
                *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
                *             a Job</a>.
                *       </p>
                */
            initiateJob(args: InitiateJobCommandInput, options?: __HttpHandlerOptions): Promise<InitiateJobCommandOutput>;
            initiateJob(args: InitiateJobCommandInput, cb: (err: any, data?: InitiateJobCommandOutput) => void): void;
            initiateJob(args: InitiateJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InitiateJobCommandOutput) => void): void;
            /**
                * <p>This operation initiates a multipart upload. Amazon S3 Glacier creates a multipart
                *          upload resource and returns its ID in the response. The multipart upload ID is used in
                *          subsequent requests to upload parts of an archive (see <a>UploadMultipartPart</a>).</p>
                *
                *          <p>When you initiate a multipart upload, you specify the part size in number of bytes.
                *          The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example, 1048576
                *          (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable
                *          part size is 1 MB, and the maximum is 4 GB.</p>
                *
                *          <p>Every part you upload to this resource (see <a>UploadMultipartPart</a>),
                *          except the last one, must have the same size. The last one can be the same size or smaller.
                *          For example, suppose you want to upload a 16.2 MB file. If you initiate the multipart
                *          upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part of
                *          0.2 MB. </p>
                *
                *          <note>
                *             <p>You don't need to know the size of the archive when you start a multipart upload
                *             because Amazon S3 Glacier does not require you to specify the overall archive
                *             size.</p>
                *          </note>
                *
                *          <p>After you complete the multipart upload, Amazon S3 Glacier (Glacier) removes the multipart upload
                *          resource referenced by the ID. Glacier also removes the multipart upload resource if
                *          you cancel the multipart upload or it may be removed if there is no activity for a period
                *          of 24 hours.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
                *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html">Initiate Multipart
                *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>.</p>
                */
            initiateMultipartUpload(args: InitiateMultipartUploadCommandInput, options?: __HttpHandlerOptions): Promise<InitiateMultipartUploadCommandOutput>;
            initiateMultipartUpload(args: InitiateMultipartUploadCommandInput, cb: (err: any, data?: InitiateMultipartUploadCommandOutput) => void): void;
            initiateMultipartUpload(args: InitiateMultipartUploadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InitiateMultipartUploadCommandOutput) => void): void;
            /**
                * <p>This operation initiates the vault locking process by doing the following:</p>
                *          <ul>
                *             <li>
                *                <p>Installing a vault lock policy on the specified vault.</p>
                *             </li>
                *             <li>
                *                <p>Setting the lock state of vault lock to <code>InProgress</code>.</p>
                *             </li>
                *             <li>
                *                <p>Returning a lock ID, which is used to complete the vault locking
                *                process.</p>
                *             </li>
                *          </ul>
                *
                *          <p>You can set one vault lock policy for each vault and this policy can be up to 20 KB
                *          in size. For more information about vault lock policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon Glacier Access Control with
                *             Vault Lock Policies</a>. </p>
                *          <p>You must complete the vault locking process within 24 hours after the vault lock
                *          enters the <code>InProgress</code> state. After the 24 hour window ends, the lock ID
                *          expires, the vault automatically exits the <code>InProgress</code> state, and the vault
                *          lock policy is removed from the vault. You call <a>CompleteVaultLock</a> to
                *          complete the vault locking process by setting the state of the vault lock to
                *             <code>Locked</code>. </p>
                *          <p>After a vault lock is in the <code>Locked</code> state, you cannot initiate a new
                *          vault lock for the vault.</p>
                *
                *          <p>You can abort the vault locking process by calling <a>AbortVaultLock</a>.
                *          You can get the state of the vault lock by calling <a>GetVaultLock</a>. For more
                *          information about the vault locking process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault
                *          Lock</a>.</p>
                *
                *          <p>If this operation is called when the vault lock is in the <code>InProgress</code>
                *          state, the operation returns an <code>AccessDeniedException</code> error. When the vault
                *          lock is in the <code>InProgress</code> state you must call <a>AbortVaultLock</a>
                *          before you can initiate a new vault lock policy. </p>
                */
            initiateVaultLock(args: InitiateVaultLockCommandInput, options?: __HttpHandlerOptions): Promise<InitiateVaultLockCommandOutput>;
            initiateVaultLock(args: InitiateVaultLockCommandInput, cb: (err: any, data?: InitiateVaultLockCommandOutput) => void): void;
            initiateVaultLock(args: InitiateVaultLockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InitiateVaultLockCommandOutput) => void): void;
            /**
                * <p>This operation lists jobs for a vault, including jobs that are in-progress and jobs
                *          that have recently finished. The List Job operation returns a list of these jobs sorted by job initiation
                *          time.</p>
                *
                *          <note>
                *             <p>Amazon Glacier retains recently completed jobs for a period before deleting them;
                *             however, it eventually removes completed jobs. The output of completed jobs can be
                *             retrieved. Retaining completed jobs for a period of time after they have completed
                *             enables you to get a job output in the event you miss the job completion notification or
                *             your first attempt to download it fails. For example, suppose you start an archive
                *             retrieval job to download an archive. After the job completes, you start to download the
                *             archive but encounter a network error. In this scenario, you can retry and download the
                *             archive while the job exists.</p>
                *          </note>
                *
                *          <p>The List Jobs operation supports pagination. You should always check the response <code>Marker</code> field.
                *          If there are no more jobs to list, the <code>Marker</code> field is set to <code>null</code>. If there are more jobs to list,
                *          the <code>Marker</code> field is set to a non-null value, which you can use to continue the pagination of the list.
                *          To return a list of jobs that begins at a specific job,
                *          set the marker request parameter to the <code>Marker</code> value for that job that you obtained from a previous List Jobs request.</p>
                *
                *          <p>You can set a maximum limit for the number of jobs returned in the response by
                *          specifying the <code>limit</code> parameter in the request. The default limit is 50. The
                *          number of jobs returned might be fewer than the limit, but the number of returned jobs
                *          never exceeds the limit.</p>
                *
                *         <p>Additionally, you can filter the jobs list returned by specifying the optional
                *             <code>statuscode</code> parameter or <code>completed</code> parameter, or both. Using
                *          the <code>statuscode</code> parameter, you can specify to return only jobs that match
                *          either the <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code> status.
                *          Using the <code>completed</code> parameter, you can specify to return only jobs that were
                *          completed (<code>true</code>) or jobs that were not completed
                *          (<code>false</code>).</p>
                *
                *          <p>For more information about using this operation,
                *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">List Jobs</a>. </p>
                */
            listJobs(args: ListJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListJobsCommandOutput>;
            listJobs(args: ListJobsCommandInput, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            listJobs(args: ListJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            /**
                * <p>This operation lists in-progress multipart uploads for the specified vault. An
                *          in-progress multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a> request, but has not yet been completed or aborted.
                *          The list returned in the List Multipart Upload response has no guaranteed order. </p>
                *
                *          <p>The List Multipart Uploads operation supports pagination. By default, this operation
                *          returns up to 50 multipart uploads in the response. You should always check the response
                *          for a <code>marker</code> at which to continue the list; if there are no more items the
                *             <code>marker</code> is <code>null</code>. To return a list of multipart uploads that
                *          begins at a specific upload, set the <code>marker</code> request parameter to the value you
                *          obtained from a previous List Multipart Upload request. You can also limit the number of
                *          uploads returned in the response by specifying the <code>limit</code> parameter in the
                *          request.</p>
                *
                *          <p>Note the difference between this operation and listing parts (<a>ListParts</a>). The List Multipart Uploads operation lists all multipart uploads
                *          for a vault and does not require a multipart upload ID. The List Parts operation requires a
                *          multipart upload ID since parts are associated with a single upload.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *
                *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
                *             with Archives in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html">List Multipart Uploads
                *          </a> in the <i>Amazon Glacier Developer Guide</i>.</p>
                */
            listMultipartUploads(args: ListMultipartUploadsCommandInput, options?: __HttpHandlerOptions): Promise<ListMultipartUploadsCommandOutput>;
            listMultipartUploads(args: ListMultipartUploadsCommandInput, cb: (err: any, data?: ListMultipartUploadsCommandOutput) => void): void;
            listMultipartUploads(args: ListMultipartUploadsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMultipartUploadsCommandOutput) => void): void;
            /**
                * <p>This operation lists the parts of an archive that have been uploaded in a specific
                *          multipart upload. You can make this request at any time during an in-progress multipart
                *          upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List
                *          Parts returns an error for completed uploads. The list returned in the List Parts response
                *          is sorted by part range. </p>
                *
                *          <p>The List Parts operation supports pagination. By default, this operation returns up
                *          to 50 uploaded parts in the response. You should always check the response for a
                *             <code>marker</code> at which to continue the list; if there are no more items the
                *             <code>marker</code> is <code>null</code>. To return a list of parts that begins at a
                *          specific part, set the <code>marker</code> request parameter to the value you obtained from
                *          a previous List Parts request. You can also limit the number of parts returned in the
                *          response by specifying the <code>limit</code> parameter in the request. </p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
                *             with Archives in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html">List Parts</a> in the
                *             <i>Amazon Glacier Developer Guide</i>.</p>
                */
            listParts(args: ListPartsCommandInput, options?: __HttpHandlerOptions): Promise<ListPartsCommandOutput>;
            listParts(args: ListPartsCommandInput, cb: (err: any, data?: ListPartsCommandOutput) => void): void;
            listParts(args: ListPartsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPartsCommandOutput) => void): void;
            /**
                * <p>This operation lists the provisioned capacity units for the specified AWS
                *          account.</p>
                */
            listProvisionedCapacity(args: ListProvisionedCapacityCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisionedCapacityCommandOutput>;
            listProvisionedCapacity(args: ListProvisionedCapacityCommandInput, cb: (err: any, data?: ListProvisionedCapacityCommandOutput) => void): void;
            listProvisionedCapacity(args: ListProvisionedCapacityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisionedCapacityCommandOutput) => void): void;
            /**
                * <p>This operation lists all the tags attached to a vault. The operation returns an empty
                *          map if there are no tags. For more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier
                *          Resources</a>.</p>
                */
            listTagsForVault(args: ListTagsForVaultCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForVaultCommandOutput>;
            listTagsForVault(args: ListTagsForVaultCommandInput, cb: (err: any, data?: ListTagsForVaultCommandOutput) => void): void;
            listTagsForVault(args: ListTagsForVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForVaultCommandOutput) => void): void;
            /**
                * <p>This operation lists all vaults owned by the calling user's account. The list
                *          returned in the response is ASCII-sorted by vault name.</p>
                *
                *          <p>By default, this operation returns up to 10 items. If there are more vaults to
                *          list, the response <code>marker</code> field contains the vault Amazon Resource Name (ARN)
                *          at which to continue the list with a new List Vaults request; otherwise, the
                *             <code>marker</code> field is <code>null</code>. To return a list of vaults that begins
                *          at a specific vault, set the <code>marker</code> request parameter to the vault ARN you
                *          obtained from a previous List Vaults request. You can also limit the number of vaults
                *          returned in the response by specifying the <code>limit</code> parameter in the request. </p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving Vault Metadata in
                *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List Vaults </a> in the
                *             <i>Amazon Glacier Developer Guide</i>. </p>
                */
            listVaults(args: ListVaultsCommandInput, options?: __HttpHandlerOptions): Promise<ListVaultsCommandOutput>;
            listVaults(args: ListVaultsCommandInput, cb: (err: any, data?: ListVaultsCommandOutput) => void): void;
            listVaults(args: ListVaultsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListVaultsCommandOutput) => void): void;
            /**
                * <p>This operation purchases a provisioned capacity unit for an AWS account. </p>
                */
            purchaseProvisionedCapacity(args: PurchaseProvisionedCapacityCommandInput, options?: __HttpHandlerOptions): Promise<PurchaseProvisionedCapacityCommandOutput>;
            purchaseProvisionedCapacity(args: PurchaseProvisionedCapacityCommandInput, cb: (err: any, data?: PurchaseProvisionedCapacityCommandOutput) => void): void;
            purchaseProvisionedCapacity(args: PurchaseProvisionedCapacityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PurchaseProvisionedCapacityCommandOutput) => void): void;
            /**
                * <p>This operation removes one or more tags from the set of tags attached to a vault. For
                *          more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier Resources</a>.
                *          This operation is idempotent. The operation will be successful, even if there are no tags
                *          attached to the vault. </p>
                */
            removeTagsFromVault(args: RemoveTagsFromVaultCommandInput, options?: __HttpHandlerOptions): Promise<RemoveTagsFromVaultCommandOutput>;
            removeTagsFromVault(args: RemoveTagsFromVaultCommandInput, cb: (err: any, data?: RemoveTagsFromVaultCommandOutput) => void): void;
            removeTagsFromVault(args: RemoveTagsFromVaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveTagsFromVaultCommandOutput) => void): void;
            /**
                * <p>This operation sets and then enacts a data retrieval policy in the region specified
                *          in the PUT request. You can set one policy per region for an AWS account. The policy is
                *          enacted within a few minutes of a successful PUT operation.</p>
                *          <p>The set policy operation does not affect retrieval jobs that were in progress before
                *          the policy was enacted. For more information about data retrieval policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
                *             Glacier Data Retrieval Policies</a>. </p>
                */
            setDataRetrievalPolicy(args: SetDataRetrievalPolicyCommandInput, options?: __HttpHandlerOptions): Promise<SetDataRetrievalPolicyCommandOutput>;
            setDataRetrievalPolicy(args: SetDataRetrievalPolicyCommandInput, cb: (err: any, data?: SetDataRetrievalPolicyCommandOutput) => void): void;
            setDataRetrievalPolicy(args: SetDataRetrievalPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetDataRetrievalPolicyCommandOutput) => void): void;
            /**
                * <p>This operation configures an access policy for a vault and will overwrite an existing
                *          policy. To configure a vault access policy, send a PUT request to the
                *             <code>access-policy</code> subresource of the vault. An access policy is specific to a
                *          vault and is also called a vault subresource. You can set one access policy per vault and
                *          the policy can be up to 20 KB in size. For more information about vault access policies,
                *          see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control with Vault Access Policies</a>. </p>
                */
            setVaultAccessPolicy(args: SetVaultAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<SetVaultAccessPolicyCommandOutput>;
            setVaultAccessPolicy(args: SetVaultAccessPolicyCommandInput, cb: (err: any, data?: SetVaultAccessPolicyCommandOutput) => void): void;
            setVaultAccessPolicy(args: SetVaultAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetVaultAccessPolicyCommandOutput) => void): void;
            /**
                * <p>This operation configures notifications that will be sent when specific events happen
                *          to a vault. By default, you don't get any notifications.</p>
                *
                *          <p>To configure vault notifications, send a PUT request to the
                *             <code>notification-configuration</code> subresource of the vault. The request should
                *          include a JSON document that provides an Amazon SNS topic and specific events for which you
                *          want Amazon S3 Glacier to send notifications to the topic.</p>
                *
                *          <p>Amazon SNS topics must grant permission to the vault to be allowed to publish
                *          notifications to the topic. You can configure a vault to publish a notification for the
                *          following vault events:</p>
                *
                *          <ul>
                *             <li>
                *                 <p>
                *                   <b>ArchiveRetrievalCompleted</b> This event occurs when a
                *                job that was initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or
                *                "Failed". The notification sent to the SNS topic is the same output as returned from
                *                   <a>DescribeJob</a>. </p>
                *             </li>
                *             <li>
                *
                *                <p>
                *                   <b>InventoryRetrievalCompleted</b> This event occurs when a
                *                job that was initiated for an inventory retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or
                *                "Failed". The notification sent to the SNS topic is the same output as returned from
                *                   <a>DescribeJob</a>. </p>
                *             </li>
                *          </ul>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
                *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html">Set Vault Notification
                *             Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>
                */
            setVaultNotifications(args: SetVaultNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<SetVaultNotificationsCommandOutput>;
            setVaultNotifications(args: SetVaultNotificationsCommandInput, cb: (err: any, data?: SetVaultNotificationsCommandOutput) => void): void;
            setVaultNotifications(args: SetVaultNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetVaultNotificationsCommandOutput) => void): void;
            /**
                * <p>This operation adds an archive to a vault. This is a synchronous operation, and for a
                *          successful upload, your data is durably persisted. Amazon S3 Glacier returns the archive ID in
                *          the <code>x-amz-archive-id</code> header of the response. </p>
                *
                *          <p>You must use the archive ID to access your data in Amazon S3 Glacier. After you upload
                *          an archive, you should save the archive ID returned so that you can retrieve or delete the
                *          archive later. Besides saving the archive ID, you can also index it and give it a friendly
                *          name to allow for better searching. You can also use the optional archive description field
                *          to specify how the archive is referred to in an external index of archives, such as you
                *          might create in Amazon DynamoDB. You can also get the vault inventory to obtain a list of
                *          archive IDs in a vault. For more information, see <a>InitiateJob</a>. </p>
                *
                *          <p>You must provide a SHA256 tree hash of the data you are uploading. For information
                *          about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing Checksums</a>. </p>
                *
                *          <p>You can optionally specify an archive description of up to 1,024 printable ASCII
                *          characters. You can get the archive description when you either retrieve the archive or get
                *          the vault inventory. For more information, see <a>InitiateJob</a>. Amazon
                *          Glacier does not interpret the description in any way. An archive description does not need
                *          to be unique. You cannot use the description to retrieve or sort the archive list. </p>
                *
                *          <p>Archives are immutable. After you upload an archive, you cannot edit the archive or
                *          its description.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading an Archive in Amazon
                *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload Archive</a> in the
                *             <i>Amazon Glacier Developer Guide</i>. </p>
                */
            uploadArchive(args: UploadArchiveCommandInput, options?: __HttpHandlerOptions): Promise<UploadArchiveCommandOutput>;
            uploadArchive(args: UploadArchiveCommandInput, cb: (err: any, data?: UploadArchiveCommandOutput) => void): void;
            uploadArchive(args: UploadArchiveCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UploadArchiveCommandOutput) => void): void;
            /**
                * <p>This operation uploads a part of an archive. You can upload archive parts in any
                *          order. You can also upload them in parallel. You can upload up to 10,000 parts for a
                *          multipart upload.</p>
                *
                *          <p>Amazon Glacier rejects your upload part request if any of the following conditions is
                *          true:</p>
                *
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>SHA256 tree hash does not match</b>To ensure that part
                *                data is not corrupted in transmission, you compute a SHA256 tree hash of the part and
                *                include it in your request. Upon receiving the part data, Amazon S3 Glacier also
                *                computes a SHA256 tree hash. If these hash values don't match, the operation fails.
                *                For information about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
                *                   Checksums</a>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Part size does not match</b>The size of each part except
                *                the last must match the size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size of the last part must be the
                *                same size as, or smaller than, the specified size.</p>
                *                <note>
                *                   <p>If you upload a part whose size is smaller than the part size you specified
                *                   in your initiate multipart upload request and that part is not the last part, then
                *                   the upload part request will succeed. However, the subsequent Complete Multipart
                *                   Upload request will fail.</p>
                *                </note>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Range does not align</b>The byte range value in the
                *                request does not align with the part size specified in the corresponding initiate
                *                request. For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to
                *                4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part
                *                ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align
                *                with the part size and the upload will fail. </p>
                *             </li>
                *          </ul>
                *
                *          <p>This operation is idempotent. If you upload the same part multiple times, the data
                *          included in the most recent request overwrites the previously uploaded data.</p>
                *
                *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
                *          Identity and Access Management (IAM) users don't have any permissions by default. You must
                *          grant them explicit permission to perform specific actions. For more information, see
                *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
                *             AWS Identity and Access Management (IAM)</a>.</p>
                *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
                *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html">Upload Part </a> in the
                *             <i>Amazon Glacier Developer Guide</i>.</p>
                */
            uploadMultipartPart(args: UploadMultipartPartCommandInput, options?: __HttpHandlerOptions): Promise<UploadMultipartPartCommandOutput>;
            uploadMultipartPart(args: UploadMultipartPartCommandInput, cb: (err: any, data?: UploadMultipartPartCommandOutput) => void): void;
            uploadMultipartPart(args: UploadMultipartPartCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UploadMultipartPartCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortMultipartUploadCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { AbortMultipartUploadInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface AbortMultipartUploadCommandInput extends AbortMultipartUploadInput {
    }
    export interface AbortMultipartUploadCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation aborts a multipart upload identified by the upload ID.</p>
        *
        *
        *          <p>After the Abort Multipart Upload request succeeds, you cannot upload any more parts
        *          to the multipart upload or complete the multipart upload. Aborting a completed upload
        *          fails. However, aborting an already-aborted upload will succeed, for a short time. For more
        *          information about uploading a part and completing a multipart upload, see <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.</p>
        *
        *          <p>This operation is idempotent.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in
        *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort Multipart
        *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, AbortMultipartUploadCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, AbortMultipartUploadCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new AbortMultipartUploadCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AbortMultipartUploadCommandInput} for command's `input` shape.
        * @see {@link AbortMultipartUploadCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class AbortMultipartUploadCommand extends $Command<AbortMultipartUploadCommandInput, AbortMultipartUploadCommandOutput, GlacierClientResolvedConfig> {
            readonly input: AbortMultipartUploadCommandInput;
            constructor(input: AbortMultipartUploadCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AbortMultipartUploadCommandInput, AbortMultipartUploadCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortVaultLockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { AbortVaultLockInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface AbortVaultLockCommandInput extends AbortVaultLockInput {
    }
    export interface AbortVaultLockCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation aborts the vault locking process if the vault lock is not in the
        *             <code>Locked</code> state. If the vault lock is in the <code>Locked</code> state when
        *          this operation is requested, the operation returns an <code>AccessDeniedException</code>
        *          error. Aborting the vault locking process removes the vault lock policy from the specified
        *          vault. </p>
        *          <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by
        *          calling <a>CompleteVaultLock</a>. You can get the state of a vault lock by
        *          calling <a>GetVaultLock</a>. For more information about the vault locking
        *          process, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault Lock</a>. For more information about vault lock policies, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
        *             Glacier Access Control with Vault Lock Policies</a>. </p>
        *          <p>This operation is idempotent. You can successfully invoke this operation multiple
        *          times, if the vault lock is in the <code>InProgress</code> state or if there is no policy
        *          associated with the vault.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, AbortVaultLockCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, AbortVaultLockCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new AbortVaultLockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AbortVaultLockCommandInput} for command's `input` shape.
        * @see {@link AbortVaultLockCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class AbortVaultLockCommand extends $Command<AbortVaultLockCommandInput, AbortVaultLockCommandOutput, GlacierClientResolvedConfig> {
            readonly input: AbortVaultLockCommandInput;
            constructor(input: AbortVaultLockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AbortVaultLockCommandInput, AbortVaultLockCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AddTagsToVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { AddTagsToVaultInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface AddTagsToVaultCommandInput extends AddTagsToVaultInput {
    }
    export interface AddTagsToVaultCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation adds the specified tags to a vault. Each tag is composed of a key and
        *          a value. Each vault can have up to 10 tags. If your request would cause the tag limit for
        *          the vault to be exceeded, the operation throws the <code>LimitExceededException</code>
        *          error. If a tag already exists on the vault under a specified key, the existing key value
        *          will be overwritten. For more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier Resources</a>.
        *       </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, AddTagsToVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, AddTagsToVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new AddTagsToVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddTagsToVaultCommandInput} for command's `input` shape.
        * @see {@link AddTagsToVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class AddTagsToVaultCommand extends $Command<AddTagsToVaultCommandInput, AddTagsToVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: AddTagsToVaultCommandInput;
            constructor(input: AddTagsToVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddTagsToVaultCommandInput, AddTagsToVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteMultipartUploadCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ArchiveCreationOutput, CompleteMultipartUploadInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface CompleteMultipartUploadCommandInput extends CompleteMultipartUploadInput {
    }
    export interface CompleteMultipartUploadCommandOutput extends ArchiveCreationOutput, __MetadataBearer {
    }
    /**
        * <p>You call this operation to inform Amazon S3 Glacier (Glacier) that all the archive parts have been
        *          uploaded and that Glacier can now assemble the archive from the uploaded parts.
        *          After assembling and saving the archive to the vault, Glacier returns the URI path
        *          of the newly created archive resource. Using the URI path, you can then access the archive.
        *          After you upload an archive, you should save the archive ID returned to retrieve the
        *          archive at a later point. You can also get the vault inventory to obtain a list of archive
        *          IDs in a vault. For more information, see <a>InitiateJob</a>.</p>
        *
        *          <p>In the request, you must include the computed SHA256 tree hash of the entire archive
        *          you have uploaded. For information about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
        *             Checksums</a>. On the server side, Glacier also constructs the SHA256 tree
        *          hash of the assembled archive. If the values match, Glacier saves the archive to the
        *          vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a> operation returns a list of parts uploaded for a specific
        *          multipart upload. It includes checksum information for each uploaded part that can be used
        *          to debug a bad checksum issue.</p>
        *
        *          <p>Additionally, Glacier also checks for any missing content ranges when
        *          assembling the archive, if missing content ranges are found, Glacier returns an
        *          error and the operation fails.</p>
        *
        *          <p>Complete Multipart Upload is an idempotent operation. After your first successful
        *          complete multipart upload, if you call the operation again within a short period, the
        *          operation will succeed and return the same archive ID. This is useful in the event you
        *          experience a network issue that causes an aborted connection or receive a 500 server error,
        *          in which case you can repeat your Complete Multipart Upload request and get the same
        *          archive ID without creating duplicate archives. Note, however, that after the multipart
        *          upload completes, you cannot call the List Parts operation and the multipart upload will
        *          not appear in List Multipart Uploads response, even if idempotent complete is
        *          possible.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
        *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html">Complete Multipart
        *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, CompleteMultipartUploadCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, CompleteMultipartUploadCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new CompleteMultipartUploadCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CompleteMultipartUploadCommandInput} for command's `input` shape.
        * @see {@link CompleteMultipartUploadCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class CompleteMultipartUploadCommand extends $Command<CompleteMultipartUploadCommandInput, CompleteMultipartUploadCommandOutput, GlacierClientResolvedConfig> {
            readonly input: CompleteMultipartUploadCommandInput;
            constructor(input: CompleteMultipartUploadCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CompleteMultipartUploadCommandInput, CompleteMultipartUploadCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteVaultLockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { CompleteVaultLockInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface CompleteVaultLockCommandInput extends CompleteVaultLockInput {
    }
    export interface CompleteVaultLockCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation completes the vault locking process by transitioning the vault lock
        *          from the <code>InProgress</code> state to the <code>Locked</code> state, which causes the
        *          vault lock policy to become unchangeable. A vault lock is put into the
        *             <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. You can
        *          obtain the state of the vault lock by calling <a>GetVaultLock</a>. For more
        *          information about the vault locking process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault Lock</a>. </p>
        *          <p>This operation is idempotent. This request is always successful if the vault lock is
        *          in the <code>Locked</code> state and the provided lock ID matches the lock ID originally
        *          used to lock the vault.</p>
        *          <p>If an invalid lock ID is passed in the request when the vault lock is in the
        *             <code>Locked</code> state, the operation returns an <code>AccessDeniedException</code>
        *          error. If an invalid lock ID is passed in the request when the vault lock is in the
        *             <code>InProgress</code> state, the operation throws an <code>InvalidParameter</code>
        *          error.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, CompleteVaultLockCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, CompleteVaultLockCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new CompleteVaultLockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CompleteVaultLockCommandInput} for command's `input` shape.
        * @see {@link CompleteVaultLockCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class CompleteVaultLockCommand extends $Command<CompleteVaultLockCommandInput, CompleteVaultLockCommandOutput, GlacierClientResolvedConfig> {
            readonly input: CompleteVaultLockCommandInput;
            constructor(input: CompleteVaultLockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CompleteVaultLockCommandInput, CompleteVaultLockCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CreateVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { CreateVaultInput, CreateVaultOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface CreateVaultCommandInput extends CreateVaultInput {
    }
    export interface CreateVaultCommandOutput extends CreateVaultOutput, __MetadataBearer {
    }
    /**
        * <p>This operation creates a new vault with the specified name. The name of the vault
        *          must be unique within a region for an AWS account. You can create up to 1,000 vaults per
        *          account. If you need to create more vaults, contact Amazon S3 Glacier.</p>
        *          <p>You must use the following guidelines when naming a vault.</p>
        *          <ul>
        *             <li>
        *                <p>Names can be between 1 and 255 characters long.</p>
        *             </li>
        *             <li>
        *                <p>Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.'
        *                (period).</p>
        *             </li>
        *          </ul>
        *
        *          <p>This operation is idempotent.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html">Creating a Vault in Amazon
        *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">Create Vault </a> in the
        *             <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, CreateVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, CreateVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new CreateVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateVaultCommandInput} for command's `input` shape.
        * @see {@link CreateVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class CreateVaultCommand extends $Command<CreateVaultCommandInput, CreateVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: CreateVaultCommandInput;
            constructor(input: CreateVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVaultCommandInput, CreateVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteArchiveCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DeleteArchiveInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DeleteArchiveCommandInput extends DeleteArchiveInput {
    }
    export interface DeleteArchiveCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes an archive from a vault. Subsequent requests to initiate a
        *          retrieval of this archive will fail. Archive retrievals that are in progress for this
        *          archive ID may or may not succeed according to the following scenarios:</p>
        *          <ul>
        *             <li>
        *                <p>If the archive retrieval job is actively preparing the data for download when
        *                Amazon S3 Glacier receives the delete archive request, the archival retrieval operation
        *                might fail.</p>
        *             </li>
        *             <li>
        *                <p>If the archive retrieval job has successfully prepared the archive for download
        *                when Amazon S3 Glacier receives the delete archive request, you will be able to download
        *                the output.</p>
        *             </li>
        *          </ul>
        *
        *          <p>This operation is idempotent. Attempting to delete an already-deleted archive does
        *          not result in an error.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html">Deleting an Archive in Amazon
        *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete Archive</a> in the
        *             <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DeleteArchiveCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DeleteArchiveCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DeleteArchiveCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteArchiveCommandInput} for command's `input` shape.
        * @see {@link DeleteArchiveCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DeleteArchiveCommand extends $Command<DeleteArchiveCommandInput, DeleteArchiveCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DeleteArchiveCommandInput;
            constructor(input: DeleteArchiveCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteArchiveCommandInput, DeleteArchiveCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DeleteVaultAccessPolicyInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DeleteVaultAccessPolicyCommandInput extends DeleteVaultAccessPolicyInput {
    }
    export interface DeleteVaultAccessPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes the access policy associated with the specified vault. The
        *          operation is eventually consistent; that is, it might take some time for Amazon S3 Glacier to
        *          completely remove the access policy, and you might still see the effect of the policy for a
        *          short time after you send the delete request.</p>
        *          <p>This operation is idempotent. You can invoke delete multiple times, even if there is
        *          no policy associated with the vault. For more information about vault access policies, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control with Vault Access Policies</a>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DeleteVaultAccessPolicyCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DeleteVaultAccessPolicyCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DeleteVaultAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVaultAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteVaultAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DeleteVaultAccessPolicyCommand extends $Command<DeleteVaultAccessPolicyCommandInput, DeleteVaultAccessPolicyCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DeleteVaultAccessPolicyCommandInput;
            constructor(input: DeleteVaultAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVaultAccessPolicyCommandInput, DeleteVaultAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DeleteVaultInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DeleteVaultCommandInput extends DeleteVaultInput {
    }
    export interface DeleteVaultCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes a vault. Amazon S3 Glacier will delete a vault only if there are
        *          no archives in the vault as of the last inventory and there have been no writes to the
        *          vault since the last inventory. If either of these conditions is not satisfied, the vault
        *          deletion fails (that is, the vault is not removed) and Amazon S3 Glacier returns an error. You
        *          can use <a>DescribeVault</a> to return the number of archives in a vault, and
        *          you can use <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate a Job (POST
        *             jobs)</a> to initiate a new inventory retrieval for a vault. The inventory contains
        *          the archive IDs you use to delete archives using <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete Archive (DELETE
        *             archive)</a>.</p>
        *
        *          <p>This operation is idempotent.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html">Deleting a Vault in Amazon
        *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">Delete Vault </a> in the
        *             <i>Amazon S3 Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DeleteVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DeleteVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DeleteVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVaultCommandInput} for command's `input` shape.
        * @see {@link DeleteVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DeleteVaultCommand extends $Command<DeleteVaultCommandInput, DeleteVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DeleteVaultCommandInput;
            constructor(input: DeleteVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVaultCommandInput, DeleteVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultNotificationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DeleteVaultNotificationsInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DeleteVaultNotificationsCommandInput extends DeleteVaultNotificationsInput {
    }
    export interface DeleteVaultNotificationsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation deletes the notification configuration set for a vault. The operation
        *          is eventually consistent; that is, it might take some time for Amazon S3 Glacier to completely
        *          disable the notifications and you might still receive some notifications for a short time
        *          after you send the delete request.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *          <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
        *             Control Using AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
        *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html">Delete Vault
        *             Notification Configuration </a> in the Amazon S3 Glacier Developer Guide. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DeleteVaultNotificationsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DeleteVaultNotificationsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DeleteVaultNotificationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVaultNotificationsCommandInput} for command's `input` shape.
        * @see {@link DeleteVaultNotificationsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DeleteVaultNotificationsCommand extends $Command<DeleteVaultNotificationsCommandInput, DeleteVaultNotificationsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DeleteVaultNotificationsCommandInput;
            constructor(input: DeleteVaultNotificationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVaultNotificationsCommandInput, DeleteVaultNotificationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DescribeJobInput, GlacierJobDescription } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DescribeJobCommandInput extends DescribeJobInput {
    }
    export interface DescribeJobCommandOutput extends GlacierJobDescription, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about a job you previously initiated, including
        *          the job initiation date, the user who initiated the job, the job status code/message and
        *          the Amazon SNS topic to notify after Amazon S3 Glacier (Glacier) completes the job. For more information
        *          about initiating a job, see <a>InitiateJob</a>. </p>
        *
        *          <note>
        *             <p>This operation enables you to check the status of your job. However, it is
        *             strongly recommended that you set up an Amazon SNS topic and specify it in your initiate
        *             job request so that Glacier can notify the topic after it completes the
        *             job.</p>
        *          </note>
        *
        *          <p>A job ID will not expire for at least 24 hours after Glacier completes the
        *          job.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *
        *          <p> For more information about using this operation,
        *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html">Describe Job</a>
        *          in the <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DescribeJobCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DescribeJobCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DescribeJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeJobCommandInput} for command's `input` shape.
        * @see {@link DescribeJobCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DescribeJobCommand extends $Command<DescribeJobCommandInput, DescribeJobCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DescribeJobCommandInput;
            constructor(input: DescribeJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJobCommandInput, DescribeJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { DescribeVaultInput, DescribeVaultOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface DescribeVaultCommandInput extends DescribeVaultInput {
    }
    export interface DescribeVaultCommandOutput extends DescribeVaultOutput, __MetadataBearer {
    }
    /**
        * <p>This operation returns information about a vault, including the vault's Amazon
        *          Resource Name (ARN), the date the vault was created, the number of archives it contains,
        *          and the total size of all the archives in the vault. The number of archives and their total
        *          size are as of the last inventory generation. This means that if you add or remove an
        *          archive from a vault, and then immediately use Describe Vault, the change in contents will
        *          not be immediately reflected. If you want to retrieve the latest inventory of the vault,
        *          use <a>InitiateJob</a>. Amazon S3 Glacier generates vault inventories approximately
        *          daily. For more information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading a Vault Inventory in
        *             Amazon S3 Glacier</a>. </p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving Vault Metadata in
        *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">Describe Vault </a> in the
        *             <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, DescribeVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, DescribeVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new DescribeVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeVaultCommandInput} for command's `input` shape.
        * @see {@link DescribeVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class DescribeVaultCommand extends $Command<DescribeVaultCommandInput, DescribeVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: DescribeVaultCommandInput;
            constructor(input: DescribeVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeVaultCommandInput, DescribeVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetDataRetrievalPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { GetDataRetrievalPolicyInput, GetDataRetrievalPolicyOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface GetDataRetrievalPolicyCommandInput extends GetDataRetrievalPolicyInput {
    }
    export interface GetDataRetrievalPolicyCommandOutput extends GetDataRetrievalPolicyOutput, __MetadataBearer {
    }
    /**
        * <p>This operation returns the current data retrieval policy for the account and region
        *          specified in the GET request. For more information about data retrieval policies, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon Glacier Data Retrieval Policies</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, GetDataRetrievalPolicyCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, GetDataRetrievalPolicyCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new GetDataRetrievalPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDataRetrievalPolicyCommandInput} for command's `input` shape.
        * @see {@link GetDataRetrievalPolicyCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class GetDataRetrievalPolicyCommand extends $Command<GetDataRetrievalPolicyCommandInput, GetDataRetrievalPolicyCommandOutput, GlacierClientResolvedConfig> {
            readonly input: GetDataRetrievalPolicyCommandInput;
            constructor(input: GetDataRetrievalPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDataRetrievalPolicyCommandInput, GetDataRetrievalPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetJobOutputCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { GetJobOutputInput, GetJobOutputOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface GetJobOutputCommandInput extends GetJobOutputInput {
    }
    export interface GetJobOutputCommandOutput extends GetJobOutputOutput, __MetadataBearer {
    }
    /**
        * <p>This operation downloads the output of the job you initiated using <a>InitiateJob</a>. Depending on the job type you specified when you initiated the
        *          job, the output will be either the content of an archive or a vault inventory.</p>
        *
        *          <p>You can download all the job output or download a portion of the output by specifying
        *          a byte range. In the case of an archive retrieval job, depending on the byte range you
        *          specify, Amazon S3 Glacier (Glacier) returns the checksum for the portion of the data. You can compute the
        *          checksum on the client and verify that the values match to ensure the portion you downloaded
        *          is the correct data.</p>
        *          <p>A job ID will not expire for at least 24 hours after Glacier completes the job. That
        *          a byte range. For both archive and inventory retrieval jobs, you should verify the downloaded
        *          size against the size returned in the headers from the
        *          <b>Get Job Output</b> response.</p>
        *          <p>For archive retrieval jobs, you should also verify that the size is what you expected. If
        *          you download a portion of the output, the expected size is based on the range of bytes
        *          you specified. For example, if you specify a range of <code>bytes=0-1048575</code>, you should
        *          verify your download size is 1,048,576 bytes. If you download an entire archive, the
        *          expected size is the size of the archive when you uploaded it to Amazon S3 Glacier
        *          The expected size is also returned in the headers from the
        *          <b>Get Job Output</b> response.</p>
        *          <p>In the case of an archive retrieval job, depending on the byte range you
        *          specify, Glacier returns the checksum for the portion of the data. To ensure the portion you downloaded
        *          is the correct data, compute the checksum on the client, verify that the values match,
        *          and verify that the size is what you expected.</p>
        *
        *          <p>A job ID does not expire for at least 24 hours after Glacier completes the
        *          job. That is, you can download the job output within the 24 hours period after Amazon
        *          Glacier completes the job.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading a
        *             Vault Inventory</a>, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html">Downloading an
        *             Archive</a>, and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">Get Job Output </a>
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, GetJobOutputCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, GetJobOutputCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new GetJobOutputCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetJobOutputCommandInput} for command's `input` shape.
        * @see {@link GetJobOutputCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class GetJobOutputCommand extends $Command<GetJobOutputCommandInput, GetJobOutputCommandOutput, GlacierClientResolvedConfig> {
            readonly input: GetJobOutputCommandInput;
            constructor(input: GetJobOutputCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetJobOutputCommandInput, GetJobOutputCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { GetVaultAccessPolicyInput, GetVaultAccessPolicyOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface GetVaultAccessPolicyCommandInput extends GetVaultAccessPolicyInput {
    }
    export interface GetVaultAccessPolicyCommandOutput extends GetVaultAccessPolicyOutput, __MetadataBearer {
    }
    /**
        * <p>This operation retrieves the <code>access-policy</code> subresource set on the vault;
        *          for more information on setting this subresource, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html">Set Vault Access Policy
        *             (PUT access-policy)</a>. If there is no access policy set on the vault, the
        *          operation returns a <code>404 Not found</code> error. For more information about vault
        *          access policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control
        *             with Vault Access Policies</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, GetVaultAccessPolicyCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, GetVaultAccessPolicyCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new GetVaultAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVaultAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link GetVaultAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class GetVaultAccessPolicyCommand extends $Command<GetVaultAccessPolicyCommandInput, GetVaultAccessPolicyCommandOutput, GlacierClientResolvedConfig> {
            readonly input: GetVaultAccessPolicyCommandInput;
            constructor(input: GetVaultAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVaultAccessPolicyCommandInput, GetVaultAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultLockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { GetVaultLockInput, GetVaultLockOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface GetVaultLockCommandInput extends GetVaultLockInput {
    }
    export interface GetVaultLockCommandOutput extends GetVaultLockOutput, __MetadataBearer {
    }
    /**
        * <p>This operation retrieves the following attributes from the <code>lock-policy</code>
        *          subresource set on the specified vault: </p>
        *          <ul>
        *             <li>
        *                <p>The vault lock policy set on the vault.</p>
        *             </li>
        *             <li>
        *                <p>The state of the vault lock, which is either <code>InProgess</code> or
        *                   <code>Locked</code>.</p>
        *             </li>
        *             <li>
        *                <p>When the lock ID expires. The lock ID is used to complete the vault locking
        *                process.</p>
        *             </li>
        *             <li>
        *                <p>When the vault lock was initiated and put into the <code>InProgress</code>
        *                state.</p>
        *             </li>
        *          </ul>
        *
        *          <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by
        *          calling <a>CompleteVaultLock</a>. You can abort the vault locking process by
        *          calling <a>AbortVaultLock</a>. For more information about the vault locking
        *          process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
        *             Glacier Vault Lock</a>. </p>
        *          <p>If there is no vault lock policy set on the vault, the operation returns a <code>404
        *             Not found</code> error. For more information about vault lock policies, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
        *             Glacier Access Control with Vault Lock Policies</a>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, GetVaultLockCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, GetVaultLockCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new GetVaultLockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVaultLockCommandInput} for command's `input` shape.
        * @see {@link GetVaultLockCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class GetVaultLockCommand extends $Command<GetVaultLockCommandInput, GetVaultLockCommandOutput, GlacierClientResolvedConfig> {
            readonly input: GetVaultLockCommandInput;
            constructor(input: GetVaultLockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVaultLockCommandInput, GetVaultLockCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultNotificationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { GetVaultNotificationsInput, GetVaultNotificationsOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface GetVaultNotificationsCommandInput extends GetVaultNotificationsInput {
    }
    export interface GetVaultNotificationsCommandOutput extends GetVaultNotificationsOutput, __MetadataBearer {
    }
    /**
        * <p>This operation retrieves the <code>notification-configuration</code> subresource of
        *          the specified vault.</p>
        *
        *          <p>For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>. If a notification configuration for a vault is not
        *          set, the operation returns a <code>404 Not Found</code> error. For more information about
        *          vault notifications, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
        *             Notifications in Amazon S3 Glacier</a>. </p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
        *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html">Get Vault Notification
        *             Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, GetVaultNotificationsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, GetVaultNotificationsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new GetVaultNotificationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVaultNotificationsCommandInput} for command's `input` shape.
        * @see {@link GetVaultNotificationsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class GetVaultNotificationsCommand extends $Command<GetVaultNotificationsCommandInput, GetVaultNotificationsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: GetVaultNotificationsCommandInput;
            constructor(input: GetVaultNotificationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVaultNotificationsCommandInput, GetVaultNotificationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { InitiateJobInput, InitiateJobOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface InitiateJobCommandInput extends InitiateJobInput {
    }
    export interface InitiateJobCommandOutput extends InitiateJobOutput, __MetadataBearer {
    }
    /**
        * <p>This operation initiates a job of the specified type, which can be a select, an archival retrieval,
        *          or a vault retrieval. For more information about using this operation,
        *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
        *             a Job</a>.
        *       </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, InitiateJobCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, InitiateJobCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new InitiateJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link InitiateJobCommandInput} for command's `input` shape.
        * @see {@link InitiateJobCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class InitiateJobCommand extends $Command<InitiateJobCommandInput, InitiateJobCommandOutput, GlacierClientResolvedConfig> {
            readonly input: InitiateJobCommandInput;
            constructor(input: InitiateJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InitiateJobCommandInput, InitiateJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateMultipartUploadCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { InitiateMultipartUploadInput, InitiateMultipartUploadOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface InitiateMultipartUploadCommandInput extends InitiateMultipartUploadInput {
    }
    export interface InitiateMultipartUploadCommandOutput extends InitiateMultipartUploadOutput, __MetadataBearer {
    }
    /**
        * <p>This operation initiates a multipart upload. Amazon S3 Glacier creates a multipart
        *          upload resource and returns its ID in the response. The multipart upload ID is used in
        *          subsequent requests to upload parts of an archive (see <a>UploadMultipartPart</a>).</p>
        *
        *          <p>When you initiate a multipart upload, you specify the part size in number of bytes.
        *          The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example, 1048576
        *          (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable
        *          part size is 1 MB, and the maximum is 4 GB.</p>
        *
        *          <p>Every part you upload to this resource (see <a>UploadMultipartPart</a>),
        *          except the last one, must have the same size. The last one can be the same size or smaller.
        *          For example, suppose you want to upload a 16.2 MB file. If you initiate the multipart
        *          upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part of
        *          0.2 MB. </p>
        *
        *          <note>
        *             <p>You don't need to know the size of the archive when you start a multipart upload
        *             because Amazon S3 Glacier does not require you to specify the overall archive
        *             size.</p>
        *          </note>
        *
        *          <p>After you complete the multipart upload, Amazon S3 Glacier (Glacier) removes the multipart upload
        *          resource referenced by the ID. Glacier also removes the multipart upload resource if
        *          you cancel the multipart upload or it may be removed if there is no activity for a period
        *          of 24 hours.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
        *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html">Initiate Multipart
        *             Upload</a> in the <i>Amazon Glacier Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, InitiateMultipartUploadCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, InitiateMultipartUploadCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new InitiateMultipartUploadCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link InitiateMultipartUploadCommandInput} for command's `input` shape.
        * @see {@link InitiateMultipartUploadCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class InitiateMultipartUploadCommand extends $Command<InitiateMultipartUploadCommandInput, InitiateMultipartUploadCommandOutput, GlacierClientResolvedConfig> {
            readonly input: InitiateMultipartUploadCommandInput;
            constructor(input: InitiateMultipartUploadCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InitiateMultipartUploadCommandInput, InitiateMultipartUploadCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateVaultLockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { InitiateVaultLockInput, InitiateVaultLockOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface InitiateVaultLockCommandInput extends InitiateVaultLockInput {
    }
    export interface InitiateVaultLockCommandOutput extends InitiateVaultLockOutput, __MetadataBearer {
    }
    /**
        * <p>This operation initiates the vault locking process by doing the following:</p>
        *          <ul>
        *             <li>
        *                <p>Installing a vault lock policy on the specified vault.</p>
        *             </li>
        *             <li>
        *                <p>Setting the lock state of vault lock to <code>InProgress</code>.</p>
        *             </li>
        *             <li>
        *                <p>Returning a lock ID, which is used to complete the vault locking
        *                process.</p>
        *             </li>
        *          </ul>
        *
        *          <p>You can set one vault lock policy for each vault and this policy can be up to 20 KB
        *          in size. For more information about vault lock policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon Glacier Access Control with
        *             Vault Lock Policies</a>. </p>
        *          <p>You must complete the vault locking process within 24 hours after the vault lock
        *          enters the <code>InProgress</code> state. After the 24 hour window ends, the lock ID
        *          expires, the vault automatically exits the <code>InProgress</code> state, and the vault
        *          lock policy is removed from the vault. You call <a>CompleteVaultLock</a> to
        *          complete the vault locking process by setting the state of the vault lock to
        *             <code>Locked</code>. </p>
        *          <p>After a vault lock is in the <code>Locked</code> state, you cannot initiate a new
        *          vault lock for the vault.</p>
        *
        *          <p>You can abort the vault locking process by calling <a>AbortVaultLock</a>.
        *          You can get the state of the vault lock by calling <a>GetVaultLock</a>. For more
        *          information about the vault locking process, <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon Glacier Vault
        *          Lock</a>.</p>
        *
        *          <p>If this operation is called when the vault lock is in the <code>InProgress</code>
        *          state, the operation returns an <code>AccessDeniedException</code> error. When the vault
        *          lock is in the <code>InProgress</code> state you must call <a>AbortVaultLock</a>
        *          before you can initiate a new vault lock policy. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, InitiateVaultLockCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, InitiateVaultLockCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new InitiateVaultLockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link InitiateVaultLockCommandInput} for command's `input` shape.
        * @see {@link InitiateVaultLockCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class InitiateVaultLockCommand extends $Command<InitiateVaultLockCommandInput, InitiateVaultLockCommandOutput, GlacierClientResolvedConfig> {
            readonly input: InitiateVaultLockCommandInput;
            constructor(input: InitiateVaultLockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InitiateVaultLockCommandInput, InitiateVaultLockCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListJobsInput, ListJobsOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListJobsCommandInput extends ListJobsInput {
    }
    export interface ListJobsCommandOutput extends ListJobsOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists jobs for a vault, including jobs that are in-progress and jobs
        *          that have recently finished. The List Job operation returns a list of these jobs sorted by job initiation
        *          time.</p>
        *
        *          <note>
        *             <p>Amazon Glacier retains recently completed jobs for a period before deleting them;
        *             however, it eventually removes completed jobs. The output of completed jobs can be
        *             retrieved. Retaining completed jobs for a period of time after they have completed
        *             enables you to get a job output in the event you miss the job completion notification or
        *             your first attempt to download it fails. For example, suppose you start an archive
        *             retrieval job to download an archive. After the job completes, you start to download the
        *             archive but encounter a network error. In this scenario, you can retry and download the
        *             archive while the job exists.</p>
        *          </note>
        *
        *          <p>The List Jobs operation supports pagination. You should always check the response <code>Marker</code> field.
        *          If there are no more jobs to list, the <code>Marker</code> field is set to <code>null</code>. If there are more jobs to list,
        *          the <code>Marker</code> field is set to a non-null value, which you can use to continue the pagination of the list.
        *          To return a list of jobs that begins at a specific job,
        *          set the marker request parameter to the <code>Marker</code> value for that job that you obtained from a previous List Jobs request.</p>
        *
        *          <p>You can set a maximum limit for the number of jobs returned in the response by
        *          specifying the <code>limit</code> parameter in the request. The default limit is 50. The
        *          number of jobs returned might be fewer than the limit, but the number of returned jobs
        *          never exceeds the limit.</p>
        *
        *         <p>Additionally, you can filter the jobs list returned by specifying the optional
        *             <code>statuscode</code> parameter or <code>completed</code> parameter, or both. Using
        *          the <code>statuscode</code> parameter, you can specify to return only jobs that match
        *          either the <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code> status.
        *          Using the <code>completed</code> parameter, you can specify to return only jobs that were
        *          completed (<code>true</code>) or jobs that were not completed
        *          (<code>false</code>).</p>
        *
        *          <p>For more information about using this operation,
        *          see the documentation for the underlying REST API <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">List Jobs</a>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListJobsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListJobsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobsCommandInput} for command's `input` shape.
        * @see {@link ListJobsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListJobsCommand extends $Command<ListJobsCommandInput, ListJobsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListJobsCommandInput;
            constructor(input: ListJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobsCommandInput, ListJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListMultipartUploadsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListMultipartUploadsInput, ListMultipartUploadsOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListMultipartUploadsCommandInput extends ListMultipartUploadsInput {
    }
    export interface ListMultipartUploadsCommandOutput extends ListMultipartUploadsOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists in-progress multipart uploads for the specified vault. An
        *          in-progress multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a> request, but has not yet been completed or aborted.
        *          The list returned in the List Multipart Upload response has no guaranteed order. </p>
        *
        *          <p>The List Multipart Uploads operation supports pagination. By default, this operation
        *          returns up to 50 multipart uploads in the response. You should always check the response
        *          for a <code>marker</code> at which to continue the list; if there are no more items the
        *             <code>marker</code> is <code>null</code>. To return a list of multipart uploads that
        *          begins at a specific upload, set the <code>marker</code> request parameter to the value you
        *          obtained from a previous List Multipart Upload request. You can also limit the number of
        *          uploads returned in the response by specifying the <code>limit</code> parameter in the
        *          request.</p>
        *
        *          <p>Note the difference between this operation and listing parts (<a>ListParts</a>). The List Multipart Uploads operation lists all multipart uploads
        *          for a vault and does not require a multipart upload ID. The List Parts operation requires a
        *          multipart upload ID since parts are associated with a single upload.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *
        *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
        *             with Archives in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html">List Multipart Uploads
        *          </a> in the <i>Amazon Glacier Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListMultipartUploadsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListMultipartUploadsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListMultipartUploadsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMultipartUploadsCommandInput} for command's `input` shape.
        * @see {@link ListMultipartUploadsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListMultipartUploadsCommand extends $Command<ListMultipartUploadsCommandInput, ListMultipartUploadsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListMultipartUploadsCommandInput;
            constructor(input: ListMultipartUploadsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMultipartUploadsCommandInput, ListMultipartUploadsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListPartsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListPartsInput, ListPartsOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListPartsCommandInput extends ListPartsInput {
    }
    export interface ListPartsCommandOutput extends ListPartsOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists the parts of an archive that have been uploaded in a specific
        *          multipart upload. You can make this request at any time during an in-progress multipart
        *          upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List
        *          Parts returns an error for completed uploads. The list returned in the List Parts response
        *          is sorted by part range. </p>
        *
        *          <p>The List Parts operation supports pagination. By default, this operation returns up
        *          to 50 uploaded parts in the response. You should always check the response for a
        *             <code>marker</code> at which to continue the list; if there are no more items the
        *             <code>marker</code> is <code>null</code>. To return a list of parts that begins at a
        *          specific part, set the <code>marker</code> request parameter to the value you obtained from
        *          a previous List Parts request. You can also limit the number of parts returned in the
        *          response by specifying the <code>limit</code> parameter in the request. </p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
        *             with Archives in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html">List Parts</a> in the
        *             <i>Amazon Glacier Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListPartsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListPartsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListPartsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPartsCommandInput} for command's `input` shape.
        * @see {@link ListPartsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListPartsCommand extends $Command<ListPartsCommandInput, ListPartsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListPartsCommandInput;
            constructor(input: ListPartsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPartsCommandInput, ListPartsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListProvisionedCapacityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListProvisionedCapacityInput, ListProvisionedCapacityOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListProvisionedCapacityCommandInput extends ListProvisionedCapacityInput {
    }
    export interface ListProvisionedCapacityCommandOutput extends ListProvisionedCapacityOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists the provisioned capacity units for the specified AWS
        *          account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListProvisionedCapacityCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListProvisionedCapacityCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListProvisionedCapacityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisionedCapacityCommandInput} for command's `input` shape.
        * @see {@link ListProvisionedCapacityCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListProvisionedCapacityCommand extends $Command<ListProvisionedCapacityCommandInput, ListProvisionedCapacityCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListProvisionedCapacityCommandInput;
            constructor(input: ListProvisionedCapacityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisionedCapacityCommandInput, ListProvisionedCapacityCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListTagsForVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListTagsForVaultInput, ListTagsForVaultOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListTagsForVaultCommandInput extends ListTagsForVaultInput {
    }
    export interface ListTagsForVaultCommandOutput extends ListTagsForVaultOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists all the tags attached to a vault. The operation returns an empty
        *          map if there are no tags. For more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier
        *          Resources</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListTagsForVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListTagsForVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListTagsForVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForVaultCommandInput} for command's `input` shape.
        * @see {@link ListTagsForVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListTagsForVaultCommand extends $Command<ListTagsForVaultCommandInput, ListTagsForVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListTagsForVaultCommandInput;
            constructor(input: ListTagsForVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForVaultCommandInput, ListTagsForVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListVaultsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ListVaultsInput, ListVaultsOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface ListVaultsCommandInput extends ListVaultsInput {
    }
    export interface ListVaultsCommandOutput extends ListVaultsOutput, __MetadataBearer {
    }
    /**
        * <p>This operation lists all vaults owned by the calling user's account. The list
        *          returned in the response is ASCII-sorted by vault name.</p>
        *
        *          <p>By default, this operation returns up to 10 items. If there are more vaults to
        *          list, the response <code>marker</code> field contains the vault Amazon Resource Name (ARN)
        *          at which to continue the list with a new List Vaults request; otherwise, the
        *             <code>marker</code> field is <code>null</code>. To return a list of vaults that begins
        *          at a specific vault, set the <code>marker</code> request parameter to the vault ARN you
        *          obtained from a previous List Vaults request. You can also limit the number of vaults
        *          returned in the response by specifying the <code>limit</code> parameter in the request. </p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving Vault Metadata in
        *             Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List Vaults </a> in the
        *             <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, ListVaultsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, ListVaultsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new ListVaultsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListVaultsCommandInput} for command's `input` shape.
        * @see {@link ListVaultsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class ListVaultsCommand extends $Command<ListVaultsCommandInput, ListVaultsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: ListVaultsCommandInput;
            constructor(input: ListVaultsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListVaultsCommandInput, ListVaultsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/PurchaseProvisionedCapacityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { PurchaseProvisionedCapacityInput, PurchaseProvisionedCapacityOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface PurchaseProvisionedCapacityCommandInput extends PurchaseProvisionedCapacityInput {
    }
    export interface PurchaseProvisionedCapacityCommandOutput extends PurchaseProvisionedCapacityOutput, __MetadataBearer {
    }
    /**
        * <p>This operation purchases a provisioned capacity unit for an AWS account. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, PurchaseProvisionedCapacityCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, PurchaseProvisionedCapacityCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new PurchaseProvisionedCapacityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PurchaseProvisionedCapacityCommandInput} for command's `input` shape.
        * @see {@link PurchaseProvisionedCapacityCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class PurchaseProvisionedCapacityCommand extends $Command<PurchaseProvisionedCapacityCommandInput, PurchaseProvisionedCapacityCommandOutput, GlacierClientResolvedConfig> {
            readonly input: PurchaseProvisionedCapacityCommandInput;
            constructor(input: PurchaseProvisionedCapacityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PurchaseProvisionedCapacityCommandInput, PurchaseProvisionedCapacityCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/RemoveTagsFromVaultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { RemoveTagsFromVaultInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface RemoveTagsFromVaultCommandInput extends RemoveTagsFromVaultInput {
    }
    export interface RemoveTagsFromVaultCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation removes one or more tags from the set of tags attached to a vault. For
        *          more information about tags, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging Amazon S3 Glacier Resources</a>.
        *          This operation is idempotent. The operation will be successful, even if there are no tags
        *          attached to the vault. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, RemoveTagsFromVaultCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, RemoveTagsFromVaultCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new RemoveTagsFromVaultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveTagsFromVaultCommandInput} for command's `input` shape.
        * @see {@link RemoveTagsFromVaultCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class RemoveTagsFromVaultCommand extends $Command<RemoveTagsFromVaultCommandInput, RemoveTagsFromVaultCommandOutput, GlacierClientResolvedConfig> {
            readonly input: RemoveTagsFromVaultCommandInput;
            constructor(input: RemoveTagsFromVaultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveTagsFromVaultCommandInput, RemoveTagsFromVaultCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetDataRetrievalPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { SetDataRetrievalPolicyInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface SetDataRetrievalPolicyCommandInput extends SetDataRetrievalPolicyInput {
    }
    export interface SetDataRetrievalPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation sets and then enacts a data retrieval policy in the region specified
        *          in the PUT request. You can set one policy per region for an AWS account. The policy is
        *          enacted within a few minutes of a successful PUT operation.</p>
        *          <p>The set policy operation does not affect retrieval jobs that were in progress before
        *          the policy was enacted. For more information about data retrieval policies, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
        *             Glacier Data Retrieval Policies</a>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, SetDataRetrievalPolicyCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, SetDataRetrievalPolicyCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new SetDataRetrievalPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetDataRetrievalPolicyCommandInput} for command's `input` shape.
        * @see {@link SetDataRetrievalPolicyCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class SetDataRetrievalPolicyCommand extends $Command<SetDataRetrievalPolicyCommandInput, SetDataRetrievalPolicyCommandOutput, GlacierClientResolvedConfig> {
            readonly input: SetDataRetrievalPolicyCommandInput;
            constructor(input: SetDataRetrievalPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetDataRetrievalPolicyCommandInput, SetDataRetrievalPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { SetVaultAccessPolicyInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface SetVaultAccessPolicyCommandInput extends SetVaultAccessPolicyInput {
    }
    export interface SetVaultAccessPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation configures an access policy for a vault and will overwrite an existing
        *          policy. To configure a vault access policy, send a PUT request to the
        *             <code>access-policy</code> subresource of the vault. An access policy is specific to a
        *          vault and is also called a vault subresource. You can set one access policy per vault and
        *          the policy can be up to 20 KB in size. For more information about vault access policies,
        *          see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon Glacier Access Control with Vault Access Policies</a>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, SetVaultAccessPolicyCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, SetVaultAccessPolicyCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new SetVaultAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetVaultAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link SetVaultAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class SetVaultAccessPolicyCommand extends $Command<SetVaultAccessPolicyCommandInput, SetVaultAccessPolicyCommandOutput, GlacierClientResolvedConfig> {
            readonly input: SetVaultAccessPolicyCommandInput;
            constructor(input: SetVaultAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetVaultAccessPolicyCommandInput, SetVaultAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultNotificationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { SetVaultNotificationsInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    export interface SetVaultNotificationsCommandInput extends SetVaultNotificationsInput {
    }
    export interface SetVaultNotificationsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This operation configures notifications that will be sent when specific events happen
        *          to a vault. By default, you don't get any notifications.</p>
        *
        *          <p>To configure vault notifications, send a PUT request to the
        *             <code>notification-configuration</code> subresource of the vault. The request should
        *          include a JSON document that provides an Amazon SNS topic and specific events for which you
        *          want Amazon S3 Glacier to send notifications to the topic.</p>
        *
        *          <p>Amazon SNS topics must grant permission to the vault to be allowed to publish
        *          notifications to the topic. You can configure a vault to publish a notification for the
        *          following vault events:</p>
        *
        *          <ul>
        *             <li>
        *                 <p>
        *                   <b>ArchiveRetrievalCompleted</b> This event occurs when a
        *                job that was initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or
        *                "Failed". The notification sent to the SNS topic is the same output as returned from
        *                   <a>DescribeJob</a>. </p>
        *             </li>
        *             <li>
        *
        *                <p>
        *                   <b>InventoryRetrievalCompleted</b> This event occurs when a
        *                job that was initiated for an inventory retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or
        *                "Failed". The notification sent to the SNS topic is the same output as returned from
        *                   <a>DescribeJob</a>. </p>
        *             </li>
        *          </ul>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p>For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring Vault
        *             Notifications in Amazon S3 Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html">Set Vault Notification
        *             Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, SetVaultNotificationsCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, SetVaultNotificationsCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new SetVaultNotificationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetVaultNotificationsCommandInput} for command's `input` shape.
        * @see {@link SetVaultNotificationsCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class SetVaultNotificationsCommand extends $Command<SetVaultNotificationsCommandInput, SetVaultNotificationsCommandOutput, GlacierClientResolvedConfig> {
            readonly input: SetVaultNotificationsCommandInput;
            constructor(input: SetVaultNotificationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetVaultNotificationsCommandInput, SetVaultNotificationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadArchiveCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { ArchiveCreationOutput, UploadArchiveInput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    type UploadArchiveCommandInputType = Omit<UploadArchiveInput, "body"> & {
            /**
                * For *`UploadArchiveInput["body"]`*, see {@link UploadArchiveInput.body}.
                */
            body?: UploadArchiveInput["body"] | string | Uint8Array | Buffer;
    };
    /**
        * This interface extends from `UploadArchiveInput` interface. There are more parameters than `body` defined in {@link UploadArchiveInput}
        */
    export interface UploadArchiveCommandInput extends UploadArchiveCommandInputType {
    }
    export interface UploadArchiveCommandOutput extends ArchiveCreationOutput, __MetadataBearer {
    }
    /**
        * <p>This operation adds an archive to a vault. This is a synchronous operation, and for a
        *          successful upload, your data is durably persisted. Amazon S3 Glacier returns the archive ID in
        *          the <code>x-amz-archive-id</code> header of the response. </p>
        *
        *          <p>You must use the archive ID to access your data in Amazon S3 Glacier. After you upload
        *          an archive, you should save the archive ID returned so that you can retrieve or delete the
        *          archive later. Besides saving the archive ID, you can also index it and give it a friendly
        *          name to allow for better searching. You can also use the optional archive description field
        *          to specify how the archive is referred to in an external index of archives, such as you
        *          might create in Amazon DynamoDB. You can also get the vault inventory to obtain a list of
        *          archive IDs in a vault. For more information, see <a>InitiateJob</a>. </p>
        *
        *          <p>You must provide a SHA256 tree hash of the data you are uploading. For information
        *          about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing Checksums</a>. </p>
        *
        *          <p>You can optionally specify an archive description of up to 1,024 printable ASCII
        *          characters. You can get the archive description when you either retrieve the archive or get
        *          the vault inventory. For more information, see <a>InitiateJob</a>. Amazon
        *          Glacier does not interpret the description in any way. An archive description does not need
        *          to be unique. You cannot use the description to retrieve or sort the archive list. </p>
        *
        *          <p>Archives are immutable. After you upload an archive, you cannot edit the archive or
        *          its description.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading an Archive in Amazon
        *             Glacier</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload Archive</a> in the
        *             <i>Amazon Glacier Developer Guide</i>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, UploadArchiveCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, UploadArchiveCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new UploadArchiveCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UploadArchiveCommandInput} for command's `input` shape.
        * @see {@link UploadArchiveCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class UploadArchiveCommand extends $Command<UploadArchiveCommandInput, UploadArchiveCommandOutput, GlacierClientResolvedConfig> {
            readonly input: UploadArchiveCommandInput;
            constructor(input: UploadArchiveCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UploadArchiveCommandInput, UploadArchiveCommandOutput>;
    }
    export {};
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadMultipartPartCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GlacierClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient";
    import { UploadMultipartPartInput, UploadMultipartPartOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0";
    type UploadMultipartPartCommandInputType = Omit<UploadMultipartPartInput, "body"> & {
            /**
                * For *`UploadMultipartPartInput["body"]`*, see {@link UploadMultipartPartInput.body}.
                */
            body?: UploadMultipartPartInput["body"] | string | Uint8Array | Buffer;
    };
    /**
        * This interface extends from `UploadMultipartPartInput` interface. There are more parameters than `body` defined in {@link UploadMultipartPartInput}
        */
    export interface UploadMultipartPartCommandInput extends UploadMultipartPartCommandInputType {
    }
    export interface UploadMultipartPartCommandOutput extends UploadMultipartPartOutput, __MetadataBearer {
    }
    /**
        * <p>This operation uploads a part of an archive. You can upload archive parts in any
        *          order. You can also upload them in parallel. You can upload up to 10,000 parts for a
        *          multipart upload.</p>
        *
        *          <p>Amazon Glacier rejects your upload part request if any of the following conditions is
        *          true:</p>
        *
        *          <ul>
        *             <li>
        *                <p>
        *                   <b>SHA256 tree hash does not match</b>To ensure that part
        *                data is not corrupted in transmission, you compute a SHA256 tree hash of the part and
        *                include it in your request. Upon receiving the part data, Amazon S3 Glacier also
        *                computes a SHA256 tree hash. If these hash values don't match, the operation fails.
        *                For information about computing a SHA256 tree hash, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
        *                   Checksums</a>.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <b>Part size does not match</b>The size of each part except
        *                the last must match the size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size of the last part must be the
        *                same size as, or smaller than, the specified size.</p>
        *                <note>
        *                   <p>If you upload a part whose size is smaller than the part size you specified
        *                   in your initiate multipart upload request and that part is not the last part, then
        *                   the upload part request will succeed. However, the subsequent Complete Multipart
        *                   Upload request will fail.</p>
        *                </note>
        *             </li>
        *             <li>
        *                <p>
        *                   <b>Range does not align</b>The byte range value in the
        *                request does not align with the part size specified in the corresponding initiate
        *                request. For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to
        *                4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part
        *                ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align
        *                with the part size and the upload will fail. </p>
        *             </li>
        *          </ul>
        *
        *          <p>This operation is idempotent. If you upload the same part multiple times, the data
        *          included in the most recent request overwrites the previously uploaded data.</p>
        *
        *          <p>An AWS account has full permission to perform all operations (actions). However, AWS
        *          Identity and Access Management (IAM) users don't have any permissions by default. You must
        *          grant them explicit permission to perform specific actions. For more information, see
        *             <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access Control Using
        *             AWS Identity and Access Management (IAM)</a>.</p>
        *          <p> For conceptual information and underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading Large Archives in
        *             Parts (Multipart Upload)</a> and <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html">Upload Part </a> in the
        *             <i>Amazon Glacier Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { GlacierClient, UploadMultipartPartCommand } from "@aws-sdk/client-glacier"; // ES Modules import
        * // const { GlacierClient, UploadMultipartPartCommand } = require("@aws-sdk/client-glacier"); // CommonJS import
        * const client = new GlacierClient(config);
        * const command = new UploadMultipartPartCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UploadMultipartPartCommandInput} for command's `input` shape.
        * @see {@link UploadMultipartPartCommandOutput} for command's `response` shape.
        * @see {@link GlacierClientResolvedConfig | config} for GlacierClient's `config` shape.
        *
        */
    export class UploadMultipartPartCommand extends $Command<UploadMultipartPartCommandInput, UploadMultipartPartCommandOutput, GlacierClientResolvedConfig> {
            readonly input: UploadMultipartPartCommandInput;
            constructor(input: UploadMultipartPartCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GlacierClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UploadMultipartPartCommandInput, UploadMultipartPartCommandOutput>;
    }
    export {};
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/GlacierClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, HttpRequest as __HttpRequest, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AbortMultipartUploadCommandInput, AbortMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortMultipartUploadCommand";
    import { AbortVaultLockCommandInput, AbortVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AbortVaultLockCommand";
    import { AddTagsToVaultCommandInput, AddTagsToVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/AddTagsToVaultCommand";
    import { CompleteMultipartUploadCommandInput, CompleteMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteMultipartUploadCommand";
    import { CompleteVaultLockCommandInput, CompleteVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CompleteVaultLockCommand";
    import { CreateVaultCommandInput, CreateVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/CreateVaultCommand";
    import { DeleteArchiveCommandInput, DeleteArchiveCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteArchiveCommand";
    import { DeleteVaultAccessPolicyCommandInput, DeleteVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultAccessPolicyCommand";
    import { DeleteVaultCommandInput, DeleteVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultCommand";
    import { DeleteVaultNotificationsCommandInput, DeleteVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DeleteVaultNotificationsCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeJobCommand";
    import { DescribeVaultCommandInput, DescribeVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/DescribeVaultCommand";
    import { GetDataRetrievalPolicyCommandInput, GetDataRetrievalPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetDataRetrievalPolicyCommand";
    import { GetJobOutputCommandInput, GetJobOutputCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetJobOutputCommand";
    import { GetVaultAccessPolicyCommandInput, GetVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultAccessPolicyCommand";
    import { GetVaultLockCommandInput, GetVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultLockCommand";
    import { GetVaultNotificationsCommandInput, GetVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/GetVaultNotificationsCommand";
    import { InitiateJobCommandInput, InitiateJobCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateJobCommand";
    import { InitiateMultipartUploadCommandInput, InitiateMultipartUploadCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateMultipartUploadCommand";
    import { InitiateVaultLockCommandInput, InitiateVaultLockCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/InitiateVaultLockCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListJobsCommand";
    import { ListMultipartUploadsCommandInput, ListMultipartUploadsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListMultipartUploadsCommand";
    import { ListPartsCommandInput, ListPartsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListPartsCommand";
    import { ListProvisionedCapacityCommandInput, ListProvisionedCapacityCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListProvisionedCapacityCommand";
    import { ListTagsForVaultCommandInput, ListTagsForVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListTagsForVaultCommand";
    import { ListVaultsCommandInput, ListVaultsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/ListVaultsCommand";
    import { PurchaseProvisionedCapacityCommandInput, PurchaseProvisionedCapacityCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/PurchaseProvisionedCapacityCommand";
    import { RemoveTagsFromVaultCommandInput, RemoveTagsFromVaultCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/RemoveTagsFromVaultCommand";
    import { SetDataRetrievalPolicyCommandInput, SetDataRetrievalPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetDataRetrievalPolicyCommand";
    import { SetVaultAccessPolicyCommandInput, SetVaultAccessPolicyCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultAccessPolicyCommand";
    import { SetVaultNotificationsCommandInput, SetVaultNotificationsCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/SetVaultNotificationsCommand";
    import { UploadArchiveCommandInput, UploadArchiveCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadArchiveCommand";
    import { UploadMultipartPartCommandInput, UploadMultipartPartCommandOutput } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/commands/UploadMultipartPartCommand";
    export type ServiceInputTypes = AbortMultipartUploadCommandInput | AbortVaultLockCommandInput | AddTagsToVaultCommandInput | CompleteMultipartUploadCommandInput | CompleteVaultLockCommandInput | CreateVaultCommandInput | DeleteArchiveCommandInput | DeleteVaultAccessPolicyCommandInput | DeleteVaultCommandInput | DeleteVaultNotificationsCommandInput | DescribeJobCommandInput | DescribeVaultCommandInput | GetDataRetrievalPolicyCommandInput | GetJobOutputCommandInput | GetVaultAccessPolicyCommandInput | GetVaultLockCommandInput | GetVaultNotificationsCommandInput | InitiateJobCommandInput | InitiateMultipartUploadCommandInput | InitiateVaultLockCommandInput | ListJobsCommandInput | ListMultipartUploadsCommandInput | ListPartsCommandInput | ListProvisionedCapacityCommandInput | ListTagsForVaultCommandInput | ListVaultsCommandInput | PurchaseProvisionedCapacityCommandInput | RemoveTagsFromVaultCommandInput | SetDataRetrievalPolicyCommandInput | SetVaultAccessPolicyCommandInput | SetVaultNotificationsCommandInput | UploadArchiveCommandInput | UploadMultipartPartCommandInput;
    export type ServiceOutputTypes = AbortMultipartUploadCommandOutput | AbortVaultLockCommandOutput | AddTagsToVaultCommandOutput | CompleteMultipartUploadCommandOutput | CompleteVaultLockCommandOutput | CreateVaultCommandOutput | DeleteArchiveCommandOutput | DeleteVaultAccessPolicyCommandOutput | DeleteVaultCommandOutput | DeleteVaultNotificationsCommandOutput | DescribeJobCommandOutput | DescribeVaultCommandOutput | GetDataRetrievalPolicyCommandOutput | GetJobOutputCommandOutput | GetVaultAccessPolicyCommandOutput | GetVaultLockCommandOutput | GetVaultNotificationsCommandOutput | InitiateJobCommandOutput | InitiateMultipartUploadCommandOutput | InitiateVaultLockCommandOutput | ListJobsCommandOutput | ListMultipartUploadsCommandOutput | ListPartsCommandOutput | ListProvisionedCapacityCommandOutput | ListTagsForVaultCommandOutput | ListVaultsCommandOutput | PurchaseProvisionedCapacityCommandOutput | RemoveTagsFromVaultCommandOutput | SetDataRetrievalPolicyCommandOutput | SetVaultAccessPolicyCommandOutput | SetVaultNotificationsCommandOutput | UploadArchiveCommandOutput | UploadMultipartPartCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * Function that returns body checksums.
                * @internal
                */
            bodyChecksumGenerator?: (request: __HttpRequest, options: {
                    sha256: __HashConstructor;
                    utf8Decoder: __Decoder;
            }) => Promise<[string, string]>;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type GlacierClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of GlacierClient class constructor that set the region, credentials and other options.
        */
    export interface GlacierClientConfig extends GlacierClientConfigType {
    }
    type GlacierClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of GlacierClient class. This is resolved and normalized from the {@link GlacierClientConfig | constructor configuration interface}.
        */
    export interface GlacierClientResolvedConfig extends GlacierClientResolvedConfigType {
    }
    /**
        * <p> Amazon S3 Glacier (Glacier) is a storage solution for "cold data."</p>
        *
        *          <p>Glacier is an extremely low-cost storage service that provides secure,
        *          durable, and easy-to-use storage for data backup and archival. With Glacier,
        *          customers can store their data cost effectively for months, years, or decades.
        *          Glacier also enables customers to offload the administrative burdens of operating and
        *          scaling storage to AWS, so they don't have to worry about capacity planning, hardware
        *          provisioning, data replication, hardware failure and recovery, or time-consuming hardware
        *          migrations.</p>
        *
        *          <p>Glacier is a great storage choice when low storage cost is paramount and your
        *          data is rarely retrieved. If your
        *          application requires fast or frequent access to your data, consider using Amazon S3. For
        *          more information, see <a href="http://aws.amazon.com/s3/">Amazon Simple Storage Service
        *             (Amazon S3)</a>.</p>
        *
        *          <p>You can store any kind of data in any format. There is no maximum limit on the total
        *          amount of data you can store in Glacier.</p>
        *
        *          <p>If you are a first-time user of Glacier, we recommend that you begin by
        *          reading the following sections in the <i>Amazon S3 Glacier Developer
        *          Guide</i>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html">What is
        *                   Amazon S3 Glacier</a> - This section of the Developer Guide describes the
        *                underlying data model, the operations it supports, and the AWS SDKs that you can use
        *                to interact with the service.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html">Getting Started
        *                   with Amazon S3 Glacier</a> - The Getting Started section walks you through the
        *                process of creating a vault, uploading archives, creating jobs to download archives,
        *                retrieving the job output, and deleting archives.</p>
        *             </li>
        *          </ul>
        */
    export class GlacierClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, GlacierClientResolvedConfig> {
            /**
                * The resolved configuration of GlacierClient class. This is resolved and normalized from the {@link GlacierClientConfig | constructor configuration interface}.
                */
            readonly config: GlacierClientResolvedConfig;
            constructor(configuration: GlacierClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { Readable } from "stream";
    import { GlacierServiceException as __BaseException } from "@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/GlacierServiceException";
    /**
        * <p>Provides options to abort a multipart upload identified by the upload ID.</p>
        *
        *          <p>For information about the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort Multipart
        *             Upload</a>. For conceptual information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in
        *             Amazon S3 Glacier</a>.</p>
        */
    export interface AbortMultipartUploadInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The upload ID of the multipart upload to delete.</p>
                */
            uploadId: string | undefined;
    }
    export namespace AbortMultipartUploadInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AbortMultipartUploadInput) => any;
    }
    /**
        * <p>Returned if a parameter of the request is incorrectly specified.</p>
        */
    export class InvalidParameterValueException extends __BaseException {
            readonly name: "InvalidParameterValueException";
            readonly $fault: "client";
            /**
                * <p>Client</p>
                */
            type?: string;
            /**
                * <p>400 Bad Request</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>);
    }
    /**
        * <p>Returned if a required header or parameter is missing from the request.</p>
        */
    export class MissingParameterValueException extends __BaseException {
            readonly name: "MissingParameterValueException";
            readonly $fault: "client";
            /**
                * <p>Client.</p>
                */
            type?: string;
            /**
                * <p>400 Bad Request</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MissingParameterValueException, __BaseException>);
    }
    /**
        * <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't
        *          exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * <p>Client</p>
                */
            type?: string;
            /**
                * <p>404 Not Found</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>Returned if the service cannot complete the request.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            /**
                * <p>Server</p>
                */
            type?: string;
            /**
                * <p>500 Internal Server Error</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>The input values for <code>AbortVaultLock</code>.</p>
        */
    export interface AbortVaultLockInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace AbortVaultLockInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AbortVaultLockInput) => any;
    }
    export enum Type {
            AmazonCustomerByEmail = "AmazonCustomerByEmail",
            CanonicalUser = "CanonicalUser",
            Group = "Group"
    }
    /**
        * <p>Contains information about the grantee.</p>
        */
    export interface Grantee {
            /**
                * <p>Type of grantee</p>
                */
            Type: Type | string | undefined;
            /**
                * <p>Screen name of the grantee.</p>
                */
            DisplayName?: string;
            /**
                * <p>URI of the grantee group.</p>
                */
            URI?: string;
            /**
                * <p>The canonical user ID of the grantee.</p>
                */
            ID?: string;
            /**
                * <p>Email address of the grantee.</p>
                */
            EmailAddress?: string;
    }
    export namespace Grantee {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Grantee) => any;
    }
    export enum Permission {
            FULL_CONTROL = "FULL_CONTROL",
            READ = "READ",
            READ_ACP = "READ_ACP",
            WRITE = "WRITE",
            WRITE_ACP = "WRITE_ACP"
    }
    /**
        * <p>Contains information about a grant.</p>
        */
    export interface Grant {
            /**
                * <p>The grantee.</p>
                */
            Grantee?: Grantee;
            /**
                * <p>Specifies the permission given to the grantee. </p>
                */
            Permission?: Permission | string;
    }
    export namespace Grant {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Grant) => any;
    }
    export enum ActionCode {
            ArchiveRetrieval = "ArchiveRetrieval",
            InventoryRetrieval = "InventoryRetrieval",
            Select = "Select"
    }
    /**
        * <p>The input values for <code>AddTagsToVault</code>.</p>
        */
    export interface AddTagsToVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The tags to add to the vault. Each tag is composed of a key and a value. The value
                *          can be an empty string.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace AddTagsToVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddTagsToVaultInput) => any;
    }
    /**
        * <p>Returned if the request results in a vault or account limit being exceeded.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * <p>Client</p>
                */
            type?: string;
            /**
                * <p>400 Bad Request</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        *          <p>For information about the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload Archive</a>. For
        *          conceptual information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in
        *             Amazon S3 Glacier</a>.</p>
        */
    export interface ArchiveCreationOutput {
            /**
                * <p>The relative URI path of the newly added archive resource.</p>
                */
            location?: string;
            /**
                * <p>The checksum of the archive computed by Amazon S3 Glacier.</p>
                */
            checksum?: string;
            /**
                * <p>The ID of the archive. This value is also included as part of the location.</p>
                */
            archiveId?: string;
    }
    export namespace ArchiveCreationOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ArchiveCreationOutput) => any;
    }
    export enum CannedACL {
            AuthenticatedRead = "authenticated-read",
            AwsExecRead = "aws-exec-read",
            BucketOwnerFullControl = "bucket-owner-full-control",
            BucketOwnerRead = "bucket-owner-read",
            Private = "private",
            PublicRead = "public-read",
            PublicReadWrite = "public-read-write"
    }
    /**
        * <p>Provides options to complete a multipart upload operation. This informs Amazon
        *          Glacier that all the archive parts have been uploaded and Amazon S3 Glacier (Glacier) can now assemble
        *          the archive from the uploaded parts. After assembling and saving the archive to the vault,
        *          Glacier returns the URI path of the newly created archive resource.</p>
        */
    export interface CompleteMultipartUploadInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The upload ID of the multipart upload.</p>
                */
            uploadId: string | undefined;
            /**
                * <p>The total size, in bytes, of the entire archive. This value should be the sum of all
                *          the sizes of the individual parts that you uploaded.</p>
                */
            archiveSize?: string;
            /**
                * <p>The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash
                *          of the individual parts. If the value you specify in the request does not match the SHA256
                *          tree hash of the final assembled archive as computed by Amazon S3 Glacier (Glacier),
                *          Glacier returns an error and the request fails.</p>
                */
            checksum?: string;
    }
    export namespace CompleteMultipartUploadInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CompleteMultipartUploadInput) => any;
    }
    /**
        * <p>The input values for <code>CompleteVaultLock</code>.</p>
        */
    export interface CompleteVaultLockInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The <code>lockId</code> value is the lock ID obtained from a <a>InitiateVaultLock</a> request.</p>
                */
            lockId: string | undefined;
    }
    export namespace CompleteVaultLockInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CompleteVaultLockInput) => any;
    }
    /**
        * <p>Provides options to create a vault.</p>
        */
    export interface CreateVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace CreateVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVaultInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface CreateVaultOutput {
            /**
                * <p>The URI of the vault that was created.</p>
                */
            location?: string;
    }
    export namespace CreateVaultOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVaultOutput) => any;
    }
    export enum FileHeaderInfo {
            Ignore = "IGNORE",
            None = "NONE",
            Use = "USE"
    }
    /**
        * <p>Contains information about the comma-separated value (CSV) file to select from.</p>
        */
    export interface CSVInput {
            /**
                * <p>Describes the first line of input. Valid values are <code>None</code>,
                *                 <code>Ignore</code>, and <code>Use</code>.</p>
                */
            FileHeaderInfo?: FileHeaderInfo | string;
            /**
                * <p>A single character used to indicate that a row should be ignored when the character is
                *             present at the start of that row.</p>
                */
            Comments?: string;
            /**
                * <p>A single character used for escaping the quotation-mark character inside an already
                *             escaped value.</p>
                */
            QuoteEscapeCharacter?: string;
            /**
                * <p>A value used to separate individual records from each other.</p>
                */
            RecordDelimiter?: string;
            /**
                * <p>A value used to separate individual fields from each other within a record.</p>
                */
            FieldDelimiter?: string;
            /**
                * <p>A value used as an escape character where the field delimiter is part of the
                *             value.</p>
                */
            QuoteCharacter?: string;
    }
    export namespace CSVInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CSVInput) => any;
    }
    export enum QuoteFields {
            Always = "ALWAYS",
            AsNeeded = "ASNEEDED"
    }
    /**
        * <p>Contains information about the comma-separated value (CSV) file that the job results
        *             are stored in.</p>
        */
    export interface CSVOutput {
            /**
                * <p>A value that indicates whether all output fields should be contained within quotation
                *             marks.</p>
                */
            QuoteFields?: QuoteFields | string;
            /**
                * <p>A single character used for escaping the quotation-mark character inside an already
                *             escaped value.</p>
                */
            QuoteEscapeCharacter?: string;
            /**
                * <p>A value used to separate individual records from each other.</p>
                */
            RecordDelimiter?: string;
            /**
                * <p>A value used to separate individual fields from each other within a record.</p>
                */
            FieldDelimiter?: string;
            /**
                * <p>A value used as an escape character where the field delimiter is part of the
                *             value.</p>
                */
            QuoteCharacter?: string;
    }
    export namespace CSVOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CSVOutput) => any;
    }
    /**
        * <p>Data retrieval policy rule.</p>
        */
    export interface DataRetrievalRule {
            /**
                * <p>The type of data retrieval policy to set.</p>
                *          <p>Valid values: BytesPerHour|FreeTier|None</p>
                */
            Strategy?: string;
            /**
                * <p>The maximum number of bytes that can be retrieved in an hour.</p>
                *          <p>This field is required only if the value of the Strategy field is
                *             <code>BytesPerHour</code>. Your PUT operation will be rejected if the Strategy field is
                *          not set to <code>BytesPerHour</code> and you set this field.</p>
                */
            BytesPerHour?: number;
    }
    export namespace DataRetrievalRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DataRetrievalRule) => any;
    }
    /**
        * <p>Data retrieval policy.</p>
        */
    export interface DataRetrievalPolicy {
            /**
                * <p>The policy rule. Although this is a list type, currently there must be only one rule,
                *          which contains a Strategy field and optionally a BytesPerHour field.</p>
                */
            Rules?: DataRetrievalRule[];
    }
    export namespace DataRetrievalPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DataRetrievalPolicy) => any;
    }
    /**
        * <p>Provides options for deleting an archive from an Amazon S3 Glacier vault.</p>
        */
    export interface DeleteArchiveInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The ID of the archive to delete.</p>
                */
            archiveId: string | undefined;
    }
    export namespace DeleteArchiveInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteArchiveInput) => any;
    }
    /**
        * <p>Provides options for deleting a vault from Amazon S3 Glacier.</p>
        */
    export interface DeleteVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace DeleteVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVaultInput) => any;
    }
    /**
        * <p>DeleteVaultAccessPolicy input.</p>
        */
    export interface DeleteVaultAccessPolicyInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace DeleteVaultAccessPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVaultAccessPolicyInput) => any;
    }
    /**
        * <p>Provides options for deleting a vault notification configuration from an Amazon
        *          Glacier vault.</p>
        */
    export interface DeleteVaultNotificationsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace DeleteVaultNotificationsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVaultNotificationsInput) => any;
    }
    /**
        * <p>Provides options for retrieving a job description.</p>
        */
    export interface DescribeJobInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The ID of the job to describe.</p>
                */
            jobId: string | undefined;
    }
    export namespace DescribeJobInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobInput) => any;
    }
    /**
        * <p>Describes the options for a range inventory retrieval job.</p>
        */
    export interface InventoryRetrievalJobDescription {
            /**
                * <p>The output format for the vault inventory list, which is set by the <b>InitiateJob</b> request when initiating a job to retrieve a vault
                *             inventory. Valid values are <code>CSV</code> and <code>JSON</code>.</p>
                */
            Format?: string;
            /**
                * <p>The start of the date range in Universal Coordinated Time (UTC) for vault inventory
                *             retrieval that includes archives created on or after this date. This value should be a
                *             string in the ISO 8601 date format, for example
                *             <code>2013-03-20T17:03:43Z</code>.</p>
                */
            StartDate?: string;
            /**
                * <p>The end of the date range in UTC for vault inventory retrieval that includes
                *             archives created before this date. This value should be a string in the ISO 8601 date
                *             format, for example <code>2013-03-20T17:03:43Z</code>.</p>
                */
            EndDate?: string;
            /**
                * <p>The maximum number of inventory items returned per vault inventory retrieval
                *             request. This limit is set when initiating the job with the a <b>InitiateJob</b> request. </p>
                */
            Limit?: string;
            /**
                * <p>An opaque string that represents where to continue pagination of the vault
                *             inventory retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain additional inventory items. If there are
                *             no more inventory items, this value is <code>null</code>. For more information, see
                *                 <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering"> Range Inventory Retrieval</a>.</p>
                */
            Marker?: string;
    }
    export namespace InventoryRetrievalJobDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InventoryRetrievalJobDescription) => any;
    }
    export enum EncryptionType {
            KMS = "aws:kms",
            S3 = "AES256"
    }
    /**
        * <p>Contains information about the encryption used to store the job results in Amazon S3. </p>
        */
    export interface Encryption {
            /**
                * <p>The server-side encryption algorithm used when storing job results in Amazon S3, for
                *             example <code>AES256</code> or <code>aws:kms</code>.</p>
                */
            EncryptionType?: EncryptionType | string;
            /**
                * <p>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an
                *             object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or
                *             Signature Version 4. </p>
                */
            KMSKeyId?: string;
            /**
                * <p>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to
                *             specify the encryption context for the job results.</p>
                */
            KMSContext?: string;
    }
    export namespace Encryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Encryption) => any;
    }
    export enum StorageClass {
            ReducedRedundancy = "REDUCED_REDUNDANCY",
            Standard = "STANDARD",
            StandardInfrequentAccess = "STANDARD_IA"
    }
    /**
        * <p>Contains information about the location in Amazon S3 where the select job results are stored.</p>
        */
    export interface S3Location {
            /**
                * <p>The name of the Amazon S3 bucket where the job results are stored.</p>
                */
            BucketName?: string;
            /**
                * <p>The prefix that is prepended to the results for this request.</p>
                */
            Prefix?: string;
            /**
                * <p>Contains information about the encryption used to store the job results in Amazon S3.</p>
                */
            Encryption?: Encryption;
            /**
                * <p>The canned access control list (ACL) to apply to the job results.</p>
                */
            CannedACL?: CannedACL | string;
            /**
                * <p>A list of grants that control access to the staged results.</p>
                */
            AccessControlList?: Grant[];
            /**
                * <p>The tag-set that is applied to the job results.</p>
                */
            Tagging?: Record<string, string>;
            /**
                * <p>A map of metadata to store with the job results in Amazon S3.</p>
                */
            UserMetadata?: Record<string, string>;
            /**
                * <p>The storage class used to store the job results.</p>
                */
            StorageClass?: StorageClass | string;
    }
    export namespace S3Location {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Location) => any;
    }
    /**
        * <p>Contains information about the location where the select job results are stored.</p>
        */
    export interface OutputLocation {
            /**
                * <p>Describes an S3 location that will receive the results of the job request.</p>
                */
            S3?: S3Location;
    }
    export namespace OutputLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OutputLocation) => any;
    }
    export enum ExpressionType {
            SQL = "SQL"
    }
    /**
        * <p>Describes how the archive is serialized.</p>
        */
    export interface InputSerialization {
            /**
                * <p>Describes the serialization of a CSV-encoded object.</p>
                */
            csv?: CSVInput;
    }
    export namespace InputSerialization {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InputSerialization) => any;
    }
    /**
        * <p>Describes how the select output is serialized.</p>
        */
    export interface OutputSerialization {
            /**
                * <p>Describes the serialization of CSV-encoded query results.</p>
                */
            csv?: CSVOutput;
    }
    export namespace OutputSerialization {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OutputSerialization) => any;
    }
    /**
        * <p>Contains information about the parameters used for a select.</p>
        */
    export interface SelectParameters {
            /**
                * <p>Describes the serialization format of the object.</p>
                */
            InputSerialization?: InputSerialization;
            /**
                * <p>The type of the provided expression, for example <code>SQL</code>.</p>
                */
            ExpressionType?: ExpressionType | string;
            /**
                * <p>The expression that is used to select the object.</p>
                */
            Expression?: string;
            /**
                * <p>Describes how the results of the select job are serialized.</p>
                */
            OutputSerialization?: OutputSerialization;
    }
    export namespace SelectParameters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SelectParameters) => any;
    }
    export enum StatusCode {
            Failed = "Failed",
            InProgress = "InProgress",
            Succeeded = "Succeeded"
    }
    /**
        * <p>Contains the description of an Amazon S3 Glacier job.</p>
        */
    export interface GlacierJobDescription {
            /**
                * <p>An opaque string that identifies an Amazon S3 Glacier job.</p>
                */
            JobId?: string;
            /**
                * <p>The job description provided when initiating the job.</p>
                */
            JobDescription?: string;
            /**
                * <p>The job type. This value is either <code>ArchiveRetrieval</code>,
                *                 <code>InventoryRetrieval</code>, or
                *             <code>Select</code>. </p>
                */
            Action?: ActionCode | string;
            /**
                * <p>The archive ID requested for a select job or archive retrieval. Otherwise, this
                *             field is null.</p>
                */
            ArchiveId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the vault from which an archive retrieval was
                *             requested.</p>
                */
            VaultARN?: string;
            /**
                * <p>The UTC date when the job was created. This value is a string representation of ISO
                *             8601 date format, for example <code>"2012-03-20T17:03:43.221Z"</code>.</p>
                */
            CreationDate?: string;
            /**
                * <p>The job status. When a job is completed, you get the job's output using Get Job
                *             Output (GET output).</p>
                */
            Completed?: boolean;
            /**
                * <p>The status code can be <code>InProgress</code>, <code>Succeeded</code>, or
                *                 <code>Failed</code>, and indicates the status of the job.</p>
                */
            StatusCode?: StatusCode | string;
            /**
                * <p>A friendly message that describes the job status.</p>
                */
            StatusMessage?: string;
            /**
                * <p>For an archive retrieval job, this value is the size in bytes of the archive being
                *             requested for download. For an inventory retrieval or select job, this value is
                *             null.</p>
                */
            ArchiveSizeInBytes?: number;
            /**
                * <p>For an inventory retrieval job, this value is the size in bytes of the inventory
                *             requested for download. For an archive retrieval or select job, this value is
                *             null.</p>
                */
            InventorySizeInBytes?: number;
            /**
                * <p>An Amazon SNS topic that receives notification.</p>
                */
            SNSTopic?: string;
            /**
                * <p>The UTC time that the job request completed. While the job is in progress, the
                *             value is null.</p>
                */
            CompletionDate?: string;
            /**
                * <p>For an archive retrieval job, this value is the checksum of the archive. Otherwise,
                *             this value is null.</p>
                *         <p>The SHA256 tree hash value for the requested range of an archive. If the <b>InitiateJob</b> request for an archive specified a tree-hash
                *             aligned range, then this field returns a value.</p>
                *         <p>If the whole archive is retrieved, this value is the same as the
                *             ArchiveSHA256TreeHash value.</p>
                *         <p>This field is null for the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Archive retrieval jobs that specify a range that is not tree-hash
                *                     aligned</p>
                *             </li>
                *          </ul>
                *         <ul>
                *             <li>
                *                 <p>Archival jobs that specify a range that is equal to the whole archive, when
                *                     the job status is <code>InProgress</code>
                *                </p>
                *             </li>
                *          </ul>
                *         <ul>
                *             <li>
                *                 <p>Inventory jobs</p>
                *             </li>
                *             <li>
                *                 <p>Select jobs</p>
                *             </li>
                *          </ul>
                */
            SHA256TreeHash?: string;
            /**
                * <p>The SHA256 tree hash of the entire archive for an archive retrieval. For inventory
                *             retrieval or select jobs, this field is null.</p>
                */
            ArchiveSHA256TreeHash?: string;
            /**
                * <p>The retrieved byte range for archive retrieval jobs in the form
                *                 <i>StartByteValue</i>-<i>EndByteValue</i>. If no range
                *             was specified in the archive retrieval, then the whole archive is retrieved. In this
                *             case, <i>StartByteValue</i> equals 0 and <i>EndByteValue</i>
                *             equals the size of the archive minus 1. For inventory retrieval or select jobs, this
                *             field is null. </p>
                */
            RetrievalByteRange?: string;
            /**
                * <p>The tier to use for a select or an archive retrieval. Valid values are
                *                 <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.
                *                 <code>Standard</code> is the default.</p>
                */
            Tier?: string;
            /**
                * <p>Parameters used for range inventory retrieval.</p>
                */
            InventoryRetrievalParameters?: InventoryRetrievalJobDescription;
            /**
                * <p>Contains the job output location.</p>
                */
            JobOutputPath?: string;
            /**
                * <p>Contains the parameters used for a select.</p>
                */
            SelectParameters?: SelectParameters;
            /**
                * <p>Contains the location where the data from the select job is stored.</p>
                */
            OutputLocation?: OutputLocation;
    }
    export namespace GlacierJobDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GlacierJobDescription) => any;
    }
    /**
        * <p>Provides options for retrieving metadata for a specific vault in Amazon
        *          Glacier.</p>
        */
    export interface DescribeVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace DescribeVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVaultInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface DescribeVaultOutput {
            /**
                * <p>The Amazon Resource Name (ARN) of the vault.</p>
                */
            VaultARN?: string;
            /**
                * <p>The name of the vault.</p>
                */
            VaultName?: string;
            /**
                * <p>The Universal Coordinated Time (UTC) date when the vault was created. This value
                *          should be a string in the ISO 8601 date format, for example
                *             <code>2012-03-20T17:03:43.221Z</code>.</p>
                */
            CreationDate?: string;
            /**
                * <p>The Universal Coordinated Time (UTC) date when Amazon S3 Glacier completed the last
                *          vault inventory.  This value should be a string in the ISO 8601 date format, for example
                *             <code>2012-03-20T17:03:43.221Z</code>.</p>
                */
            LastInventoryDate?: string;
            /**
                * <p>The number of archives in the vault as of the last inventory date. This field will
                *          return <code>null</code> if an inventory has not yet run on the vault, for example if you
                *          just created the vault.</p>
                */
            NumberOfArchives?: number;
            /**
                * <p>Total size, in bytes, of the archives in the vault as of the last inventory date.
                *          This field will return null if an inventory has not yet run on the vault, for example if
                *          you just created the vault.</p>
                */
            SizeInBytes?: number;
    }
    export namespace DescribeVaultOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVaultOutput) => any;
    }
    /**
        * <p>Input for GetDataRetrievalPolicy.</p>
        */
    export interface GetDataRetrievalPolicyInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID. </p>
                */
            accountId: string | undefined;
    }
    export namespace GetDataRetrievalPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDataRetrievalPolicyInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to the <code>GetDataRetrievalPolicy</code>
        *          request.</p>
        */
    export interface GetDataRetrievalPolicyOutput {
            /**
                * <p>Contains the returned data retrieval policy in JSON format.</p>
                */
            Policy?: DataRetrievalPolicy;
    }
    export namespace GetDataRetrievalPolicyOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDataRetrievalPolicyOutput) => any;
    }
    /**
        * <p>Provides options for downloading output of an Amazon S3 Glacier job.</p>
        */
    export interface GetJobOutputInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The job ID whose data is downloaded.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The range of bytes to retrieve from the output. For example, if you want to download
                *          the first 1,048,576 bytes, specify the range as <code>bytes=0-1048575</code>. By default, this operation
                *          downloads the entire output.</p>
                *
                *          <p>If the job output is large, then you can use a range to
                *          retrieve a portion of the output. This allows you to download the entire output in smaller
                *          chunks of bytes. For example, suppose you have 1 GB of job output you want to download and
                *          you decide to download 128 MB chunks of data at a time, which is a total of eight Get Job
                *          Output requests. You use the following process to download the job output:</p>
                *
                *          <ol>
                *             <li>
                *                <p>Download a 128 MB chunk of output by specifying the appropriate byte range.
                *                   Verify that all 128 MB of data was received.</p>
                *             </li>
                *             <li>
                *                <p>Along with the data, the response includes a SHA256 tree hash of the payload.
                *                   You compute the checksum of the payload on the client and compare it with the
                *                   checksum you received in the response to ensure you received all the expected
                *                   data.</p>
                *             </li>
                *             <li>
                *                <p>Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time
                *                   specifying the appropriate byte range.</p>
                *             </li>
                *             <li>
                *                <p>After downloading all the parts of the job output, you have a list of eight
                *                   checksum values. Compute the tree hash of these values to find the checksum of the
                *                   entire output. Using the <a>DescribeJob</a> API, obtain job information of
                *                   the job that provided you the output. The response includes the checksum of the
                *                   entire archive stored in Amazon S3 Glacier. You compare this value with the checksum you
                *                   computed to ensure you have downloaded the entire archive content with no
                *                   errors.</p>
                *                <p></p>
                *             </li>
                *          </ol>
                */
            range?: string;
    }
    export namespace GetJobOutputInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobOutputInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface GetJobOutputOutput {
            /**
                * <p>The job data, either archive data or inventory data.</p>
                */
            body?: Readable | ReadableStream | Blob;
            /**
                * <p>The checksum of the data in the response. This header is returned only when
                *          retrieving the output for an archive retrieval job. Furthermore, this header appears only
                *          under the following conditions:</p>
                *          <ul>
                *             <li>
                *                 <p>You get the entire range of the archive.</p>
                *             </li>
                *             <li>
                *                <p>You request a range to return of the archive that starts and ends on a multiple
                *                of 1 MB. For example, if you have an 3.1 MB archive and you specify a range to return
                *                that starts at 1 MB and ends at 2 MB, then the x-amz-sha256-tree-hash is returned as
                *                a response header.</p>
                *             </li>
                *             <li>
                *                <p>You request a range of the archive to return that starts on a multiple of 1 MB
                *                and goes to the end of the archive. For example, if you have a 3.1 MB archive and you
                *                specify a range that starts at 2 MB and ends at 3.1 MB (the end of the archive), then
                *                the x-amz-sha256-tree-hash is returned as a response header.</p>
                *             </li>
                *          </ul>
                */
            checksum?: string;
            /**
                * <p>The HTTP response code for a job output request. The value depends on whether a range
                *          was specified in the request.</p>
                */
            status?: number;
            /**
                * <p>The range of bytes returned by Amazon S3 Glacier. If only partial output is downloaded,
                *          the response provides the range of bytes Amazon S3 Glacier returned. For example, bytes
                *          0-1048575/8388608 returns the first 1 MB from 8 MB.</p>
                */
            contentRange?: string;
            /**
                * <p>Indicates the range units accepted. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">RFC2616</a>. </p>
                */
            acceptRanges?: string;
            /**
                * <p>The Content-Type depends on whether the job output is an archive or a vault
                *          inventory. For archive data, the Content-Type is application/octet-stream. For vault
                *          inventory, if you requested CSV format when you initiated the job, the Content-Type is
                *          text/csv. Otherwise, by default, vault inventory is returned as JSON, and the Content-Type
                *          is application/json.</p>
                */
            contentType?: string;
            /**
                * <p>The description of an archive.</p>
                */
            archiveDescription?: string;
    }
    export namespace GetJobOutputOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobOutputOutput) => any;
    }
    /**
        * <p>Input for GetVaultAccessPolicy.</p>
        */
    export interface GetVaultAccessPolicyInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace GetVaultAccessPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultAccessPolicyInput) => any;
    }
    /**
        * <p>Contains the vault access policy.</p>
        */
    export interface VaultAccessPolicy {
            /**
                * <p>The vault access policy.</p>
                */
            Policy?: string;
    }
    export namespace VaultAccessPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VaultAccessPolicy) => any;
    }
    /**
        * <p>Output for GetVaultAccessPolicy.</p>
        */
    export interface GetVaultAccessPolicyOutput {
            /**
                * <p>Contains the returned vault access policy as a JSON string.</p>
                */
            policy?: VaultAccessPolicy;
    }
    export namespace GetVaultAccessPolicyOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultAccessPolicyOutput) => any;
    }
    /**
        * <p>The input values for <code>GetVaultLock</code>.</p>
        */
    export interface GetVaultLockInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace GetVaultLockInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultLockInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface GetVaultLockOutput {
            /**
                * <p>The vault lock policy as a JSON string, which uses "\" as an escape
                *          character.</p>
                */
            Policy?: string;
            /**
                * <p>The state of the vault lock. <code>InProgress</code> or
                *          <code>Locked</code>.</p>
                */
            State?: string;
            /**
                * <p>The UTC date and time at which the lock ID expires. This value can be
                *             <code>null</code> if the vault lock is in a <code>Locked</code> state.</p>
                */
            ExpirationDate?: string;
            /**
                * <p>The UTC date and time at which the vault lock was put into the
                *             <code>InProgress</code> state.</p>
                */
            CreationDate?: string;
    }
    export namespace GetVaultLockOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultLockOutput) => any;
    }
    /**
        * <p>Provides options for retrieving the notification configuration set on an Amazon
        *          Glacier vault.</p>
        */
    export interface GetVaultNotificationsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace GetVaultNotificationsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultNotificationsInput) => any;
    }
    /**
        * <p>Represents a vault's notification configuration.</p>
        */
    export interface VaultNotificationConfig {
            /**
                * <p>The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name
                *          (ARN).</p>
                */
            SNSTopic?: string;
            /**
                * <p>A list of one or more events for which Amazon S3 Glacier will send a notification to the
                *          specified Amazon SNS topic.</p>
                */
            Events?: string[];
    }
    export namespace VaultNotificationConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VaultNotificationConfig) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface GetVaultNotificationsOutput {
            /**
                * <p>Returns the notification configuration set on the vault.</p>
                */
            vaultNotificationConfig?: VaultNotificationConfig;
    }
    export namespace GetVaultNotificationsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVaultNotificationsOutput) => any;
    }
    /**
        * <p>Provides options for specifying a range inventory retrieval job.</p>
        */
    export interface InventoryRetrievalJobInput {
            /**
                * <p>The start of the date range in UTC for vault inventory retrieval that includes
                *          archives created on or after this date. This value should be a string in the ISO 8601 date
                *          format, for example <code>2013-03-20T17:03:43Z</code>.</p>
                */
            StartDate?: string;
            /**
                * <p>The end of the date range in UTC for vault inventory retrieval that includes archives
                *          created before this date. This value should be a string in the ISO 8601 date format, for
                *          example <code>2013-03-20T17:03:43Z</code>.</p>
                */
            EndDate?: string;
            /**
                * <p>Specifies the maximum number of inventory items returned per vault inventory
                *          retrieval request. Valid values are greater than or equal to 1.</p>
                */
            Limit?: string;
            /**
                * <p>An opaque string that represents where to continue pagination of the vault inventory
                *          retrieval results. You use the marker in a new <b>InitiateJob</b>
                *          request to obtain additional inventory items. If there are no more inventory items, this
                *          value is <code>null</code>.</p>
                */
            Marker?: string;
    }
    export namespace InventoryRetrievalJobInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InventoryRetrievalJobInput) => any;
    }
    /**
        * <p>Provides options for defining a job.</p>
        */
    export interface JobParameters {
            /**
                * <p>When initiating a job to retrieve a vault inventory, you can optionally add this
                *          parameter to your request to specify the output format. If you are initiating an inventory
                *          job and do not specify a Format field, JSON is the default format. Valid values are "CSV"
                *          and "JSON".</p>
                */
            Format?: string;
            /**
                * <p>The job type. You can initiate a job to perform a select query on an archive,
                *          retrieve an archive, or get an inventory of a vault.
                *          Valid values are "select", "archive-retrieval" and "inventory-retrieval".</p>
                */
            Type?: string;
            /**
                * <p>The ID of the archive that you want to retrieve. This field is required only if
                *             <code>Type</code> is set to <code>select</code> or <code>archive-retrieval</code>code>.
                *          An error occurs if you specify this
                *          request parameter for an inventory retrieval job request. </p>
                */
            ArchiveId?: string;
            /**
                * <p>The optional description for the job. The description must be less than or equal to
                *          1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically,
                *          ASCII values 32-126 decimal or 0x20-0x7E hexadecimal.</p>
                */
            Description?: string;
            /**
                * <p>The Amazon SNS topic ARN to which Amazon S3 Glacier sends a notification when the job is
                *          completed and the output is ready for you to download. The specified topic publishes the
                *          notification to its subscribers. The SNS topic must exist.</p>
                */
            SNSTopic?: string;
            /**
                * <p>The byte range to retrieve for an archive retrieval. in the form
                *             "<i>StartByteValue</i>-<i>EndByteValue</i>" If not
                *          specified, the whole archive is retrieved. If specified, the byte range must be megabyte
                *          (1024*1024) aligned which means that <i>StartByteValue</i> must be divisible
                *          by 1 MB and <i>EndByteValue</i> plus 1 must be divisible by 1 MB or be the
                *          end of the archive specified as the archive byte size value minus 1. If RetrievalByteRange
                *          is not megabyte aligned, this operation returns a 400 response. </p>
                *          <p>An error occurs if you specify this field for an inventory retrieval job
                *          request.</p>
                */
            RetrievalByteRange?: string;
            /**
                * <p>The tier to use for a select or an archive retrieval job. Valid values are
                *             <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.
                *             <code>Standard</code> is the default.</p>
                */
            Tier?: string;
            /**
                * <p>Input parameters used for range inventory retrieval.</p>
                */
            InventoryRetrievalParameters?: InventoryRetrievalJobInput;
            /**
                * <p>Contains the parameters that define a job.</p>
                */
            SelectParameters?: SelectParameters;
            /**
                * <p>Contains information about the location where the select job results are stored.</p>
                */
            OutputLocation?: OutputLocation;
    }
    export namespace JobParameters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobParameters) => any;
    }
    /**
        * <p>Provides options for initiating an Amazon S3 Glacier job.</p>
        */
    export interface InitiateJobInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>Provides options for specifying job information.</p>
                */
            jobParameters?: JobParameters;
    }
    export namespace InitiateJobInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateJobInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface InitiateJobOutput {
            /**
                * <p>The relative URI path of the job.</p>
                */
            location?: string;
            /**
                * <p>The ID of the job.</p>
                */
            jobId?: string;
            /**
                * <p>The path to the location of where the select results are stored.</p>
                */
            jobOutputPath?: string;
    }
    export namespace InitiateJobOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateJobOutput) => any;
    }
    /**
        * <p>Returned if there is insufficient capacity to process this expedited request. This
        *          error only applies to expedited retrievals and not to standard or bulk
        *          retrievals.</p>
        */
    export class InsufficientCapacityException extends __BaseException {
            readonly name: "InsufficientCapacityException";
            readonly $fault: "client";
            type?: string;
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InsufficientCapacityException, __BaseException>);
    }
    /**
        * <p>Returned if a retrieval job would exceed the current data policy's retrieval rate
        *          limit. For more information about data retrieval policies,</p>
        */
    export class PolicyEnforcedException extends __BaseException {
            readonly name: "PolicyEnforcedException";
            readonly $fault: "client";
            /**
                * <p>Client</p>
                */
            type?: string;
            /**
                * <p>PolicyEnforcedException</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyEnforcedException, __BaseException>);
    }
    /**
        * <p>Provides options for initiating a multipart upload to an Amazon S3 Glacier
        *          vault.</p>
        */
    export interface InitiateMultipartUploadInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The archive description that you are uploading in parts.</p>
                *          <p>The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example
                *          1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
                *          allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</p>
                */
            archiveDescription?: string;
            /**
                * <p>The size of each part except the last, in bytes. The last part can be smaller than
                *          this part size.</p>
                */
            partSize?: string;
    }
    export namespace InitiateMultipartUploadInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateMultipartUploadInput) => any;
    }
    /**
        * <p>The Amazon S3 Glacier response to your request.</p>
        */
    export interface InitiateMultipartUploadOutput {
            /**
                * <p>The relative URI path of the multipart upload ID Amazon S3 Glacier created.</p>
                */
            location?: string;
            /**
                * <p>The ID of the multipart upload. This value is also included as part of the
                *          location.</p>
                */
            uploadId?: string;
    }
    export namespace InitiateMultipartUploadOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateMultipartUploadOutput) => any;
    }
    /**
        * <p>Contains the vault lock policy.</p>
        */
    export interface VaultLockPolicy {
            /**
                * <p>The vault lock policy.</p>
                */
            Policy?: string;
    }
    export namespace VaultLockPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VaultLockPolicy) => any;
    }
    /**
        * <p>The input values for <code>InitiateVaultLock</code>.</p>
        */
    export interface InitiateVaultLockInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The vault lock policy as a JSON string, which uses "\" as an escape
                *          character.</p>
                */
            policy?: VaultLockPolicy;
    }
    export namespace InitiateVaultLockInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateVaultLockInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface InitiateVaultLockOutput {
            /**
                * <p>The lock ID, which is used to complete the vault locking process.</p>
                */
            lockId?: string;
    }
    export namespace InitiateVaultLockOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InitiateVaultLockOutput) => any;
    }
    /**
        * <p>Provides options for retrieving a job list for an Amazon S3 Glacier vault.</p>
        */
    export interface ListJobsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The maximum number of jobs to be returned. The default limit is 50. The number of
                *          jobs returned might be fewer than the specified limit, but the number of returned jobs
                *          never exceeds the limit.</p>
                */
            limit?: number;
            /**
                * <p>An opaque string used for pagination. This value specifies the job at which the
                *          listing of jobs should begin. Get the marker value from a previous List Jobs response. You
                *          only need to include the marker if you are continuing the pagination of results started in
                *          a previous List Jobs request.</p>
                */
            marker?: string;
            /**
                * <p>The type of job status to return. You can specify the following values:
                *             <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code>.</p>
                */
            statuscode?: string;
            /**
                * <p>The state of the jobs to return. You can specify <code>true</code> or
                *             <code>false</code>.</p>
                */
            completed?: string;
    }
    export namespace ListJobsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface ListJobsOutput {
            /**
                * <p>A list of job objects. Each job object contains metadata describing the
                *          job.</p>
                */
            JobList?: GlacierJobDescription[];
            /**
                * <p>
                *          An opaque string used for pagination that specifies the job at which the listing of jobs should begin.
                *          You get the <code>marker</code> value from a previous List Jobs response.
                *          You only need to include the marker if you are continuing the pagination of the results started in a
                *          previous List Jobs request. </p>
                */
            Marker?: string;
    }
    export namespace ListJobsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsOutput) => any;
    }
    /**
        * <p>Provides options for retrieving list of in-progress multipart uploads for an Amazon
        *          Glacier vault.</p>
        */
    export interface ListMultipartUploadsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>Specifies the maximum number of uploads returned in the response body. If this value
                *          is not specified, the List Uploads operation returns up to 50 uploads.</p>
                */
            limit?: number;
            /**
                * <p>An opaque string used for pagination. This value specifies the upload at which the
                *          listing of uploads should begin. Get the marker value from a previous List Uploads
                *          response. You need only include the marker if you are continuing the pagination of results
                *          started in a previous List Uploads request.</p>
                */
            marker?: string;
    }
    export namespace ListMultipartUploadsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMultipartUploadsInput) => any;
    }
    /**
        * <p>A list of in-progress multipart uploads for a vault.</p>
        */
    export interface UploadListElement {
            /**
                * <p>The ID of a multipart upload.</p>
                */
            MultipartUploadId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the vault that contains the archive.</p>
                */
            VaultARN?: string;
            /**
                * <p>The description of the archive that was specified in the Initiate Multipart Upload
                *          request.</p>
                */
            ArchiveDescription?: string;
            /**
                * <p>The part size, in bytes, specified in the Initiate Multipart Upload request. This is
                *          the size of all the parts in the upload except the last part, which may be smaller than
                *          this size.</p>
                */
            PartSizeInBytes?: number;
            /**
                * <p>The UTC time at which the multipart upload was initiated.</p>
                */
            CreationDate?: string;
    }
    export namespace UploadListElement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadListElement) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface ListMultipartUploadsOutput {
            /**
                * <p>A list of in-progress multipart uploads.</p>
                */
            UploadsList?: UploadListElement[];
            /**
                * <p>An opaque string that represents where to continue pagination of the results. You use
                *          the marker in a new List Multipart Uploads request to obtain more uploads in the list. If
                *          there are no more uploads, this value is <code>null</code>.</p>
                */
            Marker?: string;
    }
    export namespace ListMultipartUploadsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMultipartUploadsOutput) => any;
    }
    /**
        * <p>Provides options for retrieving a list of parts of an archive that have been uploaded
        *          in a specific multipart upload.</p>
        */
    export interface ListPartsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The upload ID of the multipart upload.</p>
                */
            uploadId: string | undefined;
            /**
                * <p>An opaque string used for pagination. This value specifies the part at which the
                *          listing of parts should begin. Get the marker value from the response of a previous List
                *          Parts response. You need only include the marker if you are continuing the pagination of
                *          results started in a previous List Parts request.</p>
                */
            marker?: string;
            /**
                * <p>The maximum number of parts to be returned. The default limit is 50. The number of
                *          parts returned might be fewer than the specified limit, but the number of returned parts
                *          never exceeds the limit.</p>
                */
            limit?: number;
    }
    export namespace ListPartsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPartsInput) => any;
    }
    /**
        * <p>A list of the part sizes of the multipart upload.</p>
        */
    export interface PartListElement {
            /**
                * <p>The byte range of a part, inclusive of the upper value of the range.</p>
                */
            RangeInBytes?: string;
            /**
                * <p>The SHA256 tree hash value that Amazon S3 Glacier calculated for the part. This field is
                *          never <code>null</code>.</p>
                */
            SHA256TreeHash?: string;
    }
    export namespace PartListElement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PartListElement) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface ListPartsOutput {
            /**
                * <p>The ID of the upload to which the parts are associated.</p>
                */
            MultipartUploadId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the vault to which the multipart upload was
                *          initiated.</p>
                */
            VaultARN?: string;
            /**
                * <p>The description of the archive that was specified in the Initiate Multipart Upload
                *          request.</p>
                */
            ArchiveDescription?: string;
            /**
                * <p>The part size in bytes. This is the same value that you specified in the Initiate
                *          Multipart Upload request.</p>
                */
            PartSizeInBytes?: number;
            /**
                * <p>The UTC time at which the multipart upload was initiated.</p>
                */
            CreationDate?: string;
            /**
                * <p>A list of the part sizes of the multipart upload. Each object in the array contains a
                *          <code>RangeBytes</code> and <code>sha256-tree-hash</code> name/value
                *          pair.</p>
                */
            Parts?: PartListElement[];
            /**
                * <p>An opaque string that represents where to continue pagination of the results. You use
                *          the marker in a new List Parts request to obtain more jobs in the list. If there are no
                *          more parts, this value is <code>null</code>.</p>
                */
            Marker?: string;
    }
    export namespace ListPartsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPartsOutput) => any;
    }
    export interface ListProvisionedCapacityInput {
            /**
                * <p>The AWS account ID of the account that owns the vault. You can either specify an AWS
                *          account ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the AWS
                *          account ID associated with the credentials used to sign the request. If you use an account
                *          ID, don't include any hyphens ('-') in the ID. </p>
                */
            accountId: string | undefined;
    }
    export namespace ListProvisionedCapacityInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisionedCapacityInput) => any;
    }
    /**
        * <p>The definition for a provisioned capacity unit.</p>
        */
    export interface ProvisionedCapacityDescription {
            /**
                * <p>The ID that identifies the provisioned capacity unit.</p>
                */
            CapacityId?: string;
            /**
                * <p>The date that the provisioned capacity unit was purchased, in Universal Coordinated Time (UTC).</p>
                */
            StartDate?: string;
            /**
                * <p>The date that the provisioned capacity unit expires, in Universal Coordinated Time (UTC).</p>
                */
            ExpirationDate?: string;
    }
    export namespace ProvisionedCapacityDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedCapacityDescription) => any;
    }
    export interface ListProvisionedCapacityOutput {
            /**
                * <p>The response body contains the following JSON fields.</p>
                */
            ProvisionedCapacityList?: ProvisionedCapacityDescription[];
    }
    export namespace ListProvisionedCapacityOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisionedCapacityOutput) => any;
    }
    /**
        * <p>The input value for <code>ListTagsForVaultInput</code>.</p>
        */
    export interface ListTagsForVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
    }
    export namespace ListTagsForVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForVaultInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface ListTagsForVaultOutput {
            /**
                * <p>The tags attached to the vault. Each tag is composed of a key and a value.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ListTagsForVaultOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForVaultOutput) => any;
    }
    /**
        * <p>Provides options to retrieve the vault list owned by the calling user's account. The
        *          list provides metadata information for each vault.</p>
        */
    export interface ListVaultsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>A string used for pagination. The marker specifies the vault ARN after which the
                *          listing of vaults should begin.</p>
                */
            marker?: string;
            /**
                * <p>The maximum number of vaults to be returned. The default limit is 10. The number of
                *          vaults returned might be fewer than the specified limit, but the number of returned vaults
                *          never exceeds the limit.</p>
                */
            limit?: number;
    }
    export namespace ListVaultsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVaultsInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface ListVaultsOutput {
            /**
                * <p>List of vaults.</p>
                */
            VaultList?: DescribeVaultOutput[];
            /**
                * <p>The vault ARN at which to continue pagination of the results. You use the marker in
                *          another List Vaults request to obtain more vaults in the list.</p>
                */
            Marker?: string;
    }
    export namespace ListVaultsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVaultsOutput) => any;
    }
    export interface PurchaseProvisionedCapacityInput {
            /**
                * <p>The AWS account ID of the account that owns the vault. You can either specify an AWS
                *          account ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the AWS
                *          account ID associated with the credentials used to sign the request. If you use an account
                *          ID, don't include any hyphens ('-') in the ID. </p>
                */
            accountId: string | undefined;
    }
    export namespace PurchaseProvisionedCapacityInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PurchaseProvisionedCapacityInput) => any;
    }
    export interface PurchaseProvisionedCapacityOutput {
            /**
                * <p>The ID that identifies the provisioned capacity unit.</p>
                */
            capacityId?: string;
    }
    export namespace PurchaseProvisionedCapacityOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PurchaseProvisionedCapacityOutput) => any;
    }
    /**
        * <p>The input value for <code>RemoveTagsFromVaultInput</code>.</p>
        */
    export interface RemoveTagsFromVaultInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>A list of tag keys. Each corresponding tag is removed from the vault.</p>
                */
            TagKeys?: string[];
    }
    export namespace RemoveTagsFromVaultInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveTagsFromVaultInput) => any;
    }
    /**
        * <p>SetDataRetrievalPolicy input.</p>
        */
    export interface SetDataRetrievalPolicyInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS
                *          account ID associated with the credentials used to sign the request. You can either specify
                *          an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon
                *          Glacier uses the AWS account ID associated with the credentials used to sign the request.
                *          If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The data retrieval policy in JSON format.</p>
                */
            Policy?: DataRetrievalPolicy;
    }
    export namespace SetDataRetrievalPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetDataRetrievalPolicyInput) => any;
    }
    /**
        * <p>SetVaultAccessPolicy input.</p>
        */
    export interface SetVaultAccessPolicyInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The vault access policy as a JSON string.</p>
                */
            policy?: VaultAccessPolicy;
    }
    export namespace SetVaultAccessPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetVaultAccessPolicyInput) => any;
    }
    /**
        * <p>Provides options to configure notifications that will be sent when specific events
        *          happen to a vault.</p>
        */
    export interface SetVaultNotificationsInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>Provides options for specifying notification configuration.</p>
                */
            vaultNotificationConfig?: VaultNotificationConfig;
    }
    export namespace SetVaultNotificationsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetVaultNotificationsInput) => any;
    }
    /**
        * <p>Returned if, when uploading an archive, Amazon S3 Glacier times out while receiving the
        *          upload.</p>
        */
    export class RequestTimeoutException extends __BaseException {
            readonly name: "RequestTimeoutException";
            readonly $fault: "client";
            /**
                * <p>Client</p>
                */
            type?: string;
            /**
                * <p>408 Request Timeout</p>
                */
            code?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<RequestTimeoutException, __BaseException>);
    }
    /**
        * <p>Provides options to add an archive to a vault.</p>
        */
    export interface UploadArchiveInput {
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The optional description of the archive you are uploading.</p>
                */
            archiveDescription?: string;
            /**
                * <p>The SHA256 tree hash of the data being uploaded.</p>
                */
            checksum?: string;
            /**
                * <p>The data to upload.</p>
                */
            body?: Readable | ReadableStream | Blob;
    }
    export namespace UploadArchiveInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadArchiveInput) => any;
    }
    /**
        * <p>Provides options to upload a part of an archive in a multipart upload
        *          operation.</p>
        */
    export interface UploadMultipartPartInput {
            /**
                * <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
                *          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
                *          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
                *          credentials used to sign the request. If you use an account ID, do not include any hyphens
                *          ('-') in the ID. </p>
                */
            accountId: string | undefined;
            /**
                * <p>The name of the vault.</p>
                */
            vaultName: string | undefined;
            /**
                * <p>The upload ID of the multipart upload.</p>
                */
            uploadId: string | undefined;
            /**
                * <p>The SHA256 tree hash of the data being uploaded.</p>
                */
            checksum?: string;
            /**
                * <p>Identifies the range of bytes in the assembled archive that will be uploaded in this
                *          part. Amazon S3 Glacier uses this information to assemble the archive in the proper sequence.
                *          The format of this header follows RFC 2616. An example header is Content-Range:bytes
                *          0-4194303/*.</p>
                */
            range?: string;
            /**
                * <p>The data to upload.</p>
                */
            body?: Readable | ReadableStream | Blob;
    }
    export namespace UploadMultipartPartInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadMultipartPartInput) => any;
    }
    /**
        * <p>Contains the Amazon S3 Glacier response to your request.</p>
        */
    export interface UploadMultipartPartOutput {
            /**
                * <p>The SHA256 tree hash that Amazon S3 Glacier computed for the uploaded part.</p>
                */
            checksum?: string;
    }
    export namespace UploadMultipartPartOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadMultipartPartOutput) => any;
    }
}

declare module '@aws-sdk/client-glacier/node_modules/@aws-sdk/client-glacier/dist-types/models/GlacierServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Glacier service.
        */
    export class GlacierServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

